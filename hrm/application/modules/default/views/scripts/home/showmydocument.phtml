<style type="text/css">
.trano .x-tree-node-icon {
	background-image:url(/images/icons/fam/page_attachment.gif);
}
.starter .x-tree-node-icon {
    background-image:url(/images/icons/fam/copy.gif);
}
.next .x-tree-node-icon {
    background-image:url(/images/icons/arrow-down.gif);
}
.ender .x-tree-node-icon {
    background-image:url(/images/icons/fam/page_tick.gif);
}
</style>

<script type="text/javascript">
Ext.onReady(function(){
<?php echo $this->action('index','textfield'); ?>
//	var proxy = new Ext.data.HttpProxy({
//	    url : '/default/home/getmydocument'
//	});
//
//	var reader = new Ext.data.JsonReader({
//        idProperty: 'id',
//        totalProperty: 'count',
//        root : 'posts'},
//         [
//			{name: 'id'},
//			{name: 'item_id'},
//			{name: 'type'},
//			{name: 'date', type: 'date',  dateFormat: 'd-m-Y H:i:s'},
//			{name: 'username'},
//			{name: 'mail'},
//			{name: 'comment'},
//			{name: 'approve'},
//			{name: 'invalid'},
//			{name: 'start'},
//			{name: 'end'}
//          ]
//		);
//
//	var store = new Ext.data.GroupingStore({
//        reader: reader,
//        proxy: proxy,
//        sortInfo:{field: 'id', direction: "ASC"},
//        groupField:'item_id'
//
//    });
//
//	store.load();
//
//    searchDocument = function(){
//        var docs = Ext.getCmp('document-text').getValue();
//    	store.proxy.setUrl('/default/home/getmydocument/id/' + docs);
//    	Ext.getCmp('user-grids').getStore().reload();
//    	Ext.getCmp('user-grids').getView().refresh();
//    };
//
//    searchDocumentType = function(){
//        var docs = Ext.getCmp('combo-type').getValue();
//    	store.proxy.setUrl('/default/home/getmydocument/type/' + docs);
//    	Ext.getCmp('user-grids').getStore().reload();
//    	Ext.getCmp('user-grids').getView().refresh();
//    };
//	var grid = new Ext.grid.GridPanel({
//        store: store,
//        id: 'user-grids',
//        stateful: false,
//        loadMask: true,
//        title: 'My Submitted Document',
//        columns: [
//            {header: "Document ID", width: 100, sortable: true, dataIndex: 'item_id'},
//            {header: "", width: 60, dataIndex: 'start',renderer: function (v,p,r) {
//
//            	var stat = '';
//				if (r.data['invalid'] != undefined && r.data['invalid'] != '')
//					stat =  "<img src='/images/lov_cancel.gif'>";
//				else
//					stat =  "<img src='/images/lov_select.gif'>";
//
//            	if (v == 1)
//					return "<img src='/images/icons/fam/copy.gif'>" + stat;
//				else if (r.data['end'] == 0 && v == 0)
//					return "<img src='/images/icons/arrow-down.gif'>" + stat;
//				else if (r.data['end'] == 1 && v == 0)
//					return "<img src='/images/icons/fam/page_tick.gif'>" + stat;
//
//
//            }},
//            {header: "User Name", width: 100, sortable: true, dataIndex: 'username',renderer: function (v,p,r) {
//                if (r.data['mail'] != "" && r.data['mail'] != null && r.data['mail'] != undefined)
//                    return '<a href="mailto:' + r.data['mail'] + '">' + v + '</a>';
//                else
//                    return v;
//            }},
//            {header: "Date", width: 80, sortable: true, dataIndex: 'date',renderer: Ext.util.Format.dateRenderer('d/m/Y H:i:s')},
//            {header: "Status", width: 100, sortable: true, dataIndex: 'approve'},
//            {header: "Comment", width: 200, sortable: true, dataIndex: 'comment'}
//       ],
//
//        view: new Ext.grid.GroupingView({
//            forceFit:true,
//        	hideGroupedColumn :true,
//        	startCollapsed: true,
//        	startGroup: new Ext.XTemplate(
//      			  '<div id="{groupId}" class="x-grid-group {cls}">',
//      			  '<div id="{groupId}-hd" class="x-grid-group-hd" style="{style}"><div class="x-grid-group-title">',
//      			  '{text}, Type : {[values.rs[0].get("type")]}',
//      			  '</div></div><div id="{groupId}-bd" class="x-grid-group-body">'
//      			)
////            groupTextTpl: '{text} ({[values.rs.length]} {[values.rs.length > 1 ? "Items" : "Item"]})'
//            ,enableRowBody:true
//            ,getRowClass:function(record, rowIndex, p, store) {
//                p.body = record.get('invalid');
//                if (p.body)
//                    return 'x-grid3-row-with-body3';
//             }
//        }),
//        frame:true,
//        height: 400,
//        layout: 'fit',
//        renderTo: 'grids',
//        bbar: new Ext.PagingToolbar({
//            id: 'paging',
//            pageSize: 100,
//            store: store,
//            displayInfo: true,
//            displayMsg: 'Displaying data {0} - {1} of {2}',
//            emptyMsg: "No data to display"
//        }),
//        tbar: [
//				{
//					text: 'Document ID',
//					xtype:'label',
//				    style: 'margin-right: 5px'
//				},
//				{
//					xtype: 'textfield',
//					id: 'document-text'
//				},
//				{
//				    text: 'Search',
//				    iconCls: 'search-icon',
//				    handler: searchDocument,
//				    scope: this
//				},
//				'-',
//				{
//					text: 'Document Type',
//					xtype:'label',
//				    style: 'margin-right: 5px'
//				},
//				{
//					 id: 'combo-type',
//		             name: 'workflow_item_type_id',
//		             hiddenName : 'workflow_item_type_id',
//		             width: 100,
//		             xtype: 'combo',
//		             triggerAction: 'all',
//		             mode: 'remote',
//		             displayField: 'name',
//		             valueField: 'workflow_item_type_id',
//		             store: new Ext.data.JsonStore({
//		                 autoLoad: true,
//		                 url: '/admin/workflow/listworkflowitemtype',
//		                 root: 'posts',
//		                  fields:[
//		                      { name: "name"},{ name: "workflow_item_type_id"}
//		                  ]
//		             })
//	             },
//				{
//				    text: 'Search',
//				    iconCls: 'search-icon',
//				    handler: searchDocumentType,
//				    scope: this
//				}
//               ]
//    });
//	


//});

/*!
 * Ext JS Library 3.1.1
 * Copyright(c) 2006-2010 Ext JS, LLC
 * licensing@extjs.com
 * http://www.extjs.com/license
 */
/*
Ext.onReady(function() {
    Ext.QuickTips.init();

    var tree = new Ext.ux.tree.TreeGrid({
        title: 'My Submitted Documents',
//        layout: 'fit',
        width: 800,
        loadMask: true,
        renderTo: 'grids',
        enableDD: true,

        columns:[{
            header: 'Project',
            dataIndex: 'prj_kode',
            width: 200,
            tpl: new Ext.XTemplate(
                '<tpl if="isDocs == true && isPerson == false">','{trano}',
                '</tpl>',
                '<tpl if="isDocs == true && isPerson == true">',
                    '<tpl for="approve">',
                        '<tpl if="approve == true">',
                            '<img src="/images/lov_select.gif">',
                        '</tpl>',
                        '<tpl if="reject == true">',
                            '<img src="/images/lov_cancel.gif">',
                        '</tpl>',
                        '<tpl if="waiting == true">',
                            '<img src="/images/icons/fam/page_refresh.gif">',
                        '</tpl>',
                    '</tpl>',
                    '{username}',
                '</tpl>',
                '<tpl if="isDocs != true && isPerson == false">',
                    '{prj_kode}',
                '</tpl>'
            )
        },{
            header: 'Status',
            width: 150,
//            align: 'center',
//            sortType: 'asFloat'
            tpl: new Ext.XTemplate(
                '<tpl for="approve">',
                    '{msg}',
                 '</tpl>'
            )
        },{
            header: 'Date',
            width: 110,
            dataIndex: 'date'
        },{
            header: 'Comment',
            width: 300,
            dataIndex: 'comment',
            tpl : new Ext.XTemplate (
//                '<tpl if="comment.length &gt; 0">',
//                    '<img src="/images/icons/fam/page_find.gif">',
//                '</tpl>',
                '{comment}'
            )
        }],

        loader: new Ext.ux.tree.TreeGridLoader({
                dataUrl: '/default/home/getmydocument',
                requestMethod: "POST",
                id: 'src'
//                baseParams: {
//                    fromDate: "2010-01-01",
//                    toDate: "2010-01-01",
//                    dateField: "systemDate"
//                }
        })

    });
    tree.getLoader().on("beforeload", function(treeLoader, node) {
            treeLoader.baseParams = {
                "prj_kode" : node.attributes.prj_kode,
                "trano" : node.attributes.trano,
                "isDocs" : node.attributes.isDocs,
                "workflow_item_id" : node.attributes.workflow_item_id,
                "workflow_id" : node.attributes.workflow_id,
                "workflow_structure_id" : node.attributes.workflow_structure_id
            };
    });
    
});    
*/

function showPrjList()
{
    var columns = [
                    {header:'Project Code',width:100,sortable:true,dataIndex:'prj_kode'},
                    {header:'Project Name',width:150,sortable:true,dataIndex:'prj_nama'},
                ];

    data =  [

            {name: 'prj_kode', mapping: 'Prj_Kode'},
            {name: 'prj_nama', mapping: 'Prj_Nama'},
            ];


    urlJson = '/default/project/list';

    primaryKey = 'prj_kode';
    Pk = primaryKey;
    widthGrid = 380;
    heightGrid = 250;

    var stores = new Ext.data.Store({
        proxy:new Ext.data.HttpProxy({
        url: urlJson
         }),
            reader: new Ext.data.JsonReader({
        root: 'posts',
        totalProperty: 'count'
    },data)
        });

    yAxis=100;
    grids = function()
    {
        grids.superclass.constructor.call(this, {
        store: stores,
        columns: columns,
        x:0,
        y:yAxis,
        id:primaryKey+'_grid',
        loadMask: true,
        bbar:[ new Ext.PagingToolbar({
            pageSize: 100,
            store: stores,
            displayInfo: true,
            displayMsg: 'Displaying data {0} - {1} of {2}',
            emptyMsg: "No data to display"
        })],
        height:heightGrid,
        width:widthGrid,
        listeners: {
            'rowdblclick': function(g, rowIndex, e){
				        	objectName = 'prj_kode';
				            txtBoxChange = 'prj_kode_text';
				            closeForm = true;
				            formId = 'a-form-panel-pjr_kode_button';
				            prox = 'trano_proxy';
				            gri = 'trano_grid';

				            var record = g.getStore().getAt(rowIndex).get(objectName);
				            var record2 = g.getStore().getAt(rowIndex).get("prj_nama");
                            Ext.getCmp('prj_kode_text').setValue(record);

                            showDocs('','',record);
                            Ext.getCmp(formId).close();

                            window.setTimeout(function(){
                                    isDblClick = false;
                            }, 0);
                    }
            }
    });
    }
    stores.load();

    Ext.extend(grids, Ext.grid.GridPanel);
    Ext.extend(txtboks,Ext.form.TextField);//PR
    searchPrjKode = function(field,e){
        newUrl = '/default/project/listByParams/name/Prj_Kode/data/' + field.getValue();    prox = Pk+'_proxy';
        gri = Pk+'_grid';
        proxies = Ext.getCmp(gri).getStore();
        proxies.proxy = new Ext.data.HttpProxy({
            url: newUrl
             });
        Ext.getCmp(gri).getStore().reload();

    }
    searchPrjName = function(field,e){
        newUrl = '/default/project/listByParams/name/Prj_Nama/data/' + field.getValue();    prox = Pk+'_proxy';
        gri = Pk+'_grid';
        proxies = Ext.getCmp(gri).getStore();
        proxies.proxy = new Ext.data.HttpProxy({
            url: newUrl
             });
        Ext.getCmp(gri).getStore().reload();
    }

    var aForm =  new Ext.Window({
        id: 'a-form-panel-pjr_kode_button',
        layout: 'absolute',
        minWidth: 300,
        minHeight: 200,
        stateful:false,
        modal: true,
        resizable: false,
        width: 400,
        height: 400,
        items : [
            {
            x: 10,
            y: 12,
            xtype: 'label',
            text: 'Budget Code:'
            },
             new txtboks(80,10,80,'project_code',searchPrjKode),
             {
            x: 170,
            y: 12,
            xtype: 'label',
            text: 'Budget Name:'
            },
            new txtboks(240,10,80,'project_name',searchPrjName),
             new grids('project_list')
        ]

      });
      aForm.title = 'Choose Project';
      aForm.show();
}    

function showDocs(trano,type,prjKode)
{
    var order = Ext.getCmp('order_by').getValue();
    var trano = Ext.getCmp('trano_text').getValue();
    var type = Ext.getCmp('combo-type').getRawValue();
    var prjKode = Ext.getCmp('prj_kode_text').getValue();

    var hideFinal = Ext.getCmp('finalapp').getValue();
    var hideReject = Ext.getCmp('rejectapp').getValue();

    myPanel = Ext.getCmp('result-panel');
    myPanel.body.load({
        url: '/default/home/showdocssubmit',
        scripts : true,
        params: {trano: trano,type: type, prj_kode: prjKode, orderby: order, hidefinal: hideFinal, hidereject: hideReject}
    });
}

new Ext.Panel({

    id: 'search-panel',
    title: 'Search My Submitted Document',
    renderTo: 'panels',
    frame: true,
    layout: 'form',
    width: 500,
    labelAlign: 'left',
    labelWidth: 130,
    items: [
            {
             layout : 'column',
             items:[
                 {
                     columnWidth:.5,
                     layout :'form',
                     items:[
                        {
                             id: 'combo-type',
                             fieldLabel: 'Transaction Type',
                             hiddenName : 'workflow_item_type_id',
                             width: 100,
                             xtype: 'combo',
                             triggerAction: 'all',
                             mode: 'remote',
                             editable: false,
                             displayField: 'name',
                             valueField: 'workflow_item_type_id',
                             store: new Ext.data.JsonStore({
                                 url: '/admin/workflow/listworkflowitemtype',
                                 root: 'posts',
                                  fields:[
                                      { name: "name"},{ name: "workflow_item_type_id"}
                                  ]
                             }),
                            listeners: {
                                'select': function(t,n,o){
                                    showDocs();
                                }
                            }
                        },
                        {
                            xtype: 'textfield',
                            id: 'trano_text',
                            fieldLabel: 'Trano',
                            width: 120
                        },
                        {
                            fieldLabel: 'Project Code',
                             id:'prj_kode_text',
                             name:'prj_kode',
                             allowBlank: false,
                             xtype:"trigger",
                             triggerClass: 'teropong',
                             width: 80,
                             onTriggerClick:
                              function ()
                                {
                                  showPrjList();
                                }
                        },
                        {
                             fieldLabel : 'Order By',
                             id:'order_by',
                             xtype:'combo',
                             store: new Ext.data.SimpleStore({
                                        fields:['field', 'value']
                                                ,data:[
                                                       ['Project Code','prj_kode'],
                                                       ['Submit Date','date'],
                                                       ['Approval Date (All)','date_approve'],
                                                       ['Approval Date (Final)','date_approve_final'],
                                                       ['Trano','item_id']
                                                   ]

                                            }),
                             valueField:'value',
                             displayField:'field',
                             typeAhead: true,
                             mode: 'local',
                             triggerAction: 'all',
                             allowBlank: false,
                             selectOnFocus:true,
                             forceSelection:false,
                             width: 140

                         }
                     ]
                 },{
                     columnWidth:.5,
                     layout: 'form',
                     items :[
                        {
                             xtype:'checkbox',
                             id:'finalapp',
                             name:'finalapp',
                             fieldLabel:'Hide Final Approval',
                             trueText: '1',
                             falseText: '0'
                        },
                        {
                             xtype:'checkbox',
                             id:'rejectapp',
                             name:'rejectapp',
                             fieldLabel:'Hide Rejected',
                             trueText: '1',
                             falseText: '0'
                        }
                     ]
                 }
             ]
            }
    ],
    buttons: [
        {
            text: 'Search',
            id: 'btn-search',
            icon:"/images/g_rec_src.png",
            handler: function(){ showDocs()}

        }
    ]

});

new Ext.Panel({

    id: 'result-panel',
    renderTo: 'panels2',
    border: false,
    layout: 'fit'
});
}); 
</script>

<!--<div id="grids"></div>-->
<div id="panels"></div><br />
<div id="panels2"></div>

