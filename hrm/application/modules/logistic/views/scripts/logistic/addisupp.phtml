<script type="text/javascript">
var t = 0;
var TEMPORARY = 0;
var pajak;
var grandtotal = 0;

var oripo;

showAddPO = function(){
    myPanel = Ext.getCmp('abs-budget-panel');
    myPanel.body.load({
        url: '/procurement/procurement/addpo',
        scripts : true
    });
};


//custom summary renderer example
function totals(t, params, data){

	 return t;

}

Ext.ux.grid.GridSummary.Calculations = {
	    'jumlah': function(v, record, field){
	t = v + Ext.num(record.data[field], 0);
	        return t;
	    }
};

var summary = new Ext.ux.grid.GridSummary();


 var polist = Ext.data.Record.create([{
  name: 'id',
    type: 'integer'
},{
    name: 'urut',
    type: 'string'
},{
    name: 'po_no',
    type: 'string'
},{
    name: 'pr_no',
    type: 'string'
},{
    name: 'tgl_po',
    type: 'date',
    dateFormat: 'Y-m-d'
},{
    name: 'tgl_pr',
    type: 'date',
    dateFormat: 'Y-m-d'
},{
    name: 'pr_number',
    type: 'string'
},{
    name: 'prj_kode',
    type: 'string'
}, {
    name: 'prj_nama',
    type: 'string'
},{
    name: 'sit_kode',
    type: 'string'
},{
    name: 'sit_nama',
    type: 'string'
},{
    name: 'workid',
    type: 'string'
},{
    name: 'workname',
    type: 'string'
},{
    name: 'kode_brg',
    type: 'string'
},{
    name: 'nama_brg',
    type: 'string'
},{
    name: 'qty',
    type: 'string'
},{
    name: 'net_act',
    type: 'string'
},{
    name: 'uom',
    type: 'string'
},{
    name: 'price',
    type:'float'
},{
    name: 'totalPrice',
    type: 'float'
},{
    name: 'totalPriceISUPP',
    type: 'float'
},{
    name: 'totalUSD',
    type: 'float'
},{
    name: 'val_kode',
    type: 'string'
},{
    name: 'totalISUPP',
    type: 'float'
},{
    name: 'balanceISUPP',
    type: 'float'
},{
    name: 'sup_kode',
    type: 'string'
},{
    name: 'sup_nama',
    type: 'string'
},{
    name: 'statusppn',
    type: 'string'
},{
    name: 'pomyob',
    type: 'string'
},{
    name: 'tujuan',
    type: 'string'
},{
    name: 'remark',
    type: 'string'
},{
    name: 'tgl_kirim',
    type: 'date',
    dateFormat: 'Y-m-d'
},{
    name: 'po_term',
    type: 'string'
},{
    name: 'budgettype',
    type: 'string'
},{
    name: 'po_type',
    type: 'string'
}
]);


var isupplist = Ext.data.Record.create([ {
    name: 'id',
    type: 'integer'
},{
    name: 'status',
    type: 'string'
},{
    name: 'urut',
    type: 'string'
},{
    name: 'po_no',
    type: 'string'
},{
    name: 'pr_no',
    type: 'string'
},{
    name: 'tgl_po',
    type: 'date',
    dateFormat: 'Y-m-d'
},{
    name: 'tgl_pr',
    type: 'date',
    dateFormat: 'Y-m-d'
},{
    name: 'prj_kode',
    type: 'string'
}, {
    name: 'prj_nama',
    type: 'string'
},{
    name: 'sit_kode',
    type: 'string'
},{
    name: 'sit_nama',
    type: 'string'
},{
    name: 'workid',
    type: 'string'
},{
    name: 'workname',
    type: 'string'
},{
    name: 'kode_brg',
    type: 'string'
},{
    name: 'nama_brg',
    type: 'string'
},{
    name: 'qty',
    type: 'string'
},{
    name: 'uom',
    type: 'string'
},{
    name: 'net_act',
    type: 'string'
},{
    name: 'price',
    type:'float'
},{
    name: 'totalIDR',
    type: 'float'
},{
    name: 'totalPrice',
    type: 'float'
},{
    name: 'totalPriceISUPP',
    type: 'float'
},{
    name: 'totalUSD',
    type: 'float'
},{
    name: 'val_kode',
    type: 'string'
},{
    name: 'currency',
    type: 'float'
},{
    name: 'totalISUPP',
    type: 'string'
},{
    name: 'inPO',
    type: 'string'
},{
    name: 'balanceISUPP',
    type: 'float'
},{
    name: 'sup_kode',
    type: 'string'
},{
    name: 'sup_nama',
    type: 'string'
},{
    name: 'po_number',
    type: 'string'
},{
    name: 'pr_number',
    type: 'string'
},{
    name: 'statusppn',
    type: 'string'
},{
    name: 'pomyob',
    type: 'string'
},{
    name: 'tujuan',
    type: 'string'
},{
    name: 'remark',
    type: 'string'
},{
    name: 'tgl_kirim',
    type: 'date',
    dateFormat: 'Y-m-d'
},{
    name: 'po_term',
    type: 'string'
},{
    name: 'budgettype',
    type: 'string'
},{
    name: 'po_type',
    type: 'string'
},{
    name: 'rateide',
    type: 'float'
}]);

var proxy = new Ext.data.HttpProxy({
	   url : '/default/home/getposummary'
	});

var storePO = new Ext.data.Store({
    id: 'po',
    proxy: proxy,
    reader: new Ext.data.JsonReader({fields: polist})
});

var writer = new Ext.data.JsonWriter({
    encode: true,
    writeAllFields: false
});

var proxy2 = new Ext.data.HttpProxy({
    api:{
    create: '/default/prd/list'
    }

});

var storeIsupp = new Ext.data.Store({

    reader: new Ext.data.JsonReader({
    totalProperty: 'count',
    idProperty: 'isupplist',
    root: 'posts',
    fields: isupplist})
});


 var datas = new Ext.data.SimpleStore({
        fields:['nilai', 'term']
                ,data:[
                       ['14','14'],
                       ['30','30'],
                       ['45','45']

                   ]

            });

 var dataori = new Ext.data.SimpleStore({
     fields:['nilai', 'ori']
             ,data:[
                    ['OPEX','OPEX'],
                    ['CAPEX','CAPEX'],

                ]

         });

 var datatype = new Ext.data.SimpleStore({
     fields:['nilai', 'type']
             ,data:[
                    ['Project','Project'],
                    ['Overhead','Overhead']

                ]

         });

 var userColumns = [
     new Ext.grid.RowNumberer(),
      {header: "",width: 30, dataIndex: 'id',renderer: function (v,p,r) {
            var qty = r.data['qty'];
	    	percent = (r.data['totalISUPP'] / qty) * 100;

    	if (percent < 100){
			return '<a href="#" onclick="addToISUPP();"><img src="/images/g_rec_add.png"></a>';
    	}
        else
    	{
    		p.attr ='ext:qtip="Supplier already sent all of this item to Warehouse"';
    		return '<img src="/images/icons/fam/page_tag_red.gif">';
//    		return '<a href="#" onclick="addToAFE(' + v + ');"><img src="/images/icons/fam/page_tag_red.gif"></a>';
    	}
    }},
//    {header:'No Trans',width:150,sortable:true,dataIndex:'trano'},
//    {header:'Date',width:80,sortable:true,dataIndex:'tgl_pr'},
    {header:'No',width:35,sortable:true,dataIndex:'urut'},
    {header:'Project ID',width:150,sortable:true,dataIndex:'prj_kode'},
    {header:'Project Name',width:150,sortable:true,dataIndex:'prj_nama'},
    {header:'Site Code',width:100,sortable:true,dataIndex:'sit_kode'},
    {header:'Site Name',width:100,sortable:true,dataIndex:'sit_nama'},
    {header:'Work ID',width:100,sortable:true,dataIndex:'workid'},
    {header:'Work Name',width:200,sortable:true,dataIndex:'workname'},
    {header:'Product Id',width:65,sortable:true,dataIndex:'kode_brg'},
    {header:'Product Name',width:200,sortable:true,dataIndex:'nama_brg'},
//    {header:'Valuta',width:70,sortable:true,dataIndex:'val_kode'},
    {header:'Qty',width:100,sortable:true,dataIndex:'qty',renderer:change,align:'right'},
    {header:'UoM',width:65,sortable:true,dataIndex:'uom'},
     {header: "Progress", width: 100, renderer: function(v,p,r) {
        var percent = 0;
	        if (r.data['qty'] != 0 && r.data['totalISUPP'] != 0)
	        {
	            var qty = r.data['qty'];
	        	percent = (r.data['totalISUPP'] / qty) * 100;
	        	if (percent > 100)
	            	percent = 100;
	        	percent = percent.toFixed(2);
				var warna = '#0a0';
	        	if (percent > 75)
	            	warna = '#FF3F7D';
	        	else if (percent > 50)
	            	warna = '#FFDA2F';
	        }
		return '<div class="meter-wrap"><div class="meter-value" style="background-color: ' + warna + '; width: ' + percent + '%;"><div class="meter-text"><b>' + percent + '%</b></div></div></div>';
    }}
 ]

 var userColumns2 = [
     new Ext.grid.RowNumberer(),
     {header: "",width: 60, dataIndex: 'id',css:'text-align:center;',renderer: function (v,p,r) {
  		return '<a href="#" onclick="editToISUPP();"><img src="/images/g_rec_upd.png"></a>&nbsp;<a href="#" onclick="delToISUPP();"><img src="/images/g_rec_del.png"></a>';
      }},

    {header:'No', name: 'urut', width:35,sortable:true,dataIndex:'urut'},
    {header:'Project ID', name: 'prj_kode', width:150,sortable:true,dataIndex:'prj_kode'},
    {header:'Project Name', name: 'prj_nama',width:150,sortable:true,dataIndex:'prj_nama'},
    {header:'Site Code', name: 'sit_kode', width:100,sortable:true,dataIndex:'sit_kode'},
    {header:'Site Name', name: 'sit_nama', width:150,sortable:true,dataIndex:'sit_nama'},
    {header:'Work ID', name: 'workid', width:100,sortable:true,dataIndex:'workid'},
    {header:'Work Name', name: 'workname', width:200,sortable:true,dataIndex:'workname'},
    {header:'Product Id', name: 'kode_brg', width:65,sortable:true,dataIndex:'kode_brg'},
    {header:'Product Name', name: 'nama_brg', width:200,sortable:true,dataIndex:'nama_brg'},
    {header:'Qty', name: 'qty', width:100,sortable:true,dataIndex:'qty',renderer:change},
    {header:'Uom', name: 'uom', width:55,sortable:true,dataIndex:'uom'},
//    {header: "Price", name: 'price', width: 100, sortable: true,align:'right', dataIndex: 'price' },
//        renderer: function (v,p,r) {
//            //if (r.data['val_kode'] == 'IDR')
//                    return CommaFormatted(r.data['price']);
//           // else
//                   // return CommaFormatted(r.data['hargaUSD']);
//    }},
//    {header: "Total", name: 'totalPrice', width: 150, sortable: true,align:'right', summaryType: 'jumlah', summaryRenderer: totals, dataIndex: 'totalPrice' }
//        			renderer: function (v,p,r) {
//
//                    return CommaFormatted(r.data['totalPrice']);
//             }},
 ]

<?php echo $this->action('popupgrid','grid'); ?>

function change(val)
    {
        return Ext.util.Format.number(val, '?0,000.00?');
    }

function getNewID()
{

	var maxRecordPO = storePO.getCount();

    var maxRecordISUPP = storeIsupp.getCount();

	var newID = maxRecordPO + maxRecordISUPP + 1;
;
	return newID;
}

function getPORecord(workid,kode_brg,isEdit)
{
	//Clear filter
	storePO.clearFilter();
	storePO.filterBy(function(record,id){
		if (!isEdit)
		{
			if (record.get('workid') == workid.toString() && record.get('kode_brg') == kode_brg.toString())
			{
				return record.get('workid');
			}
		}
		else
		{
			if (record.get('workid') == workid.toString() && (record.get('status') != '' || record.get('status') != undefined))
			{
				return record.get('workid');
			}
		}
	});
	if (storePO.getCount() > 0)
	{
		var rec = storePO.getAt(0);
	}

	storePO.clearFilter();
	return rec;
}

function resetButton()
{
	Ext.getCmp('cancel-isupp').setText('Cancel Add');
	Ext.getCmp('save-isupp').setText('Add to i-Supp List(Cart)');
}

function clearIsuppform()
{
     var teks = Ext.getCmp('isupp-form').findByType('textfield');
	    Ext.each(teks, function(t, index) {
	        t.setValue('');
	    });
}

function refreshForm()
{
	var tgl_sekarang = new Date();
    Ext.getCmp('val_kode_text').setValue('IDR');
	Ext.getCmp('curr_text').setValue('0');
//	Ext.getCmp('tgl_po_text').setValue(tgl_sekarang.format('Y-m-d'));

}

function cekQty()
{
    var newQty = Ext.getCmp('qty_text').getValue();
    var balanceQty = Ext.getCmp('balance_qty_text').getValue();
    var inisupp = Ext.getCmp('isupp_qty_text').getValue();

     newQty = parseFloat(newQty.toString().replace(/\$|\,/g,''));
     inisupp = parseFloat(inisupp.toString().replace(/\$|\,/g,''));
     balanceQty = parseFloat(balanceQty.toString().replace(/\$|\,/g,''));

    var newBalance = newQty + inisupp;

    if (newQty > balanceQty)
    {
//               Ext.getCmp('save-issupissup').disable();
               Ext.MessageBox.show({
               title: 'Error',
               msg: 'Request Quantity is over the Budget!',
               buttons: Ext.MessageBox.OK,
               icon: Ext.MessageBox.ERROR
                });
     return false;
    }
    else
    {

        return true;
    }
}

function cekTotal()
{
        var totpricepr = document.getElementById('tot-price-pr').innerHTML;

        var totpricepo = Ext.getCmp('total_price_text').getValue();
        var currency = Ext.getCmp('val_kode_text').getValue();

        document.getElementById('tot-price-po').innerHTML =  CommaFormatted(totpricepo.toString().replace(/\$|\,/g,''))+' '+currency;

        totpricepr = parseFloat(totpricepr.toString().replace(/\$|\,/g,''));
        totpricepo = parseFloat(totpricepo.toString().replace(/\$|\,/g,''));
//												console.log(totpricepr);

        if (totpricepo > totpricepr)
        {

//                   Ext.getCmp('save-issupissup').disable();
                   Ext.MessageBox.show({
                   title: 'Error',
                   msg: 'Request is over the Budget!',
                   buttons: Ext.MessageBox.OK,
                   icon: Ext.MessageBox.ERROR
            });
             return false;
        }
        else
        {


            return true;
        }
}


function hitungTotal()
{
       if (Ext.getCmp('po-qty').getValue() != undefined && Ext.getCmp('unit_price_text').getValue() != undefined)
                                                    {
                                                        var a = parseFloat(Ext.getCmp('po-qty').getValue().toString().replace(/\$|\,/g,''));
                                                        var b = parseFloat(Ext.getCmp('unit_price_text').getValue().toString().replace(/\$|\,/g,''));
                                                        //Ext.getCmp('total_price_text').setValue( CommaFormatted((a*b).toFixed(2)));
                                                        Ext.getCmp('total_price_text').setValue(CommaFormatted(a*b));
    //													Ext.getCmp('save-issupissup').enable();
                                                    }
}


function addToISUPP()
{
//	oripr = storePO.getAt(storePO.findExact('id', idPr));
        oripo = Ext.getCmp('po-detail-grid').getSelectionModel().getSelections();
//        console.log(oripr);
	if (oripo != undefined)
	{
				Ext.getCmp('save-isupp').setText('Add to i-supp List(Cart)');
//                Ext.getCmp('pr_no_text').setValue(oripr.data['trano']);
                Ext.getCmp('urut_text').setValue(oripo[0].data['urut']);
				Ext.getCmp('workid_text').setValue(oripo[0].data['workid']);
                Ext.getCmp('workname_text').setValue(oripo[0].data['workname']);
				Ext.getCmp('kode_brg_text').setValue(oripo[0].data['kode_brg']);
				Ext.getCmp('nama_brg_text').setValue(oripo[0].data['nama_brg']);
				Ext.getCmp('prj_kode_text').setValue(oripo[0].data['prj_kode']);
				Ext.getCmp('prj_nama_text').setValue(oripo[0].data['prj_nama']);
                Ext.getCmp('sit_kode_text').setValue(oripo[0].data['sit_kode']);
                Ext.getCmp('sit_nama_text').setValue(oripo[0].data['sit_nama']);

                Ext.getCmp('remark_text').setValue(oripo[0].data['remark']);

                var satuan = oripo[0].data['uom'];
                Ext.getCmp('qty_text').setValue('');
                Ext.getCmp('uom_text').setValue(satuan);
                Ext.getCmp('uom_text1').setValue(satuan);
                Ext.getCmp('uom_text2').setValue(satuan);
                Ext.getCmp('uom_text3').setValue(satuan);

                var poQty = oripo[0].data['qty'].toString().replace(/\$|\,/g,'');
                var isuppQty = oripo[0].data['totalISUPP'].toString().replace(/\$|\,/g,'');
		        Ext.getCmp('po_qty_text').setValue(CommaFormatted(poQty));
                Ext.getCmp('isupp_qty_text').setValue(CommaFormatted(isuppQty));

                var balance = parseFloat(poQty)-parseFloat(isuppQty);
                Ext.getCmp('balance_qty_text').setValue(CommaFormatted(balance));

				Ext.getCmp('po-detail-grid').disable();
				Ext.getCmp('cancel-isupp').setText('Cancel Add');
				Ext.getCmp('cancel-isupp').enable();
                oripo = oripo[0];
	}
	else
	{
		Ext.MessageBox.show({
	           title: 'Error',
	           msg: 'Error while fetching data...',
	           buttons: Ext.MessageBox.OK,
	           icon: Ext.MessageBox.ERROR
	       });
  		return false;
	}
};

function insertISUPPtoList()
{

//    var pr = storePO.getAt(storePO.findExact('id', idPr));
//    var recpr = Ext.getCmp('po-detail-grid').getSelectionModel().getSelections();
// if (!isMscWorkid(recpr[0].data['workid']) && !isServiceKdbrg(recpr[0].data['kode_brg']))
//     var result = cekQty() && cekPrice();
// else
//    var result = cekTotal();
     if (!Ext.getCmp('user-forms').getForm().isValid())
     {
         Ext.MessageBox.show({
               title: 'Error',
               msg: 'Please Fill Blank Field!',
               buttons: Ext.MessageBox.OK,
               icon: Ext.MessageBox.ERROR
           });
         return false;
     }

 if (cekQty())
 {
    Ext.getCmp('save-isupplist').enable();
    Ext.getCmp('cancel-list').enable();
    if (oripo != undefined){

            var oriisupp = storeIsupp.getAt(storeIsupp.findExact('id', oripo.data['id']));

    		if (oriisupp != undefined)
    		{

    			if (oriisupp.data['status'] == undefined || oriisupp.data['status'] == '')
    			{
    				Ext.MessageBox.show({
	    		           title: 'Error',
	    		           msg: 'Please use Edit for updating this item!',
	    		           buttons: Ext.MessageBox.OK,
	    		           icon: Ext.MessageBox.ERROR
	    		       });
		            return false;
    			}

    			if (oriisupp.data['status'] == 'edit')
    			{
        	 			oriisupp.data['qty'] = Ext.getCmp('qty_text').getValue().toString().replace(/\$|\,/g,'');

	        	 		oriisupp.data['status'] = '';
                        var qty = Ext.getCmp('qty_text').getValue().toString().replace(/\$|\,/g,'');
                        oripo.data['totalISUPP'] = parseFloat(oripo.data['totalISUPP']) + parseFloat(qty);

    			}
    			else
    			{

    				var oldqty = parseFloat(oripo.data['qty']);

        			var editqty = parseFloat(Ext.getCmp('qty_text').getValue().toString().replace(/\$|\,/g,''));

        			var newqty = oldqty + editqty;

        			oripo.data['qty'] = newqty;
        	 		oriisupp.data['status'] = '';

    			}
    		}

    	else
    		{

                 var qty = Ext.getCmp('qty_text').getValue().toString().replace(/\$|\,/g,'');
                 oripo.data['totalISUPP'] = parseFloat(oripo.data['totalISUPP']) + parseFloat(qty);

             var d = new polist({
                urut: oripo.data['urut'],
                workid: oripo.data['workid'],
                workname: oripo.data['workname'],
                po_no:oripo.data['po_no'],
                pr_no: oripo.data['pr_no'],
                prj_kode: oripo.data['prj_kode'],
                sit_kode: oripo.data['sit_kode'],
                prj_nama: oripo.data['prj_nama'],
                sit_nama: oripo.data['sit_nama'],
                kode_brg: oripo.data['kode_brg'],
                nama_brg: oripo.data['nama_brg'],
                qty: qty,
                 rateidr: oripo.data['rateidr'],
                 inPO : oripo.data['qty'],
                uom: oripo.data['uom'],
                val_kode: oripo.data['val_kode'],
                price: oripo.data['price'],
                tgl_po: oripo.data['tgl_po'],
                tgl_pr: oripo.data['tgl_pr'],
                totalPrice: oripo.data['totalPrice'],
                id: oripo.data['id'],
                sup_kode:Ext.getCmp('sup_kode_text').getValue(),
                sup_nama:Ext.getCmp('sup_nama_text').getValue(),
                ket: Ext.getCmp('ket_text').getValue(),
                remark: oripo.data['remark'],
                pomyob:Ext.getCmp('pomyob_text').getValue(),
                net_act:Ext.getCmp('net_act_text').getValue(),
                statusppn : oripo.data['statusppn']
                });

            storeIsupp.add(d);
//            console.log(d);
    		}

            clearIsuppform();

            Ext.getCmp('po-detail-grid').enable();
            Ext.getCmp('isupp-grid').enable();
            Ext.getCmp('po-detail-grid').getView().refresh();
            Ext.getCmp('isupp-grid').getView().refresh();
//            Ext.getCmp('save-issupissup').disable();
//            Ext.getCmp('cancel-issup').disable();

    		oripo = undefined;
    		oriisupp = undefined;

}
 }

};


function delToISUPP()
{
	Ext.MessageBox.confirm('Confirm', 'Are you sure want to delete this?', function(btn){
		if (btn== 'yes')
		{
            var b = Ext.getCmp('isupp-grid').getSelectionModel().getSelections();
            b = b[0];

				var a = storePO.getAt(storePO.findExact('id', b.data['id']));

				if (b != undefined)
				{
					var qty = parseFloat(b.data['qty'].toString().replace(/\$|\,/g,''));
                    alert(a.data['totalISUPP']);
					a.data['totalISUPP'] = parseFloat(a.data['totalISUPP']) - qty;
                    alert(a.data['totalISUPP']);
					storeIsupp.remove(b);
					Ext.getCmp('po-detail-grid').getView().refresh();
					Ext.getCmp('isupp-grid').getView().refresh();
				}

			clearIsuppform();
			resetButton();
		}
	});
};

function editToISUPP(idPr)
{
	Ext.getCmp('save-isupp').setText('Update to i-Supp List(Cart)');

	var oriisupp = Ext.getCmp('isupp-grid').getSelectionModel().getSelections();
    oriisupp = oriisupp[0];
    
     oripo = storePO.getAt(storePO.findExact('id',oriisupp.data['id']));
   
		Ext.getCmp('po-detail-grid').disable();
		Ext.getCmp('isupp-grid').disable();
		Ext.getCmp('cancel-isupp').setText('Cancel Edit');
		Ext.getCmp('cancel-isupp').enable();

		if (oriisupp != undefined && oripo != undefined)
		{
			oriisupp.data['status'] = 'edit';
			Ext.getCmp('urut_text').setValue(oriisupp.data['urut']);
				Ext.getCmp('workid_text').setValue(oriisupp.data['workid']);
                Ext.getCmp('workname_text').setValue(oriisupp.data['workname']);
				Ext.getCmp('kode_brg_text').setValue(oriisupp.data['kode_brg']);
				Ext.getCmp('nama_brg_text').setValue(oriisupp.data['nama_brg']);
				Ext.getCmp('prj_kode_text').setValue(oriisupp.data['prj_kode']);
				Ext.getCmp('prj_nama_text').setValue(oriisupp.data['prj_nama']);
                Ext.getCmp('sit_kode_text').setValue(oriisupp.data['sit_kode']);
                Ext.getCmp('sit_nama_text').setValue(oriisupp.data['sit_nama']);

                Ext.getCmp('remark_text').setValue(oripo.data['remark']);

                var satuan = oriisupp.data['uom'];
                Ext.getCmp('qty_text').setValue(CommaFormatted(oriisupp.data['qty'].toString().replace(/\$|\,/g,'')));
                Ext.getCmp('uom_text').setValue(satuan);
                Ext.getCmp('uom_text1').setValue(satuan);
                Ext.getCmp('uom_text2').setValue(satuan);
                Ext.getCmp('uom_text3').setValue(satuan);

                var poQty = oriisupp.data['inPO'].toString().replace(/\$|\,/g,'');
                oripo.data['totalISUPP'] = oripo.data['totalISUPP'] - parseFloat(oriisupp.data['qty'].toString().replace(/\$|\,/g,''));
                var isuppQty = oripo.data['totalISUPP'].toString().replace(/\$|\,/g,'');
		        Ext.getCmp('po_qty_text').setValue(CommaFormatted(poQty));
                Ext.getCmp('isupp_qty_text').setValue(CommaFormatted(isuppQty));

                var balance = parseFloat(poQty)-parseFloat(isuppQty);
                Ext.getCmp('balance_qty_text').setValue(CommaFormatted(balance));


    	}
    	else
    	{
    		Ext.MessageBox.show({
    	           title: 'Error',
    	           msg: 'Error while fetching data...',
    	           buttons: Ext.MessageBox.OK,
    	           icon: Ext.MessageBox.ERROR
    	       });
      		return false;
    	}

};

function getPoDetail(trano)
	{
		Ext.Ajax.request({
			scope: this,
			results: 0,
	        url: '/default/home/getpodetail/trano/' + trano,
	        method:'POST',
	        success: function(result, request){
	        	   var returnData = Ext.util.JSON.decode(result.responseText);
//                console.log(returnData);
                   Ext.getCmp('po_kode_text').setValue(returnData.trano);
                   Ext.getCmp('prj_kode_header').setValue(returnData.prj_kode);
				   Ext.getCmp('prj_nama_header').setValue(returnData.prj_nama);
				   Ext.getCmp('sup_kode_text').setValue(returnData.sup_kode);
				   Ext.getCmp('sup_nama_text').setValue(returnData.sup_nama);
				   Ext.getCmp('net_act_text').setValue(returnData.myob);
				   Ext.getCmp('pomyob_text').setValue(returnData.pomyob);
				   Ext.getCmp('ket_text').setValue(returnData.ket);


				}
			,
	    	failure:function( action){
	      	if(action.failureType == 'server'){
	          obj = Ext.util.JSON.decode(action.response.responseText);
	          Ext.Msg.alert('Error!', obj.errors.reason);
	      	}
	      	}
	    });

	};

function showPoList()
    {
        var columns = [ {header:'Trano',width:100,sortable:true,dataIndex:'trano'},
                        {header:'Project ID',width:100,sortable:true,dataIndex:'prj_kode'},
                        {header:'Project Name',width:150,sortable:true,dataIndex:'prj_nama'},
                        {header:'Site Code',width:100,sortable:true,dataIndex:'sit_kode'},
                        {header:'Site Name',width:100,sortable:true,dataIndex:'sit_nama'}
                    ];

        var store = new Ext.data.Store({
            proxy:new Ext.data.HttpProxy({
                url: '/default/poh/list/type/P'
            }),
            reader: new Ext.data.JsonReader({
                idProperty: 'id',
                totalProperty: 'count',
                root : 'posts',
                fields: [
                    {name: 'id'},
                    {name: 'trano'},
                    {name: 'prj_kode'},
                    {name: 'sit_kode'},
                    {name: 'prj_nama'},
                    {name: 'sit_nama'}
                  ]
            })
        });
        store.load();

        yAxis=100;
        var grids = function()
        {
            grids.superclass.constructor.call(this, {
            store: store,
            columns: columns,
            x:0,
            y:yAxis,
            id:'po_grid',
            loadMask: true,
            bbar:[ new Ext.PagingToolbar({
                pageSize: 50,
                store: store,
                displayInfo: true,
                displayMsg: 'Displaying data {0} - {1} of {2}',
                emptyMsg: "No data to display"
            })],
            height:250,
            width:380,
            listeners: {
                'rowdblclick': function(g, rowIndex, e){
                                closeForm = false;
                                isDblClick = true;
                                objectName = 'trano';
                                txtBoxChange = 'trano_text';
                                closeForm = true;
                                formId = 'a-form-panel-trano_button';
                                prox = 'trano_proxy';
                                gri = 'trano_grid';
                                var trano = g.getStore().getAt(rowIndex).get(objectName);
//                                Ext.getCmp('po_kode_text').setValue(trano);
                                getPoDetail(trano);
                                aForm.close();
								window.setTimeout(function(){
                                        isDblClick = false;
                                }, 0);
                        }
                }
        });

//        Ext.override(Ext.PagingToolbar, {
//            doRefresh: function(){
//                this.clearFilter();
//                delete this.store.lastParams;
//                this.doLoad(this.cursor);
//            }
//            });
        }

        Ext.extend(grids, Ext.grid.GridPanel);
        Ext.extend(txtboks,Ext.form.TextField);//PO
        searchTrano = function(field,e){
                if (field.getValue().length > 2)
                {
                    newUrl = '/poh/listByParams/type/P/name/trano/data/' + field.getValue();
                    gri = 'po_grid';
                    proxies = Ext.getCmp(gri).getStore();
                    proxies.proxy = new Ext.data.HttpProxy( {
                        url: newUrl
                         });
                    Ext.getCmp(gri).getStore().reload();
                }
	        };
	        searchPrno = function(field,e){
                if (field.getValue().length > 2)
                {
                    newUrl = '/poh/listByParams/type/P/name/pr_no/data/' + field.getValue();
                    gri = 'po_grid';
                    proxies = Ext.getCmp(gri).getStore();
                    proxies.proxy = new Ext.data.HttpProxy( {
                        url: newUrl
                         });
                    Ext.getCmp(gri).getStore().reload();
                }
	        };
	        searchPrj_kode = function(field,e){
                if (field.getValue().length > 2)
                {
                    newUrl = '/poh/listByParams/type/P/groupby/true/name/prj_kode/data/' + field.getValue();
                    gri = 'po_grid';
                    proxies = Ext.getCmp(gri).getStore();
                    proxies.proxy = new Ext.data.HttpProxy( {
                        url: newUrl
                         });
                    Ext.getCmp(gri).getStore().reload();
                }
	        };
            searchPrj_name = function(field,e){
                if (field.getValue().length > 2)
                {
                    newUrl = '/poh/listByParams/type/P/groupby/true/name/prj_nama/data/' + field.getValue();
                    gri = 'po_grid';
                    proxies = Ext.getCmp(gri).getStore();
                    proxies.proxy = new Ext.data.HttpProxy( {
                        url: newUrl
                         });
                    Ext.getCmp(gri).getStore().reload();
                }
            };
	        searchSit_kode = function(field,e){
                if (field.getValue().length > 2)
                {
                    newUrl = '/poh/listByParams/type/P/site/true/name/sit_kode/data/' + field.getValue();
                    gri = 'po_grid';
                    proxies = Ext.getCmp(gri).getStore();
                    proxies.proxy = new Ext.data.HttpProxy( {
                        url: newUrl
                         });
                    Ext.getCmp(gri).getStore().reload();
                }
	    };
            searchSit_name = function(field,e){
                if (field.getValue().length > 2)
                {
                    newUrl = '/poh/listByParams/type/P/site/true/name/sit_nama/data/' + field.getValue();
                    gri = 'po_grid';
                    proxies = Ext.getCmp(gri).getStore();
                    proxies.proxy = new Ext.data.HttpProxy( {
                        url: newUrl
                         });
                    Ext.getCmp(gri).getStore().reload();
                }
	    };

        var aForm =  new Ext.Window({
        id: 'a-form-panel-trano_button',
        layout: 'absolute',
        minWidth: 300,
        minHeight: 200,
        stateful:false,
        modal: true,
        resizable: false,
        width: 400,
        height: 400,
        items : [
            {
            x: 6,
            y: 12,
            xtype: 'label',
            text: 'No Trans'
            },
           new txtboks(80,10,80,'trans_no',searchTrano),
           {
               x : 6,
               y: 37,
               xtype: 'label',
               text: 'Project Code'
               },
              new txtboks(80,35,80,'prj_kode',searchPrj_kode),
           {
               x : 6,
               y: 62,
               xtype: 'label',
               text: 'Project Name'
           },
           new txtboks(80,60,80,'prj_nama',searchPrj_name),
           {
                 x: 180,
                 y: 37,
            	xtype: 'label',
                text: 'Site Code'
           },
           new txtboks(240,35,80,'sit_kode',searchSit_kode),
           {
                x: 180,
                y: 62,
            	xtype: 'label',
                text: 'Site Name'
            },
            new txtboks(240,60,80,'sit_nama',searchSit_name)
            ,new grids('pr_list')
        ]

      });
      aForm.title = 'Choose PO';
      aForm.show();
    }

function submitPO()
	{
		if (!Ext.getCmp('user-forms').getForm().isValid())
                 {
                     Ext.MessageBox.show({
	    		           title: 'Error',
	    		           msg: 'Please Fill Blank Field!',
	    		           buttons: Ext.MessageBox.OK,
	    		           icon: Ext.MessageBox.ERROR
	    		       });
                     return false;
                 }

//		var newUrl = '/default/home/getposummary/data/' + trano ;
//	    storePO.proxy.setUrl(newUrl);
//	    storePO.reload();
//        console.log(storePO);
//	    var poGrid = Ext.getCmp('po-detail-grid');
//	    poGrid.getStore().proxy.setUrl(newUrl);
//	    poGrid.getBottomToolbar().store.proxy.api.read['url'] = newUrl;
//	    poGrid.getBottomToolbar().store.proxy.url = newUrl;
//	    poGrid.getBottomToolbar().store.proxy.setUrl(newUrl);
        var trano = Ext.getCmp('po_kode_text').getValue();
        Ext.Ajax.request({
                                results: 0,
                                url: '/default/home/getpoisuppsummary/data/'+trano,
                                method:'POST',
                                success: function(result, request){
                                   var returnData = Ext.util.JSON.decode(result.responseText);

                                   Ext.each(returnData.posts, function(op) {

                                      var c = new polist({
                                          	po_no : op['trano'],
                                            pr_no : op['pr_no'],
                                            tgl_po : op['tgl'],
                                            tgl_pr : op['tglpr'],
                                          	urut: op['urut'],
                                      		prj_kode: op['prj_kode'],
                                       		prj_nama: op['prj_nama'],
                                       		sit_kode: op['sit_kode'],
                                       		sit_nama: op['sit_nama'],
                                       		workid: op['workid'],
           			     					workname: op['workname'],
                                        	kode_brg: op['kode_brg'],
                                        	nama_brg: op['nama_brg'],
           		            				qty: op['qty'],
                                            uom: op['uom'],
                                            remark: op['ket'],
                                            price: op['harga'],
                                            totalPrice: op['totalPrice'],
                                            val_kode: op['val_kode'],
                                            totalISUPP: op['totalISUPP'],
                                            totalPriceISUPP: op['totalPriceISUPP'],
                                            balanceISUPP: op['balanceISUPP'],
                                            net_act: op['myob'],
                                            statusppn: op['statusppn'],
                   		            	id: getNewID()

                                      });
                                      storePO.insert(0,c);
//                                      console.log(c);

                                   });
                                   Ext.getCmp('po-detail-grid').getView().refresh();
                            }
                            });
         Ext.getCmp('po_kode_text').disable();
         Ext.getCmp('po-submit').disable();
	}

function showWarehouseList()
{

	   var columns = [ {header:'Warehouse no',width:100,sortable:true,dataIndex:'gdg_kode'},
                        {header:'Warehouse Name',width:150,sortable:true,dataIndex:'gdg_nama'}

                    ];

        var store = new Ext.data.Store({
            proxy:new Ext.data.HttpProxy({
                url: '/default/delivery/list'
            }),
            reader: new Ext.data.JsonReader({
                idProperty: 'id',
                totalProperty: 'count',
                root : 'posts',
                fields: [
                    {name: 'id'},
                    {name: 'gdg_kode'},
                    {name: 'gdg_nama'}
                  ]
            })
        });

        store.load();

        yAxis=100;
        var grids = function()
        {
            grids.superclass.constructor.call(this, {
            store: store,
            columns: columns,
            x:0,
            y:yAxis,
            id:'warehouse_grid',
            loadMask: true,
            bbar:[ new Ext.PagingToolbar({
                pageSize: 50,
                store: store,
                displayInfo: true,
                displayMsg: 'Displaying data {0} - {1} of {2}',
                emptyMsg: "No data to display"
            })],
            height:200,
            width:300,
            listeners: {
                'rowdblclick': function(g, rowIndex, e){
                                closeForm = false;
                                isDblClick = true;
                                objectName = 'gdg_kode';
                                txtBoxChange = 'trano_text';
                                closeForm = true;
                                formId = 'a-form-panel-trano_button';
                                prox = 'trano_proxy';
                                gri = 'trano_grid';

                                var record = g.getStore().getAt(rowIndex).get(objectName);
                                var record2 = g.getStore().getAt(rowIndex).get("gdg_nama");

                                if(Ext.getCmp('wh_kode_text') != undefined)
                                {
                                    Ext.getCmp('wh_kode_text').setValue(record);
                                }

                                if (Ext.getCmp('wh_nama_text') != undefined)
                                {
                                    Ext.getCmp('wh_nama_text').setValue(record2);
                                }

                                aForm.close();
								window.setTimeout(function(){
                                        isDblClick = false;
                                }, 0);
                        }
                }
        });

        }

        Ext.extend(grids, Ext.grid.GridPanel);
        Ext.extend(txtboks,Ext.form.TextField);//PO
        searchGdgKode = function(field,e){
	            newUrl = '/delivery/listByParams/name/gdg_kode/data/' + field.getValue();
	            gri = 'warehouse_grid';
	            proxies = Ext.getCmp(gri).getStore();
	            proxies.proxy = new Ext.data.HttpProxy( {
	                url: newUrl
	                 });
	            Ext.getCmp(gri).getStore().reload();
	        };
	        searchGdgNama = function(field,e){
	            newUrl = '/delivery/listByParams/name/gdg_nama/data/' + field.getValue();
	            gri = 'warehouse_grid';
	            proxies = Ext.getCmp(gri).getStore();
	            proxies.proxy = new Ext.data.HttpProxy( {
	                url: newUrl
	                 });
	            Ext.getCmp(gri).getStore().reload();
	        };


        var aForm =  new Ext.Window({
        id: 'a-form-panel-trano_button',
        layout: 'absolute',
        minWidth: 300,
        minHeight: 200,
        stateful:false,
        modal: true,
        resizable: false,
        width: 310,
        height: 300,
        items : [
            {
            x: 6,
            y: 12,
            xtype: 'label',
            text: 'Warehouse No'
            },
           new txtboks(100,10,60,'gdg_kode',searchGdgKode),
           {
               x : 6,
               y: 62,
               xtype: 'label',
               text: 'Warehouse Name'
               },
           new txtboks(100,60,80,'gdg_nama',searchGdgNama),
           new grids('pr_list')
        ]

      });
      aForm.title = 'Choose Warehouse';
      aForm.show();

}

function init()
{

//	getLastPO();
//	getExchangeRate();
	var tgl_sekarang = new Date();

//    Ext.getCmp('val_kode_text').setValue('IDR');
//	Ext.getCmp('curr_text').setValue('0');
//	Ext.getCmp('tgl_po_text').setValue(tgl_sekarang.format('Y-m-d'));



}

function getLastPO()
{
	Ext.Ajax.request({
        url: '/procurement/procurement/getlastpo',
        method:'POST',
        success: function(result, request){
        	   var returnData = Ext.util.JSON.decode(result.responseText);

				if (returnData.po != undefined && returnData.po != '')
				{
					Ext.getCmp('po_number_text').setValue('PO01-' + returnData.po);
				}
			}
		,
    	failure:function( action){
      	if(action.failureType == 'server'){
          obj = Ext.util.JSON.decode(action.response.responseText);
          Ext.Msg.alert('Error!', obj.errors.reason);
      	}
      	}
    });
};

var textField =  new Ext.form.TextField();

userForm = new Ext.extend(Ext.form.FormPanel,{
      id : 'user-forms',
     iconCls: 'silk-user',
     title: 'Add New i-Supp',
     frame: true,
     width: 600,
     labelAlign: 'left',
     initComponent : function() {
        this.items = this.buildForm();
//        init();

        this.buttons = this.buildUI();

        this.addEvents({
            create : true
        });
        userForm.superclass.initComponent.call(this);
    }
    ,
     buildForm : function() {
        return [
         {
             layout : 'column',
             items:[
                 {
                     columnWidth:.95,
                     layout :'form',
                     items:[
//                         {
//                             fieldLabel : 'PO Number',
//                             id: 'po_number_text',
//                             name: 'po_number',
//                             xtype : 'textfield',
//                             disabled : true,
//
//                             width:100
//                         },
//                         {
//                             fieldLabel:'Date',
//                             id:'tgl_po_text',
//                             name: 'tgl_po',
//                             allowBlank: false,
//                             xtype: 'datefield',
//                             format : ('d-m-Y')
//
//                         },
                         {
                             fieldLabel : 'PO Number',
                             id:'po_kode_text',
                             name: 'sup_kode',
                             xtype:"trigger",
                             triggerClass: 'teropong',
                             editable: false,
                             allowBlank: false,
                             width: 120,
                            onTriggerClick:function ()
                            {
                             showPoList();
                            }

                         },
                         {
                            layout:'column',
                            items:[
                                   {
                                    columnWidth:.35,
                                    layout: 'form',
                                    items: [{
                                                fieldLabel : 'Project Code',
                                                id : 'prj_kode_header',
                                                xtype: 'textfield',
                                                disabled: true,

                                                width: 80
                                            }
                                            ]
                                   },
                                   {
                                        columnWidth:.5,
                                        layout: 'form',
                                        items: [{
                                                    id : 'prj_nama_header',
                                                    xtype: 'textfield',
                                                    hideLabel: true,
                                                    disabled: true,
                                                    width: 190
                                                }
                                                ]
                                       }
                                ]
                        },
                        {
                            layout:'column',
                            items:[
                                   {
                                    columnWidth:.35,
                                    layout: 'form',
                                    items: [{
                                                fieldLabel : 'Supplier Code',
                                                id : 'sup_kode_text',
                                                xtype: 'textfield',
                                                disabled: true,

                                                width: 80
                                            }
                                            ]
                                   },
                                   {
                                        columnWidth:.49,
                                        layout: 'form',
                                        items: [{
                                                    id : 'sup_nama_text',
                                                    xtype: 'textfield',
                                                    hideLabel: true,
                                                    disabled: true,
                                                    width: 180
                                                }
                                                ]
                                       }
                                ]
                        },
                         {
                             fieldLabel : 'Net Act',
                             id:'net_act_text',
                             name:'net_act',
                             xtype: 'textfield',
                             disabled:true,
                             readOnly: true,
                             width: 120
                         },
                         {
                             fieldLabel : 'PO MYOB',
                             id:'pomyob_text',
                             name: 'po_myob',
                             xtype:'textfield',
                             disabled: true,
                             width: 120

                         },
                         {
                             fieldLabel : 'Remark',
                             id:'ket_text',
                             name:'remark',
                             xtype: 'textfield',
                         
                             width: 150
                         },
                         {
                            layout:'column',
                            items:[
                                   {
                                    columnWidth:.35,
                                    layout: 'form',
                                    items: [{
                                                 fieldLabel : 'Warehouse Code',
                                                 id:'wh_kode_text',
                                                 name: 'tujuan',
                                                 xtype : 'trigger',
                                                 editable: false,
                                                 allowBlank: false,
                                                 width : 87,
                                                 triggerClass: 'teropong',
                                                    onTriggerClick:
                                                         function ()
                                                             {
                                                               showWarehouseList();
                                                             },scope: this

                                             }
                                            ]
                                   },
                                   {
                                        columnWidth:.49,
                                        layout: 'form',
                                        items: [{
                                                    id : 'wh_nama_text',
                                                    xtype: 'textfield',
                                                    hideLabel: true,
                                                    disabled: true,
                                                    width: 180
                                                }
                                                ]
                                       }
                                ]
                        }


                     ]
                 }

             ]
         }
     ];
     },
      buildUI: function(){
        return [

            {
                text: 'Submit',
                id: 'po-submit',
                iconCls: 'silk-add',
                handler: function() {

                    submitPO();

          },
            scope: this
          },
            {
              text: 'Reset',
              handler: function(btn, ev){
                 cancelisuppList();
              },
              scope: this
           }, {
               text: 'Cancel',
               handler: function(btn, ev){
                myPanel = Ext.getCmp('abs-budget-panel');
                myPanel.body.load({
                    url: '/logistic/logistic/i-supp',
                    scripts : true
                });
               },
               scope: this
           }
        ];
    }
 });

userForm2 = new Ext.extend(Ext.form.FormPanel,{

    renderTo: 'user-form2',
    id: 'isupp-form',
    iconCls: 'silk-user',
    labelAlign: 'right',
    title: 'Detail i-Supp',
    frame: true,
    width: 750,
    labelAlign: 'left',
    style: 'margin-top: 10px',
    initComponent : function() {
        this.items = this.buildForm();
        this.buttons = this.buildUI();
        this.addEvents({
            create : true
        });
        userForm2.superclass.initComponent.call(this);
    }
    ,
    buildForm : function() {
        return [
            {
            layout:'column',
            items:[
                   {columnWidth:.55,
                    layout: 'form',
                	items: [{
                                fieldLabel : 'No',
                                id : 'urut_text',
                                xtype: 'textfield',
                                disabled : true,
                                width : 30
                                },

//                                {
//                                fieldLabel : 'PR no',
//                                id : 'tgl_arf_text',
//                                xtype: 'textfield',
//                                disabled : true,
//                                width : 75
//                                },
                            {
								            layout:'column',
								            items:[
								                   {
									                columnWidth:.43,
								                    layout: 'form',
								                	items: [{
															    fieldLabel : 'Project Code',
															    id : 'prj_kode_text',
															    xtype: 'textfield',
															    disabled: true,

															    width: 65
													    	}
											    			]
								                   },
								                   {
										                columnWidth:.49,
									                    layout: 'form',
									                	items: [{
																    id : 'prj_nama_text',
																    xtype: 'textfield',
																    hideLabel: true,
																    disabled: true,
																    width: 180
														    	}
												    			]
									                   }
												]
							    		},

                                {
								            layout:'column',
								            items:[
								                   {
									                columnWidth:.43,
								                    layout: 'form',
								                	items: [{
															    fieldLabel : 'Site Code',
															    id : 'sit_kode_text',
															    xtype: 'textfield',
															    disabled: true,
															    width: 65
													    	}
											    			]
								                   },
								                   {
										                columnWidth:.49,
									                    layout: 'form',
									                	items: [{
																    id : 'sit_nama_text',
																    xtype: 'textfield',
																    hideLabel: true,
																    disabled: true,
																    width: 180
														    	}
												    			]
									                   }
												]
							    		},
                                {
								            layout:'column',
								            items:[
								                   {
									                columnWidth:.43,
								                    layout: 'form',
								                	items: [{
															    fieldLabel : 'Work ID',
															    id : 'workid_text',
															    xtype: 'textfield',
															    disabled: true,

															    width: 65
													    	}
											    			]
								                   },
								                   {
										                columnWidth:.49,
									                    layout: 'form',
									                	items: [{
																    id : 'workname_text',
																    xtype: 'textfield',
																    hideLabel: true,
																    disabled: true,
																    width: 180
														    	}
												    			]
									                   }
												]
							    		},

                                {
								            layout:'column',
								            items:[
								                   {
									                columnWidth:.43,
								                    layout: 'form',
								                	items: [{
															    fieldLabel : 'Product ID',
															    id : 'kode_brg_text',
															    xtype: 'textfield',
															    disabled: true,
															    width: 65
													    	}
											    			]
								                   },
								                   {
										                columnWidth:.49,
									                    layout: 'form',
									                	items: [{
																    id : 'nama_brg_text',
																    xtype: 'textfield',
																    hideLabel: true,
																    disabled: true,
																    width: 180
														    	}
												    			]
									                   }
												]
							    		},
                                 {
								            layout:'column',
								            items:[
								                   {
									                columnWidth:.43,
								                    layout: 'form',
								                	items: [{
															    fieldLabel : 'QTY',
															    id : 'qty_text',
															    xtype: 'textfield',
                                                                allowBlank: false,
                                                                style:"text-align:right",
															    width: 65,
                                                                listeners:{
                                                                    'blur': function(t) {
                                                                        if (!isNaN(t.getValue()))
                                                                        {
                                                                            t.setValue(CommaFormatted(t.getValue()));
                                                                        }
                                                                    },
                                                                    'focus': function(t) {
                                                                        if (t.getValue().search(",")>0)
                                                                        t.setValue(t.getValue().toString().replace(/\$|\,/g,''));
                                                                    }
                                                                }
													    	}
											    			]
								                   },
								                   {
										                columnWidth:.49,
									                    layout: 'form',
									                	items: [{
																    id : 'uom_text',
																    xtype: 'textfield',
																    hideLabel: true,
																    disabled: true,
																    width: 30
														    	}
												    			]
									                   }
												]
							    		},
                                {
                                        fieldLabel : 'Remark',
                                        id : 'remark_text',
                                        xtype: 'textfield',
                                       
                                        width : 150
                                }

                                ]
                   },
                   {    columnWidth:.4,
                       layout: 'form',

                   	items: [ {
                                    xtype:'fieldset',
                                    title: 'Balance',
                                    id : 'Balance-fieldset',
                                    autoHeight : true,
                                    layout: 'form',
                                    labelWidth : 110,
                                    items : [
                                 {
                                      layout:'column',
								            items:[
                                                {
                                                    columnWidth:.8,
								                    layout: 'form',
								                	items: [{

                                                            fieldLabel: 'Qty in PO',
                                                            id: 'po_qty_text',
                                                            xtype:'textfield',
                                                             style:"text-align:right",
                                                            width: 100,
                                                            disabled:true
                                                            }]
                                                },{
                                                    columnWidth:.2,
								                    layout: 'form',
								                	items: [{
                                                            id: 'uom_text1',
                                                            xtype:'textfield',
                                                            hideLabel: true,
                                                            width: 30,
                                                            disabled:true
                                                            }]
                                                }
                                            ]
                                 }, {
                                    layout:'column',
								            items:[
                                                {
                                                    columnWidth:.8,
								                    layout: 'form',
								                	items: [{
                                                            fieldLabel: 'Qty in i-Supp',
                                                            id: 'isupp_qty_text',
                                                            xtype:'textfield',
                                                            style:"text-align:right",
                                                            width: 100,
                                                            disabled:true
                                                            }]
                                                },{
                                                    columnWidth:.2,
								                    layout: 'form',
								                	items: [{
                                                            id: 'uom_text2',
                                                            xtype:'textfield',
                                                            hideLabel: true,
                                                            width: 30,
                                                            disabled:true
                                                            }]
                                                }
                                            ]
                                 },
                                 {
                                     layout:'column',
                                            items:[
                                                {
                                                    columnWidth:.8,
                                                    layout: 'form',
                                                    items: [{

                                                             fieldLabel: 'Balance Qty',
                                                             id: 'balance_qty_text',
                                                             style:"text-align:right",
                                                             disabled:true,
                                                             xtype:'textfield',
                                                             width: 100
                                                            }]
                                                },{
                                                    columnWidth:.2,
								                    layout: 'form',
								                	items: [{
                                                            id: 'uom_text3',
                                                            xtype:'textfield',
                                                            hideLabel: true,
                                                            width: 30,
                                                            disabled:true
                                                            }]
                                                }
                                            ]

                                  }

                               ]
                       }

				       ]
                   }
              ]
            },

     ];
     },
      buildUI: function(){
        return [

        {
             text: 'Add to PO List',
             id: 'save-isupp',

             iconCls: 'icon-add',
             handler: function(){
                 //var rec = Ext.getCmp('pr-detail-grid').getSelectionModel().getSelections();
                 //insertPOtoList(rec[0].data['id']);
                 insertISUPPtoList();
             }

        },{
             text: 'Cancel Add',
             id: 'cancel-isupp',

             iconCls: 'icon-cancel',
             handler: function(){
                    clearIsuppform();
                    Ext.getCmp('po-detail-grid').enable();
                    Ext.getCmp('isupp-grid').enable();
                    Ext.getCmp('po-detail-grid').getView().refresh();
                    Ext.getCmp('isupp-grid').getView().refresh();
//                    Ext.getCmp('save-issupissup').disable();
//                    Ext.getCmp('cancel-issup').disable();

                    oripo = undefined;
			        oriisupp = undefined;

             }, scope: this
       }
   ];
    }
 });


 userGrid = Ext.extend(Ext.grid.GridPanel, {

    title:'PO Detail',
    iconCls: 'silk-grid',
    frame: true,
    height: 250,
    style: 'margin-top: 10px',
    trackMouseOver: true,

    initComponent : function() {
        userGrid.superclass.initComponent.call(this);
    }

});

userGrid2 = Ext.extend(Ext.grid.GridPanel, {

    iconCls: 'silk-grid',
    id: 'isupp-grid',
    frame: true,
    height: 250,
    title: 'i-supp list Cart',
    style: 'margin-top: 10px',
    initComponent : function() {

        this.buttons = this.buildUI();

        userGrid.superclass.initComponent.call(this);
    },

    buildUI : function() {
    //    return [
    //       {
    //       text: 'Save',
    //       iconCls: 'icon-save',
           //handler: this.onSave,
    //       scope: this
     //       }
             // ];
    },

    onSave : function(btn, ev) {
       //this.store.save();
        var json = '';
    	this.store.each(function(store){
    	json += Ext.util.JSON.encode(store.data) + ',';
    	});
    	json = json.substring(0, json.length - 1);
    	params = {posts:[json]};
    	Ext.Ajax.request({
            url: '/procurement/procurement/insertpo',
            method:'POST',
            success: function(resp){
    		Ext.Msg.alert('Success', 'Data has been saved!');
    		//isEdited = false;
            },
        	failure:function( action){
          	if(action.failureType == 'server'){
              obj = Ext.util.JSON.decode(action.response.responseText);
              Ext.Msg.alert('Error!', obj.errors.reason);
          	}else{
              Ext.Msg.alert('Warning!', 'Server is unreachable : ' + action.response.responseText);
          	}
          	},
            params: params
        });
    }
});

Ext.onReady(function() {
    Ext.QuickTips.init();


var userForms = new userForm({
    renderTo : 'user-form'

});

init();

var userGrids = new userGrid({
    renderTo: 'user-grid',
    id:'po-detail-grid',
    store: storePO,
    columns : userColumns,
    width: 700,
    bbar: [ new Ext.PagingToolbar({
    id: 'paging',
    pageSize: 100,
    store: storePO,
    displayInfo: true,
    displayMsg: 'Displaying data {0} - {1} of {2}',
    emptyMsg: "No data to display"
    })
            ]
});

var userForms2 = new userForm2({
    renderTo: 'user-form2'
});

var userGrids2 = new userGrid2({
    renderTo:'user-grid2',
    store: storeIsupp,
    columns:userColumns2,
    width:750,


    bbar: ['->',{
             xtype: 'button',
	         text: 'Save PO List(Cart)',
	         id : 'save-isupplist',
	         iconCls: 'icon-save',
	         disabled : true,
	         handler: function()
	         {
                var json = '';
                var parameter = '';
                Ext.getCmp('isupp-grid').getStore().each(function(store){

                json += Ext.util.JSON.encode(store.data) + ',';
                });
            	json = '[' + json.substring(0, json.length - 1) + ']'; //JSON format fix

//                console.log(json);

                var p = storeIsupp.getAt(0);
                 if (p == undefined || p == '')
                 {
                      Ext.MessageBox.show({
	    		           title: 'Error',
	    		           msg: 'Cart is Empty!',
	    		           buttons: Ext.MessageBox.OK,
	    		           icon: Ext.MessageBox.ERROR
	    		       });
                     return false;
                 }
            	//Get add. Data
            	var poNum = Ext.getCmp('po_kode_text').getValue();
                var prjKode = Ext.getCmp('prj_kode_header').getValue();
            	var prjNama = Ext.getCmp('prj_nama_header').getValue();
            	var supKode = Ext.getCmp('sup_kode_text').getValue();
            	var supNama = Ext.getCmp('sup_nama_text').getValue();
            	var netAct = Ext.getCmp('net_act_text').getValue();
            	var poMyob = Ext.getCmp('pomyob_text').getValue();
            	var ket = Ext.getCmp('ket_text').getValue();
            	var whKode = Ext.getCmp('wh_kode_text').getValue();
            	var whNama = Ext.getCmp('wh_nama_text').getValue();
            	
            	parameter = '[{"po_no":"' + poNum + '","prj_kode":"' + prjKode + '", "prj_nama":"' + prjNama + '","sup_kode":"' + supKode + '", "sup_nama":"' + supNama + '", "net_act":"' + netAct + '","pomyob":"' + poMyob + '","ket":"' + ket + '","wh_kode":"' + whKode + '","wh_nama":"' + whNama + '"}]';
            	params = {posts:json, etc:parameter};
            	myPanel = Ext.getCmp('abs-budget-panel'); //Load the panel
        	    myPanel.body.load({
        	        url: '/logistic/logistic/appisupp', //the url
        	        scripts : true,
        	        params: params //our params goes here
                });
	         },
	         scope: this
        	}
                ,
                {
                xtype: 'button',
	         text: 'Cancel i-supp List(Cart)',
	         id : 'cancel-list',
	         disabled : true,
	         iconCls: 'icon-cancel',
	         handler:showAddPO
	         ,
	         scope: this
        	}
      ]
    });

    function cancelisuppList()
	{
		Ext.getCmp('po_kode_text').enable();
		Ext.getCmp('po-submit').enable();
	    var teks = Ext.getCmp('user-forms').findByType('textfield');
	    Ext.each(teks, function(t, index) {
	        t.setValue('');
	    });

		storePO.removeAll();
		storeIsupp.removeAll();
		Ext.getCmp('po-detail-grid').getView().refresh();
		Ext.getCmp('isupp-grid').getView().refresh();
	  	init();
	}

<?php
    if ($this->PRtrano != '')
    {
?>
     Ext.Ajax.request({
                            results: 0,
                            url: '/default/home/getprsummary/data/<?php echo $this->PRtrano; ?>',
                            method:'POST',
                            success: function(result, request){
                               var returnData = Ext.util.JSON.decode(result.responseText);

                               Ext.each(returnData.posts, function(op) {

                                  var c = new prlist({
                                        trano : op['trano'],
                                        tgl_pr : op['tgl'],
                                        urut: op['urut'],
                                        prj_kode: op['prj_kode'],
                                        prj_nama: op['prj_nama'],
                                        sit_kode: op['sit_kode'],
                                        sit_nama: op['sit_nama'],
                                        workid: op['workid'],
                                        workname: op['workname'],
                                        kode_brg: op['kode_brg'],
                                        nama_brg: op['nama_brg'],
                                        qty: op['qty'],
                                            uom: op['uom'],
                                            price: op['harga'],
//                                                hargaIDR : op['hargaIDR'],
//                                                hargaUSD : op['hargaUSD'],
//                                                totalIDR : op['totalIDR'],
//                                                totalUSD : op['totalUSD'],
                                            totalPrice: op['jumlah'],
                                            val_kode: op['val_kode'],
                                            totalPO: op['totalPO'],
                                            totalPricePO: op['totalPricePO'],
                                            balancePO: op['balancePO'],
                                            net_act: op['myob'],
                                            budgettype: op['budgettype'],
                                    id: getNewID()

                                  });
                                  storePO.add(c);

                               });
                               Ext.getCmp('po-detail-grid').getView().refresh();
                        }
                        });

<?php
    }
?>


});



</script>

<div id="user-form"></div>
<div id="user-grid"></div>
<div id="separator">
<div id="user-form2" style="float:left"></div>
<!--<div class="sidebox" style="float:left;width:38em;">-->
        <!--<div class="boxhead"><h2>Available Qty</h2></div>-->
        <!--<div class="boxbody" id="a-qty"></div>-->
<!--</div>-->
</div>
<div id="user-grid2" style="margin-top:10px;float:left;"></div>
