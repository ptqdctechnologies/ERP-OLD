<script type="text/javascript">


    function getExchangeRate()
    {


        Ext.Ajax.request({
            url: '/default/valuta/getexchangerate',
            method:'POST',
            success: function(result, request){
                    var returnData = Ext.util.JSON.decode(result.responseText);
                    if(returnData.success) {
                        Ext.getCmp('rate_text').setValue(returnData.rate);
                    }
                }
                ,failure:function( action){
            if(action.failureType == 'server'){
            obj = Ext.util.JSON.decode(action.response.responseText);
            Ext.Msg.alert('Error!', obj.errors.reason);
            }
            }
        });
    }




    Ext.onReady(function(){

        Ext.QuickTips.init();

        Ext.apply(Ext.form.VTypes,{

        numericText: "Only numbers are allowed.",
        numericMask: /[0-9]/,
        numericRe: /(^-?dd*.d*$)|(^-?dd*$)|(^-?.dd*$)/,
        numeric: function(v) {
            return function() { return this.numericRe.test(v)} ;
	    }

        });



        var proxy = new Ext.data.HttpProxy({
           url : 'what ever'
        });

        var paidliststore = new Ext.data.Store ({

            proxy:proxy,
            id:'store-paidlist',
            reader: new Ext.data.JsonReader ({
                root:'data'
            },[
                {name:'trano',type:'String'},
                {name:'tgl',type:'String'},
                {name:'user',type:'String'},
                {name:'statusppn',type:'String'},
                {name:'val_kode',type:'String'},
                {name:'total',type:'int'}
            ])

        })

        var itemstore = new Ext.data.Store ({

            proxy:proxy,
            id:'store-item',
            reader: new Ext.data.JsonReader ({
                root:'data',
                totalProperty:'total'
            },[
                {
                    name:'kode_brg',
                    type:'String'
                },{
                    name:'nama_brg',
                    type:'String'
                },{
                    name:'qty',
                    type:'String'
                },{
                    name:'harga',
                    type:'int'
                },{
                    name:'val_kode',
                    type:'String'
                },{
                    name:'total',
                    type:'int'
                }
            ])
        })


        

        var paidlistgrid = new Ext.grid.GridPanel ({

            store:paidliststore,
            id:'paidlist-grid',
            height:124,
            columns:[{
                header:'Trano',
                dataIndex:'trano',
                align:'center',
                width:120
            },{
                header:'Date',
                dataIndex:'tgl',
                align:'center',
                width:100
            },{
                header:'User',
                dataIndex:'user',
                align:'center',
                width:60
            },{
                header:'PPN',
                dataIndex:'statusppn',
                align:'center',
                width:40
            },{
                header:'Valuta',
                dataIndex:'val_kode',
                align:'center',
                width:80
            },{
                header:'Total',
                dataIndex:'total',
                align:'center',
                width:100,
                renderer: function(v){
                        return v ? Ext.util.Format.number(v, '0,0') : '';
                        }
            }]

        })

        function ReimbursBalance ()
        {
            var reimbursval = parseFloat(Ext.getCmp('reimburs-value').getValue().toString().replace(/\$|\,/g,''));
            var reimburspaid = parseFloat(Ext.getCmp('reimburs-paid').getValue().toString().replace(/\$|\,/g,''));
            var balance = reimbursval - reimburspaid;
            Ext.getCmp('reimburs-balance').setValue(balance);
            Ext.getCmp('payment-value').setValue(balance);
            Ext.getCmp('g-total').setValue(balance);
        }

        function SetValueForm (trano)
        {
            Ext.Ajax.request ({
            url:'/finance/paymentreimbursement/getformpayreimburs/trano/'+trano,
            method:'POST',
            success: function(result,request)
            {
                var returndata = Ext.util.JSON.decode(result.responseText);
                Ext.getCmp('trans-date').setValue(returndata.data[0].tgl);
                Ext.getCmp('user-input').setValue(returndata.data[0].user);
                Ext.getCmp('prj_kode').setValue(returndata.data[0].prj_kode);
                Ext.getCmp('prj_nama').setValue(returndata.data[0].prj_nama);
                Ext.getCmp('sit_kode').setValue(returndata.data[0].sit_kode);
                Ext.getCmp('sit_nama').setValue(returndata.data[0].sit_nama);
                Ext.getCmp('prj_kode').setValue(returndata.data[0].prj_kode);
                Ext.getCmp('workid').setValue(returndata.data[0].workid);
                Ext.getCmp('worknama').setValue(returndata.data[0].workname);
                Ext.getCmp('cus_kode').setValue(returndata.data[0].cus_kode);
                Ext.getCmp('cus_nama').setValue(returndata.data[0].cus_nama);
                Ext.getCmp('description').setValue(returndata.data[0].ket);
                Ext.getCmp('reimburs-value').setValue(returndata.data[0].total);
                Ext.getCmp('IDR-value').setValue(returndata.data[0].val_kode);
                Ext.getCmp('payment-value').setValue(returndata.data[0].total);
                Ext.getCmp('g-total').setValue(returndata.data[0].total);
                Ext.getCmp('reimburs-tax').setValue('');
                Ext.getCmp('IDR-paid').setValue(returndata.data[0].val_kode);
                Ext.getCmp('IDR-balance').setValue(returndata.data[0].val_kode);
                Ext.getCmp('reimburs-paid').setValue(returndata.sumpaidlist[0].paidsum);
                ReimbursBalance();
            },
            failure:function(action)
            {
                if (action.failureType == 'server')
                {
                    obj = Ext.util.JSON.decode(action.response.responseText);
                    Ext.Msg.alert(('Error!'),obj.errors.reason);
                }
            }
        })
    }

    function showReimbursementList ()
    {
        var combodata = [
                ['Trano',1],
                ['Project kode',2],
                ['Project name',3],
                ['Site kode',4],
                ['Site name',5]
            ];

        var combostore = new Ext.data.ArrayStore({
            fields: ['a', 'b'],
            data : combodata
        });
        var combo = new Ext.form.ComboBox({
            store: combostore,
            displayField:'a',
            valueField: 'b',
            typeAhead: true,
            mode: 'local',
            triggerAction: 'all',
            selectOnFocus:true,
            name:'option',
            width:100,
            style: 'margin-left: 5px',
            value:1,
            id:'option',
            forceSelection: true,
            editable: false

        });

        var storereimbursementH = new Ext.data.Store ({

            url:'/finance/paymentreimbursement/getreimbursheader',
            autoLoad:true,
            reader: new Ext.data.JsonReader ({
                root:'data',
                totalProperty:'total',
                fields:[
                {
                    name:'trano',type:'String'
                },{
                    name:'prj_kode',type:'String'
                },{
                    name:'prj_nama',type:'String'
                },{
                    name:'sit_kode',type:'String'
                },{
                    name:'sit_nama',type:'String'
                }
            ]
            })


        })

        var reimbursementGrid = new Ext.grid.GridPanel ({

            store:storereimbursementH,
            height:300,
            listeners:{
                'rowdblclick':function (gridaktif,rowIndex,e)
                {
                    isDbClick = true;
                    var reimburs = gridaktif.getStore().getAt(rowIndex);
                    var trano = reimburs.get('trano');
                    Ext.getCmp('rembursement-number').setValue(trano);
                    SetValueForm (trano);

                    itemstore.proxy.setUrl('/finance/paymentreimbursement/getviewreimbursitemlist/trano/' + trano);
                    itemstore.load();
                    Ext.getCmp('grid-item').getView().refresh();

                    paidliststore.proxy.setUrl('/finance/paymentreimbursement/getpaidlist/trano/' + trano);
                    paidliststore.load();
                    Ext.getCmp('paidlist-grid').getView().refresh();

//                    ReimbursPaid ();

                    
//                    Ext.getCmp('payment-reimbursement').getForm().loadRecord(reimburs);
//                    Ext.getCmp('payment-reimbursement').getForm().loadData(storereimbursementH);
                    reimbursementshow.close();
                }
            },
            columns:[
                {
                    header:'Trano',
                    dataIndex:'trano',
                    sortable:true,
                    width:120,
                    align:'center'
                },{
                    header:'Project Code',
                    dataIndex:'prj_kode',
                    sortable:true,
                    width:120,
                    align:'center'
                },{
                    header:'Project Name',
                    dataIndex:'prj_nama',
                    sortable:true,
                    width:120,
                    align:'center'
                },{
                    header:'Site Code',
                    dataIndex:'sit_kode',
                    sortable:true,
                    width:120,
                    align:'center'
                },{
                    header:'Site Name',
                    dataIndex:'sit_nama',
                    sortable:true,
                    width:120,
                    align:'center'
                }
            ],tbar:[
                {
                    text:'Search By',
                    xtype:'label',
                    style:'margin-left:5px'
                },combo,{
                    xtype:'textfield',
                    id:'search',
                    style:'margin-left:10px',
                    enableKeyEvents:true,
                    listeners:{
                        'keyup' : function (txttext,event)
                        {
                            var txttext = txttext.getValue();
                            if (txttext != "" && txttext.toString().length >= 3)
                            {
                                var option = Ext.getCmp('option').getValue();
                                var search = Ext.getCmp('search').getValue();

                                storereimbursementH.proxy.setUrl('/finance/paymentreimbursement/getreimbursheader/search/' + search + '/option/' + option);
                                storereimbursementH.reload();
                                reimbursementGrid.getView().refresh();
                            }
                        }
                    }
                }
            ],bbar:new Ext.PagingToolbar ({
                id: 'paging',
                pageSize: 10,
                store: storereimbursementH,
                displayInfo: true,
                displayMsg: 'Displaying data {0} - {1} of {2}',
                emptyMsg: "No data to display"
            })



        })

        var reimbursementshow = new Ext.Window ({

            title:'Choose Reimbursement',
            id:'choose-reimbursement',
            layout:'absolute',
            minHeight: 200,
            stateful:false,
            modal: true,
            resizable: false,
            closeAction: 'close',
            width: 432,
            height: 330,
            loadMask:true,
            items:[
                reimbursementGrid
            ]
        })

        reimbursementshow.show();
    }<!-- end function showReimbursementList-->



        var paymenttypedata = [
                ['CASH','CASH'],
                ['CHEQUE','CHEQUE'],
                ['GIRO','GIRO']
            ];

        var paymenttypestore = new Ext.data.ArrayStore({
            fields: ['a', 'b'],
            data : paymenttypedata
        });
        var paymenttypecombo = new Ext.form.ComboBox({
            store: paymenttypestore,
            displayField:'a',
            valueField: 'b',
            typeAhead: true,
            mode: 'local',
            triggerAction: 'all',
            selectOnFocus:true,
            name:'option',
            width:126,
//            style: 'margin-left: 5px',
            id:'option-paymenttype',
            fieldLabel:'Payment Type',
            emptyText:'Select a type ...',
            allowBlank:false,
            forceSelection: true,
            editable: false
        });

        var itemgrid = new Ext.grid.GridPanel ({

            id:'grid-item',
            store:itemstore,
            height:220,
            columns:[
                {
                    header:'Product ID',
                    dataIndex:'kode_brg',
                    align:'center'
                },{
                    header:'Description',
                    dataIndex:'nama_brg',
                    align:'center'
                },{
                    header:'Qty',
                    dataIndex:'qty',
                    align:'center'
                },{
                    header:'Price',
                    dataIndex:'harga',
                    align:'center',
                    renderer: function(v){
                        return v ? Ext.util.Format.number(v, '0,0') : '';
                        }
                },{
                    header:'Valuta',
                    dataIndex:'val_kode',
                    align:'center'
                },{
                    header:'Total',
                    dataIndex:'total',
                    align:'right',
                    renderer: function(v ,p, record){
                        return Ext.util.Format.number((parseFloat(record.data['qty']) * (parseFloat(record.data['harga']))), '0,0');
                        }
                }
            ]

        })

        var reimbursement_payment = new Ext.form.FieldSet ({
            title:'Payment Reimbursement',
            labelWidth:170,
            labelAlign:'left',
            id: 'fieldset-2',
            items:[
//                    new Ext.FormPanel ({
                    {
                        id:'reimburs-payment',
                        items:[
                            {
                                layout:'column',
                                items:[
                                {
                                    columnWidth:0.5,
                                    items:[
                                        {
                                            layout:'column',
                                            items:[
                                                {
                                                    columnWidth:0.8,
                                                    layout:'form',
                                                    items:[
                                                            new Ext.ux.customRendererField({
                                                                priceDelemiter:',',
                                                                xtype:'textfield',
                                                                fieldLabel:'Reimbursement Value',
                                                                anchor:'98%',
                                                                id:'reimburs-value',
                                                                disabled:true,
                                                                style:'text-align:right'
                                                            })
                                                        ,
                                                            new Ext.ux.customRendererField ({
                                                                xtype:'textfield',
                                                                fieldLabel:'Reimbursement Already Paid',
                                                                id:'reimburs-paid',
                                                                anchor:'98%',
                                                                disabled:true,
                                                                style:'text-align:right',
                                                                priceDelemiter:','
                                                            })
                                                    ]
                                                },{
                                                    columnWidth:0.2,
                                                    layout:'form',
                                                    items:[
                                                        {
                                                            xtype:'textfield',
                                                            anchor:'50%',
                                                            id:'IDR-value',
                                                            hideLabel:true,
                                                            disabled:true,
                                                            style:'text-align:right'
                                                        },{
                                                            xtype:'textfield',
                                                            anchor:'50%',
                                                            id:'IDR-paid',
                                                            hideLabel:true,
                                                            disabled:true,
                                                            style:'text-align:right'
                                                        }
                                                    ]
                                                }
                                            ]

                                        },{
                                            xtype:'fieldset',
                                            title:'Reimbursement Paid List',
                                            width:350,
                                            checkboxToggle:true,
                                            collapsed:true,
                                            items:[paidlistgrid]
                                        },{
                                            layout:'column',
                                            items:[
                                                {
                                                    columnWidth:0.8,
                                                    layout:'form',
                                                    items:[
                                                            new Ext.ux.customRendererField ({
                                                                xtype:'textfield',
                                                                fieldLabel:'Reimbursement Balance',
                                                                anchor:'98%',
                                                                id:'reimburs-balance',
                                                                disabled:true,
                                                                style:'text-align:right',
                                                                priceDelemiter:','
                                                            })
                                                    ]
                                                },{
                                                    columnWidth:0.2,
                                                    layout:'form',
                                                    items:[
                                                        {
                                                            xtype:'textfield',
                                                            anchor:'50%',
                                                            id:'IDR-balance',
                                                            hideLabel:true,
                                                            disabled:true,
                                                            style:'text-align:right'
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },{
                                    columnWidth:0.5,
                                    layout:'form',
                                    labelWidth:120,
                                    items:[
                                        {
                                            xtype:'textfield',
                                            fieldLabel:'User Payment',
                                            anchor:'61%',
                                            id:'user-payment',
                                            readOnly:true,
                                            value:'<?php echo $this->userPayment; ?>'
                                        },{
                                            layout:'column',
                                            items:[
                                                {
                                                    columnWidth:0.5,
                                                    layout:'form',
                                                    items:[
                                                            new Ext.ux.customRendererField ({
                                                                xtype:'textfield',
                                                                fieldLabel:'Exchange Rate',
                                                                anchor:'98%',
                                                                readOnly:true,
                                                                id:'rate_text',
                                                                value:getExchangeRate(),
                                                                priceDelemiter:',',
                                                                style:'text-align:right'
                                                            })
                                                    ]
                                                },{
                                                    columnWidth:0.5,
                                                    layout:'form',
                                                    items:[
                                                        {
                                                            xtype:'textfield',
                                                            hideLabel:true,
                                                            anchor:'22%',
                                                            value:'IDR',
                                                            disabled:true,
                                                            style:'text-align:right'
                                                        }
                                                    ]
                                                }
                                            ]
                                        },paymenttypecombo,{
                                            xtype:'textarea',
                                            fieldLabel:'Payment Notes',
                                            id:'payment-notes',
                                            anchor:'90%'
                                        },{
                                            xtype:'radiogroup',
                                            fieldLabel:'Payment PPN/VAT',
                                            id:'ppn-radio',
                                            items:[
                                                {
                                                    boxLabel:'Yes',
                                                    name:'ppn',
                                                    inputValue:'YES'
                                                },{
                                                    boxLabel:'No',
                                                    name:'ppn',
                                                    inputValue:'NO',
                                                    checked:true
                                                }
                                            ],
                                            listeners:{
                                                'change':function (t,ch)
                                                {
                                                    if (Ext.getCmp('rembursement-number').getValue() == '')
                                                    {
                                                            Ext.MessageBox.show({
                                                           title: 'Error',
                                                           msg: 'Please Reimbursement Number First!',
                                                           buttons: Ext.MessageBox.OK,
                                                           icon: Ext.MessageBox.ERROR
                                                           });
                                                            return false;
                                                    }
                                                    if (ch.getGroupValue() == 'YES')
                                                    {
                                                        Ext.getCmp('reimburs-tax').disable();
                                                        var total = parseFloat(Ext.getCmp('payment-value').getValue().toString().replace(/\$|\,/g,''));
                                                        var pajak  = 0.1 * total;
                                                        var gtotal = total + pajak;
                                                        Ext.getCmp('reimburs-tax').setValue(pajak);
                                                        Ext.getCmp('g-total').setValue(gtotal);
                                                    }else
                                                    {
                                                        Ext.getCmp('reimburs-tax').disable();
                                                        Ext.getCmp('reimburs-tax').setValue('');
                                                        var gtotal = parseFloat(Ext.getCmp('payment-value').getValue().toString().replace(/\$|\,/g,''));
                                                        Ext.getCmp('g-total').setValue(gtotal);
                                                    }
                                                }
                                            }
                                        },{
                                            layout:'column',
                                            items:[
                                                {
                                                    columnWidth:0.7,
                                                    layout:'form',
                                                    items:[
                                                            new Ext.ux.customRendererField ({
                                                                xtype:'textfield',
                                                                fieldLabel:'Payment Value',
                                                                anchor:'98%',
                                                                id:'payment-value',
                                                                vtype:'numeric',
                                                                priceDelemiter:',',
                                                                style:'text-align:right',
                                                                enableKeyEvents:true,listeners :
                                                                {
                                                                    'keyup' : function (t,e)
                                                                    {
                                                                        if (Ext.getCmp('ppn-radio').getValue().getGroupValue() == 'YES')
                                                                        {
                                                                            Ext.getCmp('reimburs-tax').disable();
                                                                            var total = parseFloat(Ext.getCmp('payment-value').getValue().toString().replace(/\$|\,/g,''));
                                                                            var pajak  = 0.1 * total;
                                                                            var gtotal = total + pajak;
                                                                            Ext.getCmp('reimburs-tax').setValue(pajak);
                                                                            Ext.getCmp('g-total').setValue(gtotal);
                                                                        }else
                                                                        {
                                                                            Ext.getCmp('reimburs-tax').disable();
                                                                            Ext.getCmp('reimburs-tax').setValue('');
                                                                            var gtotal = parseFloat(Ext.getCmp('payment-value').getValue().toString().replace(/\$|\,/g,''));
                                                                            Ext.getCmp('g-total').setValue(gtotal);
                                                                        }
                                                                    }
                                                                }
                                                            })
                                                    ]
                                                },{
                                                    columnWidth:0.3,
                                                    layout:'form',
                                                    items:[
                                                        {
                                                            xtype:'textfield',
                                                            hideLabel:true,
                                                            anchor:'30%',
                                                            value:'IDR',
                                                            disabled:true
                                                        }
                                                    ]
                                                }
                                            ]
                                        },{
                                            layout:'column',
                                            items:[
                                                {
                                                    columnWidth:0.7,
                                                    layout:'form',
                                                    items:[
                                                        new Ext.ux.customRendererField ({
                                                            xtype:'textfield',
                                                            fieldLabel:'Payment Tax',
                                                            anchor:'98%',
                                                            disabled:true,
                                                            priceDelemiter:',',
                                                            style:"text-align:right",
                                                            id:'reimburs-tax'
                                                        })
                                                    ]
                                                },{
                                                    columnWidth:0.3,
                                                    layout:'form',
                                                    items:[
                                                        {
                                                            xtype:'textfield',
                                                            hideLabel:true,
                                                            anchor:'30%',
                                                            value:'IDR',
                                                            disabled:true
                                                        }
                                                    ]
                                                }
                                            ]
                                        },{
                                            layout:'column',
                                            items:[
                                                {
                                                    columnWidth:0.7,
                                                    layout:'form',
                                                    items:[
                                                        new Ext.ux.customRendererField ({
                                                            xtype:'textfield',
                                                            fieldLabel:'Grand Total',
                                                            anchor:'98%',
                                                            readOnly:true,
                                                            id:'g-total',
                                                            style:'text-align:right',
                                                            priceDelemiter:','
                                                        })
                                                    ]
                                                },{
                                                    columnWidth:0.3,
                                                    layout:'form',
                                                    items:[
                                                        {
                                                            xtype:'textfield',
                                                            hideLabel:true,
                                                            anchor:'30%',
                                                            value:'IDR',
                                                            disabled:true
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                ]
                        }
                    ]
                }
                        ]
//                    })
                }
            ]
        })

        var reimbursement_list = new Ext.form.FieldSet ({

            title:'Reimbursement Item List',
            style:'marginTop:52px',
            items:[
                itemgrid
            ]

        })

        var reimbursement_detail = new Ext.form.FieldSet ({

            title:'Reimbursement Transaction Detail',
            labelAlign:'left',
            width:390,
            labelWidth:100,
            layout:'form',
            id: 'fieldset-1',
            items:[
//                    new Ext.FormPanel ({
                {
                        id:'reimbursement-trans-detail',
                        items:[
                            {
                                layout:'column',
                                items:[

                                    {
                                        columnWidth:1,
                                        layout:'form',
                                        items:[
                                                {
                                                xtype:'textfield',
                                                fieldLabel:'Transaction Date',
                                                id:'trans-date',
                                                readOnly:true
                                            },{
                                                xtype:'textfield',
                                                fieldLabel:'User Input',
                                                id:'user-input',
                                                readOnly:true
                                            }
                                                ]
                                    }
                                ]
                            },
                            {
                                layout:'column',
                                items:[

                                    {
                                        columnWidth:.5,
                                        layout:'form',
                                        items:[

                                            {
                                                xtype:'textfield',
                                                fieldLabel: 'Project Code',
                                                id:'prj_kode',
                                                anchor:'95%',
                                                readOnly:true,
                                                name:'prj_kode'
                                            },{
                                                xtype:'textfield',
                                                fieldLabel: 'Site Code',
                                                anchor:'95%',
                                                id:'sit_kode',
                                                readOnly:true
                                            },{
                                                xtype:'textfield',
                                                fieldLabel:'Work ID',
                                                id:'workid',
                                                anchor:'95%',
                                                readOnly:true
                                            },{
                                                xtype:'textfield',
                                                fieldLabel:'Customer Code',
                                                id:'cus_kode',
                                                anchor:'95%',
                                                readOnly:true
                                            }
                                        ]
                                    },{
                                        columnWidth:.5,
                                        layout:'form',
                                        items:[
                                            {
                                                xtype:'textfield',
                                                hideLabel: true,
                                                anchor:'95%',
                                                id:'prj_nama',
                                                readOnly:true
                                            },{
                                                xtype:'textfield',
                                                hideLabel: true,
                                                anchor:'95%',
                                                id:'sit_nama',
                                                readOnly:true
                                            },{
                                                xtype:'textfield',
                                                hideLabel:true,
                                                anchor:'95%',
                                                id:'worknama',
                                                readOnly:true
                                            },{
                                                xtype:'textfield',
                                                hideLabel:true,
                                                anchor:'95%',
                                                id:'cus_nama',
                                                readOnly:true
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                layout:'column',
                                items:[

                                    {
                                        columnWidth:1,
                                        layout:'form',
                                        items:[
                                            {
                                                xtype:'textarea',
                                                fieldLabel:'Description',
                                                id:'description',
                                                width:253,
                                                height:60,
                                                readOnly:true
                                            }
                                        ]
                                    }
                                ]

                            }
                        ]
//                    })
                }
            ]

        })


        var insert_payrem = new Ext.form.FormPanel ({

            title:'Insert Payment Reimbursement',
            renderTo:'payment_reimbursement',
            id:'payment-reimbursement',
            frame:true,
            width:800,
            items:[
                {
                    layout:'column',
                    items:[
                        {
                            columnWidth:0.5,
                            layout:'form',
                            labelWidth:140,
                            items:[{
                                fieldLabel : 'Transaction Type',
                                id : 'trano-type',
                                name: 'type',
                                xtype: 'combo',
                                width: 146,
                                allowBlank: false,
                                store: new Ext.data.SimpleStore({
                                    fields:['nilai','name'],
                                    data:[
                                            ['BOR','BOR'],
                                            ['BER','BER'],
                                            ['SOR','SOR'],
                                            ['SER','SER'],
                                            ['SEU','SEU'],
                                            ['SOU','SOU'],
                                            ['PC','PC'],
                                            ['PER','PER'],
                                            ['PEU','PEU'],
                                            ['POU','POU'],
                                            ['POR','POR'],
                                            ['RPC', 'RPC']
                                        ]
                                 }),
                                 valueField:'nilai',
                                 displayField:'name',
                                 typeAhead: true,
                                 forceSelection: true,
                                 editable: false,
                                 mode: 'local',
                                 triggerAction: 'all',
                                 selectOnFocus: true,
                                 emptyText: 'Select a type ...'
                            },{
                                xtype:'trigger',
                                fieldLabel:'Reimbursement Number',
                                triggerClass: 'teropong',
                                allowBlank: false,
                                editable : false,
                                id:'rembursement-number',
                                onTriggerClick: function ()
                                {
                                    showReimbursementList ();
                                }
                            },reimbursement_detail]
                        },{
                            columnWidth:0.5,
                            layout:'form',
                            items:[
                                reimbursement_list
                            ]
                        }
                    ]
                },reimbursement_payment
            ],
            buttons:[
                {
                    text:'Submit',
                    id:'reimburs-payment-submit',
                    iconCls:'silk-add',
                    handler:function (btn,ev)
                    {
                        if (Ext.getCmp('trano-type').getValue()== '')
                        {
                           Ext.MessageBox.show({
                           title: 'Error',
                           msg: 'Please select your transaction type',
                           buttons: Ext.MessageBox.OK,
                           icon: Ext.MessageBox.ERROR
                           });
                           return false;
                        }
                        if (Ext.getCmp('rembursement-number').getValue() == '')
                        {
                           Ext.MessageBox.show({
                           title: 'Error',
                           msg: 'Please select your reimbursement number',
                           buttons: Ext.MessageBox.OK,
                           icon: Ext.MessageBox.ERROR
                           });
                           return false;
                        }
                        if (Ext.getCmp('option-paymenttype').getValue()== '')
                        {
                           Ext.MessageBox.show({
                           title: 'Error',
                           msg: 'Please select your payment type',
                           buttons: Ext.MessageBox.OK,
                           icon: Ext.MessageBox.ERROR
                           });
                           return false;
                        }
                        if (parseFloat(Ext.getCmp('payment-value').getValue().toString().replace(/\$|\,/g,'')) > parseFloat(Ext.getCmp('reimburs-balance').getValue().toString().replace(/\$|\,/g,'')))
                        {
                            Ext.MessageBox.show({
                            title: 'Error',
                            msg: 'Sorry payment value is greater than reimbursement balance !',
                            buttons: Ext.MessageBox.OK,
                            icon: Ext.MessageBox.ERROR
                            });
                            return false;
                        }
                        if (parseFloat(Ext.getCmp('payment-value').getValue().toString().replace(/\$|\,/g,'')) <= 0)
                        {
                            Ext.MessageBox.show({
                            title: 'Error',
                            msg: 'Sorry payment value must be grater then 0',
                            buttons: Ext.MessageBox.OK,
                            icon: Ext.MessageBox.ERROR
                            });
                            return false;
                        }

                        Ext.MessageBox.confirm('Confirm','Are you sure want this action ?',function(btn){

                            if (btn == 'yes')
                            {
//                                var transdetail_encode = '';

                                var teks = Ext.getCmp('reimbursement-trans-detail').findByType('textfield');
                                var jsonTransDetail = '';
                                Ext.each(teks, function (t, index){
                            			jsonTransDetail = jsonTransDetail + '"' + t.id + '"' + ":" + '"' + t.getValue().toString().replace(/\"|\'|\n|\t|\r/g,'') + '",';
                                    });
                                jsonTransDetail = jsonTransDetail.substring(0, jsonTransDetail.length - 1);
                                var transdetail_encode = "{" + jsonTransDetail + "}";
//                                var transdetail = Ext.getCmp('reimbursement-trans-detail').getForm().getValues();
//                                var transdetail_encode = Ext.util.JSON.encode(transdetail);
//                                var transdetail_encode = '[' + transdetail_encode.substring(0, transdetail_encode.length - 1) + ']';


                                var itemslist = '';
                                itemgrid.getStore().each(function(store){
                                    var encode = Ext.util.JSON.encode(store.data);
                                    if (encode != undefined)
                                        itemslist += encode + ',';
                                });
                                itemslist = '[' + itemslist.substring(0, itemslist.length - 1) + ']';

                                var teks = Ext.getCmp('reimburs-payment').findByType('textfield');
                                var jsonTransPayment = '';
                                Ext.each(teks, function (t, index){
                            			jsonTransPayment = jsonTransPayment + '"' + t.id + '"' + ":" + '"' + t.getValue().toString().replace(/\"|\'|\n|\t|\r/g,'') + '",';
                                    });
                                jsonTransPayment = jsonTransPayment + '"ppn":' + '"' + Ext.getCmp('ppn-radio').getValue().getRawValue() + '",';
                                jsonTransPayment = jsonTransPayment + '"option":' + '"' + Ext.getCmp('option-paymenttype').getRawValue() + '"';

//                                jsonTransPayment = jsonTransPayment.substring(0, jsonTransPayment.length - 1);
                                var payment_encode = "{" + jsonTransPayment + "}";

//                                var payment = Ext.getCmp('reimburs-payment').getForm().getValues();
//                                var payment_encode = Ext.util.JSON.encode(payment);
//                                var payment_json = '[' + payment_encode.substring(0, payment_encode.length - 1) + ']';


                                var reimburs_trano = Ext.getCmp('rembursement-number').getValue();
                                var trano_type = Ext.getCmp('trano-type').getValue();

                                var params = {
                                    transdetail:transdetail_encode,
                                    itemslist:itemslist,
                                    payment:payment_encode
                                }

                                Ext.Ajax.request({
                                    url:'/finance/paymentreimbursement/getpaymentreimburs/rem_trano/'+ reimburs_trano + '/type_trano/' + trano_type,
                                    method:'POST',
                                    params:params,
                                    success:function(result){
                                        obj = Ext.util.JSON.decode(result.responseText);

                                        if (obj.success)
                                        {
                                            Ext.Msg.alert ('Message','Success, Data has been saved' + '<br><br>Your Transaction number is <b><font color="#ff0000">' + obj.number + '</font></b>' );
                                            myPanel = Ext.getCmp('abs-budget-panel');
                                            myPanel.body.load({
                                            url: '/procurement/procurement/reimburs',
                                            scripts : true
                                            });
                                        }else
                                        {
                                            Ext.Msg.alert('Error', obj.msg);
                                        }
                                    },
                                    failure:function( action){
                                    if(action.failureType == 'server'){
                                      obj = Ext.util.JSON.decode(action.response.responseText);
                                      Ext.Msg.alert('Error!', obj.errors.reason);
                                    }else{
                                      Ext.Msg.alert('Warning!', 'Server is unreachable : ' + action.response.responseText);
                                    }
                                    }

                                })
                            }
                           
                        })
                    },
                    scope:this
                },{
                    text:'Reset',
                    handler: function (btn,ev)
                    {
                        Ext.getCmp('payment-reimbursement').getForm().reset();
                        itemstore.removeAll();
                        getExchangeRate();
                    },
                    scope:this
                },{
                    text:'Cancel',
                    handler:function(btn,ev) {
                        mypanel = Ext.getCmp('abs-budget-panel');
                        mypanel.body.load({
                            url:'/procurement/procurement/reimburs',
                            scripts:true
                        });
                    },
                    scope:this
                }
            ]


        })


    })



</script>

    <div id="payment_reimbursement"></div><br>
