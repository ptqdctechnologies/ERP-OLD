<script type="text/javascript">

    Ext.apply(Ext.form.VTypes,{
        numericText: "Only numbers are allowed.",
        numericMask: /[0-9]/,
        numericRe: /(^-?dd*.d*$)|(^-?dd*$)|(^-?.dd*$)/,
        numeric: function(v) {
            return function() { return this.numericRe.test(v)} ;
	        }
    });

    var pettycashinlist = Ext.data.Record.create([
        {name:'trano'},
        {name:'ref_number'},
        {name:'tgl'},
        {name:'uid'},
        {name:'coa_kode'},
        {name:'coa_nama'},
        {name:'val_kode'},
        {name:'debit'},
        {name:'credit'}
    ])

    var storepettycashin = new Ext.data.GroupingStore ({
        id:'store-bankin',
        reader:new Ext.data.JsonReader({fields:pettycashinlist}),
        listeners:{
            'load':function(record){
                hitungTotal();
            }
        }
    });

    var totDebit = 0;
    var totCredit = 0;

    function hitungTotal()
    {
        totDebit = 0;
        totCredit = 0;

        storepettycashin.each(function(items){
                totDebit += (parseFloat(items.data['debit']));
                totCredit += (parseFloat(items.data['credit']));

        });
        Ext.getCmp('debittotal').setText('Total Debit : ' + Ext.util.Format.number(totDebit, '0,0'));
        Ext.getCmp('credittotal').setText('Total Credit : ' + Ext.util.Format.number(totCredit, '0,0'));
    }

    function edit(r)
    {

//        var strPR = storebankin.getAt(storePR.findExact('id',stores.data['id']));

        var dat = storepettycashin.getAt(r);
        Ext.getCmp('acc-number').setValue(dat.data['ref_number']);
        Ext.getCmp('coa-kode').setValue(dat.data['coa_kode']);
        Ext.getCmp('coa-nama').setValue(dat.data['coa_nama']);
        Ext.getCmp('val-kode').setValue(dat.data['val_kode']);
        Ext.getCmp('debit').setValue(dat.data['debit']);
        Ext.getCmp('credit').setValue(dat.data['credit']);

        Ext.getCmp('form-insert-pettycash-in').stat = 'edit';
        Ext.getCmp('form-insert-pettycash-in').idEdit = dat.id;
    }

    function deleterowgrid (idItem)
    {
        Ext.MessageBox.confirm('Confirm', 'Are you sure want to delete this?', function(btn){
            if (btn == 'yes')
            {
                var store = storepettycashin;
                var dat = store.getById(idItem);

                if (dat)
                {
                    store.remove(dat);
                    Ext.getCmp('form-insert-pettycash-in').stat = 'new';
                    Ext.getCmp('form-insert-pettycash-in').idEdit = '';
                    Ext.getCmp('grid-pettycashin').getView().refresh();
                    hitungTotal();
                }
            }
        });
    }

    Ext.onReady(function(){

        Ext.QuickTips.init();

        Ext.form.Field.prototype.msgTarget = 'side';

        var formpanel = new Ext.form.FormPanel ({

            title:'Petty Cash Receive Money',
            id:'form-insert-pettycash-in',
            renderTo:'insert_pettycash_in',
            frame:true,
            labelAlign: 'top',
            style:'margin:10 10 10 10',
            width:400,
            stat:'new',
            items:[{
                xtype:'textfield',
                fieldLabel:'Referrence ',
                id:'acc-number'
            },{
                layout:'column',
                items:[{
                    columnWidth:0.33,
                    layout:'form',
                    items:[{
                        xtype:'combo',
                        width:100,
                        fieldLabel:'Cart Of Account ',
                        store: new Ext.data.Store({
                            autoLoad: true,
                            fields:['name','nilai'],
                            proxy: new Ext.data.HttpProxy({
                                url: '/finance/paymentreimbursement/getcoalist'
                            }),
                            reader: new Ext.data.JsonReader({
                                totalProperty: 'total',
                                root: 'data'
                            }, [{
                                    name: 'coa_kode'
                                },{
                                    name: 'coa_nama'
                                }])
                        }),
                        valueField:'coa_kode',
                        displayField:'coa_kode',
                        typeAhead: true,
                        forceSelection: true,
                        editable: true,
                        mode: 'remote',
                        triggerAction: 'all',
                        selectOnFocus: true,
                        id:'coa-kode',
                        allowBlank:false,
                        anchor:'79%',
                        listeners:{
                            'select':function(combo,rec,index)
                            {
                                var row = rec.data['coa_nama'];
                                Ext.getCmp('coa-nama').setValue(row);

                            }
                        }
                    }]
                },{
                    columnWidth:0.67,
                    layout:'form',
                    items:[{
                        xtype:'textfield',
                        fieldLabel:'',
                        id:'coa-nama',
                        readOnly:true,
                        allowBlank:false
                    }]
                }]
            },{
                fieldLabel:'Valuta ',
                xtype:'combo',
                width: 100,
                allowBlank: false,
                store: new Ext.data.SimpleStore({
                    fields:['name','nilai'],
                    data:[
                            ['IDR','IDR'],
                            ['USD','USD']
                        ]
                }),
                valueField:'nilai',
                displayField:'name',
                typeAhead: true,
                forceSelection: true,
                editable: false,
                mode: 'local',
                triggerAction: 'all',
                selectOnFocus: true,
                id:'val-kode'
            },{
                layout:'column',
                items:[{
                    columnWidth:0.5,
                    layout:'form',
                    items:[{
                        xtype:'textfield',
                        id:'debit',
                        style:'text-align:right',
                        priceDelemiter:',',
                        fieldLabel:'Debit ',
                        vtype:'numeric',
                        value:0,
                        listeners:{
                            'blur': function(t) {
                                    if (!isNaN(t.getValue()))
                                    {
                                        t.setValue(CommaFormatted(t.getValue()));
                                    }
                                },
                                'focus': function(t) {
                                    if (t.getValue().search(",")>0)
                                        t.setValue(t.getValue().toString().replace(/\$|\,/g,''));
                                    Ext.getCmp('credit').setValue(0);
                                }
                        }
                    }]
                },{
                    columnWidth:0.5,
                    layout:'form',
                    items:[{
                            xtype:'textfield',
                            id:'credit',
                            style:'text-align:right',
                            priceDelemiter:',',
                            fieldLabel:'Credit ',
                            vtype:'numeric',
                            value:0,
                            listeners:{
                                'blur': function(t) {
                                    if (!isNaN(t.getValue()))
                                    {
                                        t.setValue(CommaFormatted(t.getValue()));
                                    }
                                },
                                'focus': function(t) {
                                    if (t.getValue().search(",")>0)
                                        t.setValue(t.getValue().toString().replace(/\$|\,/g,''));
                                    Ext.getCmp('debit').setValue(0);
                                }
                            }
                    }]
                }]
            }],
            buttons:[{
                text:'Add to Grid',
                iconCls:'silk-add',
                handler:function(btn,ev)
                {
                    if (!Ext.getCmp('form-insert-pettycash-in').getForm().isValid())
                    {
                        Ext.Msg.alert('Error','Form not valid');
                        return false;
                    }

                    if (Ext.getCmp('debit').getValue().toString().replace(/\$|\,/g,'') == 0 && Ext.getCmp('credit').getValue().toString().replace(/\$|\,/g,'') == 0 )
                    {
                        Ext.MessageBox.show({
                        title: 'Error',
                        msg: 'Sorry , please insert field debit or credit',
                        buttons: Ext.MessageBox.OK,
                        icon: Ext.MessageBox.ERROR
                        });
                        return false;
                    }

                    if (storepettycashin.getCount() > 0)
                        {
                            var row = storepettycashin.getAt(storepettycashin.findExact('val_kode',Ext.getCmp('val-kode').getValue()));

                            if (row == null)
                            {
                                Ext.MessageBox.show({
                                    title: 'Error',
                                    msg: 'Sorry this document different valuta',
                                    buttons: Ext.MessageBox.OK,
                                    icon: Ext.MessageBox.ERROR
                                    });
                                    return false;
                            }
                        }

                    if (Ext.getCmp('form-insert-pettycash-in').stat == 'new')
                    {
                        var e = new pettycashinlist ({
                        ref_number:Ext.getCmp('acc-number').getValue(),
                        coa_kode:Ext.getCmp('coa-kode').getValue(),
                        coa_nama:Ext.getCmp('coa-nama').getValue(),
                        val_kode:Ext.getCmp('val-kode').getValue(),
                        debit:Ext.getCmp('debit').getValue().toString().replace(/\$|\,/g,''),
                        credit:Ext.getCmp('credit').getValue().toString().replace(/\$|\,/g,'')
                        })

                        storepettycashin.add(e);

                        Ext.MessageBox.alert('Status', 'Changes saved successfully.');

                    }else
                    {
                        if (Ext.getCmp('form-insert-pettycash-in').stat == 'edit')
                        {
                            var row = storepettycashin.getById(Ext.getCmp('form-insert-pettycash-in').idEdit);

                            row.data['ref_number'] = Ext.getCmp('acc-number').getValue(),
                            row.data['coa_kode'] = Ext.getCmp('coa-kode').getValue(),
                            row.data['coa_nama'] = Ext.getCmp('coa-nama').getValue(),
                            row.data['val_kode'] = Ext.getCmp('val-kode').getValue(),
                            row.data['debit'] = Ext.getCmp('debit').getValue().toString().replace(/\$|\,/g,''),
                            row.data['credit'] = Ext.getCmp('credit').getValue().toString().replace(/\$|\,/g,'')

                            Ext.MessageBox.alert('Status', 'Update Data successfully.');
                        }
                    }

                    Ext.getCmp('form-insert-pettycash-in').stat = 'new';
                    Ext.getCmp('form-insert-pettycash-in').idEdit = '';
                    Ext.getCmp('grid-pettycashin').getView().refresh();

                    var ref_number = Ext.getCmp('acc-number').getValue();
                    var valuta = Ext.getCmp('val-kode').getValue();

                    Ext.getCmp('form-insert-pettycash-in').getForm().reset();

                    Ext.getCmp('acc-number').setValue(ref_number);
                    Ext.getCmp('val-kode').setValue(valuta);


                    hitungTotal();

                }
            },{
                text:'Reset',
                style:'margin-right:26px;',
                handler:function(btn,ev)
                {
                    Ext.getCmp('form-insert-pettycash-in').getForm().reset();
                }
            }]

        })

        var gridpanel = new Ext.grid.GridPanel ({

            store:storepettycashin,
            renderTo:'grid_pettycashin',
            id:'grid-pettycashin',
            frame:true,
            width:800,
            height:200,
            style:'margin:10 10 10 10',
            viewConfig:{
                forceFit:true
            },
            columns:[new Ext.grid.RowNumberer(),{
                header: "Action",
                width: 60,
                dataIndex: 'id',
                css:'text-align:center;',
                renderer: function (v,p,r) {
                        return '<a href="#" onclick="deleterowgrid(\'' + r.id + '\')"><img src="/images/g_rec_del.png"></a>';
                }
            },{
                header:'Referrence',
                dataIndex:'ref_number',
                sortable:true
            },{
                header:'COA Code',
                dataIndex:'coa_kode',
                sortable:true
            },{
                header:'COA Name',
                dataIndex:'coa_nama',
                sortable:true
            },{
                header:'Valuta',
                dataIndex:'val_kode'
            },{
                header:'Debit',
                dataIndex:'debit',
                sortable:true,
                align:'right',
                renderer: function(v){
                        return v ? Ext.util.Format.number(v, '0,0.00') : '';
                }
            },{
                header:'Credit',
                dataIndex:'credit',
                sortable:true,
                align:'right',
                renderer: function(v){
                        return v ? Ext.util.Format.number(v, '0,0.00') : '';
                }
            }],
            buttons:[{
                text:'Submit',
                iconCls:'icon-save',
                handler:function(btn,ev)
                {
                    var totdebit = parseFloat(totDebit.toString().replace(/\$|\,/g,''));
                    var totcredit = parseFloat(totCredit.toString().replace(/\$|\,/g,''));

                    if (totdebit != totcredit)
                    {
                        Ext.MessageBox.show({
                            title: 'Error',
                            msg: 'Sorry, Debit and Credit Total Must be Balance',
                            buttons: Ext.MessageBox.OK,
                            icon: Ext.MessageBox.ERROR
                        });
                        return false;
                    }

                    var count =  storepettycashin.getCount();
                    if (count == 0)
                    {
                        return false;
                    }

                    Ext.MessageBox.confirm('Confirm','Are you sure want this action ?',function(btn){

                        if (btn == 'yes')
                        {
                            var pettycashindata = '';
                            var totaldata = 0;
                            storepettycashin.each(function(store){
                                pettycashindata += Ext.util.JSON.encode(store.data) + ',';
                            })

                            pettycashindata = '[' + pettycashindata.substring(0, pettycashindata.length - 1) + ']';

                            var params = {
                                pettycashindata:pettycashindata
                            }

                            Ext.Ajax.request({
                                url:'/finance/pettycash/doinsertpettycashin',
                                method:'POST',
                                params:params,
                                success:function(result){
                                    obj = Ext.util.JSON.decode(result.responseText);

                                    if (obj.success)
                                    {
                                        Ext.Msg.alert ('Message','Success, Data has been saved');
                                        myPanel = Ext.getCmp('abs-budget-panel');
                                        myPanel.body.load({
                                        url: '/finance/pettycash/menu',
                                        scripts : true
                                        });
                                    }else
                                    {
                                        Ext.Msg.alert('Error', obj.msg);
                                    }
                                },
                                failure:function( action){
                                    if(action.failureType == 'server'){
                                      obj = Ext.util.JSON.decode(action.response.responseText);
                                      Ext.Msg.alert('Error!', obj.errors.reason);
                                    }else{
                                      Ext.Msg.alert('Warning!', 'Server is unreachable : ' + action.response.responseText);
                                    }
                                }

                            })
                        }

                    })

                }
            }],bbar: new Ext.Toolbar({
                id: 'total-bbar',
                style:"text-align:right",
                items: [{
                         xtype: 'label',
                         id: 'debittotal',
                        style:'color:red;font-weight:bold;margin-right:20px;font-size:12'
                        },
                        {
                         xtype: 'label',
                         id: 'credittotal',
                        style:'color:red;font-weight:bold;font-size:12;margin-right:10px'
                        }],
                layout: 'fit'
            }),
            listeners:{
                'rowdblclick':function(g,r,e)
                {
                    edit(r);

//                    var dat = storebankin.getAt(r);
//                    Ext.getCmp('acc-number').setValue(dat.data['ref_number']);
//                    Ext.getCmp('coa-kode').setValue(dat.data['coa_kode']);
//                    Ext.getCmp('coa-nama').setValue(dat.data['coa_nama']);
//                    Ext.getCmp('val-kode').setValue(dat.data['val_kode']);
//                    Ext.getCmp('debit').setValue(dat.data['debit']);
//                    Ext.getCmp('credit').setValue(dat.data['credit']);
//
//                    Ext.getCmp('form-insert-bank-in').stat = 'edit';
//                    Ext.getCmp('form-insert-bank-in').idEdit = dat.id;
                },
                'afterrender':function(t)
                {
                    hitungTotal();
                }
            }

        })




    })

</script>

    <div id="insert_pettycash_in"></div>
    <div id="grid_pettycashin"></div>