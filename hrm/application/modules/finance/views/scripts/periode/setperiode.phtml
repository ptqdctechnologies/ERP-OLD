<script type="text/javascript">

    Ext.apply(Ext.form.VTypes, {
    daterange : function(val, field) {
        var date = field.parseDate(val);

        if(!date){
            return false;
        }
        if (field.startDateField && (!this.dateRangeMax || (date.getTime() != this.dateRangeMax.getTime()))) {
            var start = Ext.getCmp(field.startDateField);
            start.setMaxValue(date);
            start.validate();
            this.dateRangeMax = date;
        }
        else if (field.endDateField && (!this.dateRangeMin || (date.getTime() != this.dateRangeMin.getTime()))) {
            var end = Ext.getCmp(field.endDateField);
            end.setMinValue(date);
            end.validate();
            this.dateRangeMin = date;
        }
        /*
         * Always return true since we're only using this vtype to set the
         * min/max allowed values (these are tested for after the vtype test)
         */
        return true;
    },
        
    numericText: "Only numbers are allowed.",
    numericMask: /[0-9]/,
    numericRe: /(^-?dd*.d*$)|(^-?dd*$)|(^-?.dd*$)/,
    numeric: function(v) {
        return function() { return this.numericRe.test(v)} ;
    }
        
});

    Ext.onReady(function(){

        Ext.QuickTips.init();

        var year = <?=$this->year?>;

        var i = 1;

        var monthArray = Date.monthNames.map(function (e) { return [e,i++]; });

        var setperiodepanel = new Ext.form.FormPanel ({

            title:'Set Periode',
            id:'set-periode',
            renderTo:'set_periode',
            frame:true,
            width:240,
            items:[{
                xtype:'textfield',
                fieldLabel:'Periode Code',
                width:104,
                id:'perkode',
                allowBlank:false,
                msgTarget:'side'
            },{
                xtype:'textfield',
                fieldLabel:'Year',
                width:104,
                value:year,
                id:'year',
                allowBlank:false,
                msgTarget:'side'
            },{
                id:'month',
                xtype:'combo',
                fieldLabel:'Month',
                width:104,
                store: new Ext.data.ArrayStore ({
                    fields:['name','value'],
                    data:monthArray
                }),
                valueField:'value',
                displayField:'name',
                typeAhead: true,
                forceSelection: true,
                editable: false,
                mode: 'local',
                triggerAction: 'all',
                selectOnFocus: true,
                emptyText: 'Select ... ',
                allowBlank:false,
                msgTarget:'side'
            },{
                xtype:'datefield',
                fieldLabel: 'Start Date',
                name: 'startdt',
                id: 'startdt',
                vtype: 'daterange',
                endDateField: 'enddt', // id of the end date field
                allowBlank:false,
                msgTarget:'side',
                format:'d-m-Y'
            },{
                xtype:'datefield',
                fieldLabel: 'End Date',
                name: 'enddt',
                id: 'enddt',
                vtype: 'daterange',
                startDateField: 'startdt',
                allowBlank:false,
                msgTarget:'side',
                format:'d-m-Y'
            }
            ],
            buttons:[{
                text:'Submit',
                handler:function (btn,ev)
                {
                    if(!Ext.getCmp('set-periode').getForm().isValid())
                    {
                        Ext.Msg.alert('Error','Please cek your field');
                        return false;
                    }

                    Ext.getCmp('set-periode').getForm().submit({

                        method:'POST',
                        url:'/finance/periode/insertperiode',
                        success:function(thisForm,response)
                        {
                            Ext.Msg.alert('Message','Success, New Finance periode has been saved');
                            panel = Ext.getCmp('abs-budget-panel');
                            panel.body.load ({
                                url: '/finance/periode/financeperiode',
                                scripts: true
                            })
                        },
                        failure:function(thisForm,response){
                            if (response.failureType == 'server')
                            {
                                var resp = Ext.util.JSON.decode(response.response.responseText);
                                Ext.Msg.alert('Error',resp.pesan);
                            }
                        }

                    })
                }
            },{
                text:'Reset',
                style:'marginRight:10px',
                handler:function (btn,ev)
                {
                    Ext.getCmp('set-periode').getForm().reset();
                }
            }]

        })


    })


</script>

    <div id="set_periode"></div>
