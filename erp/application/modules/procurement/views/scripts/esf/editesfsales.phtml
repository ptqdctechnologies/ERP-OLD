<script type="text/javascript">

var orierf;
var TEMPORARY = 0;

showAddESF = function(){
    myPanel = Ext.getCmp('abs-budget-panel');
    myPanel.body.load({
        url: '/procurement/esf/addesf/mode/sales',
        scripts : true
    });
};

//------------------------------store section-----------------------//

var erflist = Ext.data.Record.create([{
	  name: 'id',
	    type: 'integer'
	},{
	    name: 'trano',
	    type: 'string'
	},{
	    name: 'tgl',
	    type: 'date',
	    dateFormat: 'Y-m-d'
	},{
	    name: 'urut',
	    type: 'string'
	},{
	    name: 'prj_kode',
	    type: 'string'
	}, {
	    name: 'prj_nama',
	    type: 'string'
	},{
	    name: 'sit_kode',
	    type: 'string'
	},{
	    name: 'sit_nama',
	    type: 'string'
	},{
	    name: 'workid',
	    type: 'string'
	},{
	    name: 'workname',
	    type: 'string'
	},{
	    name: 'kode_brg',
	    type: 'string'
	},{
	    name: 'nama_brg',
	    type: 'string'
	},{
	    name: 'qty',
	    type: 'string'
	},{
	    name: 'uom',
	    type: 'string'
	},{
	    name: 'price',
	    type:'float'
	},{
	    name: 'totalPrice',
	    type: 'float'
	},{
	    name: 'totalPriceInErfh',
	    type: 'float'
	},{
	    name: 'ket',
	    type: 'string'
	},{
	    name: 'petugas',
	    type: 'string'
	},{
	    name: 'finance',
	    type: 'string'
	},{
	    name: 'pic',
	    type: 'string'
	},{
	    name: 'val_kode',
	    type: 'string'
	},{
	    name: 'rateidr',
	    type:'float'
	},{
	    name: 'totalESF',
	    type:'float'
	},{
	    name: 'totalPriceESF',
	    type:'float'
	},{
	    name: 'totalESFCancel',
	    type:'float'
	},{
	    name: 'totalPriceESFCancel',
	    type:'float'
	},{
	    name: 'cfs_kode',
	    type: 'string'
    },  {
        name: 'place',
        type: 'string'
    },{
        name: 'tglhold',
        type: 'date',
        dateFormat: 'Y-m-d'
    },{
        name: 'person',
        type: 'string'
	}

	]);

var cancellist = Ext.data.Record.create([{
	  name: 'id',
	    type: 'integer'
	},{
	    name: 'trano',
	    type: 'string'
	},{
	    name: 'erf_no',
	    type: 'string'
	},{
	    name: 'tgl_esf',
	    type: 'date',
	    dateFormat: 'Y-m-d'
	},{
	    name: 'tgl_erf',
	    type: 'date',
	    dateFormat: 'Y-m-d'
	},{
	    name: 'urut',
	    type: 'string'
	},{
	    name: 'prj_kode',
	    type: 'string'
	}, {
	    name: 'prj_nama',
	    type: 'string'
	},{
	    name: 'sit_kode',
	    type: 'string'
	},{
	    name: 'sit_nama',
	    type: 'string'
	},{
	    name: 'workid',
	    type: 'string'
	},{
	    name: 'workname',
	    type: 'string'
	},{
	    name: 'kode_brg',
	    type: 'string'
	},{
	    name: 'nama_brg',
	    type: 'string'
	},{
	    name: 'qty',
	    type: 'string'
	},{
	    name: 'uom',
	    type: 'string'
	},{
	    name: 'price',
	    type:'float'
	},{
	    name: 'totalPrice',
	    type: 'float'
	},{
	    name: 'totalPriceInErfh',
	    type: 'float'
	},{
	    name: 'ket',
	    type: 'string'
	},{
	    name: 'petugas',
	    type: 'string'
	},{
	    name: 'finance',
	    type: 'string'
	},{
	    name: 'pic',
	    type: 'string'
	},{
	    name: 'val_kode',
	    type: 'string'
	},{
	    name: 'rateidr',
	    type:'float'
	},{
	    name: 'totalESF',
	    type:'string'
	},{
	    name: 'totalPriceESF',
	    type:'float'
	},{
	    name: 'status',
	    type:'string'
	},{
	    name: 'cfs_kode',
	    type: 'string'
	}
	]);

var esflist = Ext.data.Record.create([{
	  name: 'id',
	    type: 'integer'
	},{
	    name: 'trano',
	    type: 'string'
	},{
	    name: 'erf_no',
	    type: 'string'
	},{
	    name: 'tgl_esf',
	    type: 'date',
	    dateFormat: 'Y-m-d'
	},{
	    name: 'tgl_erf',
	    type: 'date',
	    dateFormat: 'Y-m-d'
	},{
	    name: 'urut',
	    type: 'string'
	},{
	    name: 'prj_kode',
	    type: 'string'
	}, {
	    name: 'prj_nama',
	    type: 'string'
	},{
	    name: 'sit_kode',
	    type: 'string'
	},{
	    name: 'sit_nama',
	    type: 'string'
	},{
	    name: 'workid',
	    type: 'string'
	},{
	    name: 'workname',
	    type: 'string'
	},{
	    name: 'kode_brg',
	    type: 'string'
	},{
	    name: 'nama_brg',
	    type: 'string'
	},{
	    name: 'qty',
	    type: 'string'
	},{
	    name: 'uom',
	    type: 'string'
	},{
	    name: 'price',
	    type:'float'
	},{
	    name: 'totalPrice',
	    type: 'float'
	},{
	    name: 'totalPriceInErfh',
	    type: 'float'
	},{
	    name: 'ket',
	    type: 'string'
	},{
	    name: 'petugas',
	    type: 'string'
	},{
	    name: 'val_kode',
	    type: 'string'
	},{
	    name: 'rateidr',
	    type:'float'
	},{
	    name: 'totalESF',
	    type:'float'
	},{
	    name: 'totalPriceESF',
	    type:'float'
	},{
	    name: 'status',
	    type:'string'
	},{
	    name: 'cfs_kode',
	    type: 'string'
	}
	]);


var personlist = Ext.data.Record.create([{
        name: 'staff',
        type: 'string'
    },{
        name: 'guest',
        type: 'string'
    }]);
    
var grouplist = Ext.data.Record.create([{
	  name: 'id',
	    type: 'integer'
	},{
	    name: 'trano',
	    type: 'string'
	},{
	    name: 'erf_no',
	    type: 'string'
	},{
	    name: 'tgl_esf',
	    type: 'date',
	    dateFormat: 'Y-m-d'
	},{
	    name: 'tgl_erf',
	    type: 'date',
	    dateFormat: 'Y-m-d'
	},{
	    name: 'urut',
	    type: 'string'
	},{
	    name: 'prj_kode',
	    type: 'string'
	}, {
	    name: 'prj_nama',
	    type: 'string'
	},{
	    name: 'sit_kode',
	    type: 'string'
	},{
	    name: 'sit_nama',
	    type: 'string'
	},{
	    name: 'workid',
	    type: 'string'
	},{
	    name: 'workname',
	    type: 'string'
	},{
	    name: 'kode_brg',
	    type: 'string'
	},{
	    name: 'nama_brg',
	    type: 'string'
	},{
	    name: 'qty',
	    type: 'string'
	},{
	    name: 'uom',
	    type: 'string'
	},{
	    name: 'price',
	    type:'float'
	},{
	    name: 'totalPrice',
	    type: 'float'
	},{
	    name: 'totalPriceInErfh',
	    type: 'float'
	},{
	    name: 'ket',
	    type: 'string'
	},{
	    name: 'petugas',
	    type: 'string'
	},{
	    name: 'val_kode',
	    type: 'string'
	},{
	    name: 'rateidr',
	    type:'float'
	},{
	    name: 'totalESF',
	    type:'float'
	},{
	    name: 'totalPriceESF',
	    type:'float'
	},{
	    name: 'status',
	    type:'string'
	},{
	    name: 'cfs_kode',
	    type: 'string'
	}
	]);

var storeERF = new Ext.data.Store({
    reader: new Ext.data.JsonReader({fields: erflist})
});

var storeCancel = new Ext.data.Store({
    reader: new Ext.data.JsonReader({fields: cancellist}),
    listeners: {'load': function(t,r,o)    {
    }}

});
var storePerson = new Ext.data.Store({
    reader: new Ext.data.JsonReader({fields: personlist})
});

var writer = new Ext.data.JsonWriter({
    encode: true,
    writeAllFields: false
});

var proxy = new Ext.data.HttpProxy({
    api:{
    create: '/default/prd/list'
    }


});

var storeESF = new Ext.data.Store({
    reader: new Ext.data.JsonReader({fields: esflist}),
     listeners: {'load': function(t,r,o)    {
    }}
});



var acommColumn = new Ext.grid.ColumnModel([new Ext.grid.RowNumberer(),        
    {id:'staff',header: "Staff", width: 150, sortable: true, dataIndex: 'staff'},
    {id:'guest',header: "Guest", width: 150, sortable: true, dataIndex: 'guest'}]);
//------------------------------end of section---------------------//


//------------------------------GRID Section-----------------------//

var userColumns = [
        new Ext.grid.RowNumberer(),
        {header: "",width: 30, dataIndex: 'id',renderer: function (v,p,r) {
//        if (!isMscWorkid(r.data['workid']))
//        {
//	    	var qty = r.data['qty'];
//	    	percent = (r.data['totalESF'] / qty) * 100;
//
//        }
//        else
//        {
            var percent = 0;
	    	percent = ((parseFloat(r.data['totalPriceESF']) + parseFloat(r.data['totalPriceESFCancel'])) / parseFloat(r.data['totalPrice'])) * 100;
//        }

    	if (percent < 100){
			return '<a href="#" onclick="addToEsf(' + v + ');"><img src="/images/g_rec_add.png"></a>';
    	}
        else
    	{
    		p.attr ='ext:qtip="This item (' + r.data['kode_brg'] + ') must be created by ERF"';
    		return '<img src="/images/icons/fam/page_tag_red.gif">';
//    		return '<a href="#" onclick="addToAFE(' + v + ');"><img src="/images/icons/fam/page_tag_red.gif"></a>';
    	}
    }},

//{header: "Date", width: 100, sortable: true, dataIndex: 'tgl', xtype: 'datecolumn', format: 'd/m/Y'},
        {header: "No Trans", width: 100, sortable: true, dataIndex: 'trano'},
        {header: "Work ID", width: 55, sortable: true, dataIndex: 'workid'},
        {header: "Work Name", width: 120, sortable: true, dataIndex: 'workname'},
        {header: "Product ID", width: 80, sortable: true, dataIndex: 'kode_brg'},
        {header: "Name Material", width: 200, sortable: true, dataIndex: 'nama_brg'},
        {header: "Unit", width: 35, sortable: true, dataIndex: 'uom'},
        {header: "Unit Price", width: 100, sortable: true, dataIndex: 'price', align : 'right'},
        {header: "QTY", width: 100, sortable: true, dataIndex: 'qty'},
        {header: "Total Price", width: 100, sortable: true, dataIndex: 'totalPrice', align : 'right'},
        {header: "Currency", width: 50, sortable: true, dataIndex: 'val_kode', align : 'right'},
        {header: "Description", width: 250, sortable: true, dataIndex: 'ket'},
        {header: "Available", width: 100, renderer: function(v,p,r) {
        var percent = 0;

        	if (r.data['totalPrice'] != 0 || r.data['totalPriceESF'] != 0 || r.data['totalPriceESFCancel'] != 0)
	        {
            	var total = parseFloat(r.data['totalPrice']);
            	var totalEsf = parseFloat(r.data['totalPriceESF']);
                var totalCancel = parseFloat(r.data['totalPriceESFCancel']);
	        	percent = ( (totalEsf + totalCancel) / total) * 100;

	        	if (percent > 100)
	            	percent = 100;
	        	percent = percent.toFixed(2);
				var warna = '#0a0';
	        	if (percent > 75)
	            	warna = '#FF3F7D';
	        	else if (percent > 50)
	            	warna = '#FFDA2F';
	        }
		return '<div class="meter-wrap"><div class="meter-value" style="background-color: ' + warna + '; width: ' + percent + '%;"><div class="meter-text"><b>' + percent + '%</b></div></div></div>';
    }}

];

var userColumns2 = [
new Ext.grid.RowNumberer(),
{header: "",width: 60, dataIndex: 'id',css:'text-align:center;',renderer: function (v,p,r) {
  		return '<a href="#" onclick="editList(' + v + ');"><img src="/images/g_rec_upd.png"></a>';
      }},
//{header: "Date", width: 100, sortable: true, dataIndex: 'tgl', xtype: 'datecolumn', format: 'd/m/Y'},
{header: "No Trans", width: 100, sortable: true, dataIndex: 'erf_no'},
{header: "Work ID", width: 55, sortable: true, dataIndex: 'workid'},
{header: "Work Name", width: 120, sortable: true, dataIndex: 'workname'},
{header: "Product ID", width: 80, sortable: true, dataIndex: 'kode_brg'},
{header: "Name Material", width: 200, sortable: true, dataIndex: 'nama_brg'},
{header: "Unit", width: 35, sortable: true, dataIndex: 'uom'},
{header: "Unit Price", width: 100, sortable: true, dataIndex: 'price', align : 'right'},
{header: "QTY", width: 100, sortable: true, dataIndex: 'qty'},
{header: "Total Price", width: 100, sortable: true, dataIndex: 'totalPrice', align : 'right'},
{header: "Description", width: 250, sortable: true, dataIndex: 'ket'},
{header: "CFS Code", width: 65, sortable: true, dataIndex: 'cfs_kode'}
];

var userColumns3 = [
new Ext.grid.RowNumberer(),
{header: "",width: 60, dataIndex: 'id',css:'text-align:center;',renderer: function (v,p,r) {
  		return '<a href="#" onclick="editList(' + v + ');"><img src="/images/g_rec_upd.png"></a>';
      }},
//{header: "Date", width: 100, sortable: true, dataIndex: 'tgl', xtype: 'datecolumn', format: 'd/m/Y'},
{header: "No Trans", width: 100, sortable: true, dataIndex: 'erf_no'},
{header: "Work ID", width: 55, sortable: true, dataIndex: 'workid'},
{header: "Work Name", width: 120, sortable: true, dataIndex: 'workname'},
{header: "Product ID", width: 80, sortable: true, dataIndex: 'kode_brg'},
{header: "Name Material", width: 200, sortable: true, dataIndex: 'nama_brg'},
{header: "Unit", width: 35, sortable: true, dataIndex: 'uom'},
{header: "Unit Price", width: 100, sortable: true, dataIndex: 'price', align : 'right'},
{header: "QTY", width: 100, sortable: true, dataIndex: 'qty'},
{header: "Total Price", width: 100, sortable: true, dataIndex: 'totalPrice', align : 'right'},
{header: "Description", width: 250, sortable: true, dataIndex: 'ket'},
{header: "CFS Code", width: 65, sortable: true, dataIndex: 'cfs_kode'}
];

var personColumns = [
    new Ext.grid.RowNumberer(),
    {id:'staff',header: "Staff", width: 80, sortable: true, dataIndex: 'staff'},
    {id:'guest',header: "Guest", width: 80, sortable: true, dataIndex: 'guest'}
];

<?php echo $this->action('index', 'textfield', null); ?>
<?php echo $this->action('popupgrid', 'grid'); ?>


erfGrid = Ext.extend(Ext.grid.GridPanel, {
    id:'erf-detail-grid',
    title:'ERF Detail',
    iconCls: 'silk-grid',
    frame: true,
    height: 450,
    style: 'margin-top: 10px',
    trackMouseOver: true,
    

    initComponent : function() {
        erfGrid.superclass.initComponent.call(this);
    }

});

cancelGrid = Ext.extend(Ext.grid.GridPanel, {
    id:'esf-cancel-grid',
    title:'Amount Due To Company Cart',
    iconCls: 'silk-grid',
    frame: true,
    height: 450,
    style: 'margin-top: 10px',
    trackMouseOver: true,

    initComponent : function() {
        cancelGrid.superclass.initComponent.call(this);
    }

});
personGrid = Ext.extend(Ext.grid.GridPanel, {
    id:'esf-person-grid',
    //title:'Amount Due To Company Cart',
    iconCls: 'silk-grid',
    frame: true,
    //height: 450,
    style: 'margin-top: 10px',
    trackMouseOver: true,

    initComponent : function() {
        personGrid.superclass.initComponent.call(this);
    }

});

esfGrid = Ext.extend(Ext.grid.GridPanel, {
    id:'esf-grid',
    title:'Expense Claim Cart',
    iconCls: 'silk-grid',
    frame: true,
    height: 450,
    style: 'margin-top: 10px',
    trackMouseOver: true,

    initComponent : function() {
        esfGrid.superclass.initComponent.call(this);
    }

});


//---------------------------end of grid section ----------------------------------


//------function section--------------------------------------------------------

function showManagerList()
{
    var columns = [
        {header:'Uid',width:100,sortable:true,dataIndex:'uid'},
        {header:'Manager Name',width:150,sortable:true,dataIndex:'nama'},
                ];

    data =  [

        {name: 'uid', mapping: 'uid'},
        {name: 'nama', mapping: 'nama'},
            ];


    urlJson = '/default/manager/list';

    primaryKey = 'uid';
    Pk = primaryKey;
    widthGrid = 380;
    heightGrid = 250;

    var stores = new Ext.data.Store({
        proxy:new Ext.data.HttpProxy({
        url: urlJson
         }),
            reader: new Ext.data.JsonReader({
        root: 'posts',
        totalProperty: 'count'
    },data)
        });

    yAxis=100;
    grids = function()
    {
        grids.superclass.constructor.call(this, {
        store: stores,
        columns: columns,
        x:0,
        y:yAxis,
        id:primaryKey+'_grid',
        loadMask: true,
        bbar:[ new Ext.PagingToolbar({
            pageSize: 100,
            store: stores,
            displayInfo: true,
            displayMsg: 'Displaying data {0} - {1} of {2}',
            emptyMsg: "No data to display"
        })],
        height:heightGrid,
        width:widthGrid,
        listeners: {
            'rowdblclick': function(g, rowIndex, e){
                    objectName = 'uid';
				            txtBoxChange = 'mgr_kode_text';
				            closeForm = true;
				            formId = 'a-form-panel-mgr_kode_button';
                    var uid = g.getStore().getAt(rowIndex).get(objectName);
                    newUrl = '/default/manager/dblclick/name/uid/data/' + uid;
				            prox = 'trano_proxy';
				            gri = 'trano_grid';

				            var record = g.getStore().getAt(rowIndex).get(objectName);
                    var record2 = g.getStore().getAt(rowIndex).get("nama");
                            Ext.getCmp('mgr_kode_text').setValue(record);



                            if (Ext.getCmp('mgr_nama_text') != undefined)
                            {
                            	Ext.getCmp('mgr_nama_text').setValue(record2);
                            }


                            if (closeForm)
                            {
                                Ext.getCmp(formId).close();
                            }

                            window.setTimeout(function(){
                                    isDblClick = false;
                            }, 0);
                    }
            }
    });
    }
    stores.load();

    Ext.extend(grids, Ext.grid.GridPanel);
    Ext.extend(txtboks,Ext.form.TextField);//PR
    searchMgrKode = function(field,e){
        newUrl = '/default/manager/dblclick/name/uid/data/' + field.getValue();    prox = Pk+'_proxy';
        gri = Pk+'_grid';
        proxies = Ext.getCmp(gri).getStore();
        proxies.proxy = new Ext.data.HttpProxy({
            url: newUrl
             });
        Ext.getCmp(gri).getStore().reload();

    }
    searchMgrName = function(field,e){
        newUrl = '/default/manager/dblclick/name/Name/data/' + field.getValue();    prox = Pk+'_proxy';
        gri = Pk+'_grid';
        proxies = Ext.getCmp(gri).getStore();
        proxies.proxy = new Ext.data.HttpProxy({
            url: newUrl
             });
        Ext.getCmp(gri).getStore().reload();
    }

    var aForm =  new Ext.Window({
        id: 'a-form-panel-mgr_kode_button',
        layout: 'absolute',
        minWidth: 300,
        minHeight: 200,
        stateful:false,
        modal: true,
        resizable: false,
        width: 400,
        height: 400,
        items : [
            {
            x: 10,
            y: 12,
            xtype: 'label',
                text: 'Manager Uid:'
            },
            new txtboks(90,10,80,'manager_code',searchMgrKode),
             {
                x: 180,
            y: 12,
            xtype: 'label',
            text: 'Manager Name:'
            },
            new txtboks(260,10,80,'manager_name',searchMgrName),
             new grids('manager_list')
        ]

      });
      aForm.title = 'Choose Manager';
      aForm.show();
}

function getNewID()
{
	var maxRecordERF = storeERF.getCount();
    var maxRecordCancel = storeCancel.getCount();
    var maxRecordESF = storeESF.getCount();

	var newID = maxRecordERF + maxRecordCancel + maxRecordESF + 1;

	return newID;
}

function clearESFForm()
{
     var teks = Ext.getCmp('esf-form').findByType('textfield');
    Ext.each(teks, function (t, index){
			t.setValue('');
        });
}

function cekTotal()
{

    var totpricebalance = Ext.getCmp('total_balance_text').getValue();

    if (Ext.getCmp('esf_total').getValue() != undefined && Ext.getCmp('esf_total').getValue() != '')
        var totpriceesf = Ext.getCmp('esf_total').getValue();
    else
        var totpriceesf = 0;
    if (Ext.getCmp('esfcancel_total').getValue() != undefined && Ext.getCmp('esfcancel_total').getValue() != '')
        var totpricecancel = Ext.getCmp('esfcancel_total').getValue();
    else
        var totpricecancel = 0;
//        var currency = Ext.getCmp('val_kode_text').getValue();

        totpricebalance = parseFloat(totpricebalance.toString().replace(/\$|\,/g,''));
        totpriceesf = parseFloat(totpriceesf.toString().replace(/\$|\,/g,''));
        totpricecancel = parseFloat(totpricecancel.toString().replace(/\$|\,/g,''));


        if (totpricebalance < (totpriceesf + totpricecancel ))
        {

//                   Ext.getCmp('save-esf').disable();
                   Ext.MessageBox.show({
                   title: 'Error',
                   msg: 'Request is over the Budget!',
                   buttons: Ext.MessageBox.OK,
                   icon: Ext.MessageBox.ERROR
            });
             return false;
        }
//    else if ((totpriceesf + totpricecancel) == 0)
//    {
//        //                   Ext.getCmp('save-esf').disable();
//        Ext.MessageBox.show({
//            title: 'Error',
//            msg: 'please input qty and unit price!',
//            buttons: Ext.MessageBox.OK,
//            icon: Ext.MessageBox.ERROR
//        });
//        return false;
//    }
        else
        {

//            temptot = totpricebalance - (totpriceesf + totpricecancel );
//            Ext.getCmp('save-esf').enable();
            return true;
        }
}

function hitungTotalEsf()
{
       if (Ext.getCmp('esf_qty').getValue() != '' && Ext.getCmp('esf_unit_price').getValue() != '')
                                                    {
                                                        var a = parseFloat(Ext.getCmp('esf_qty').getValue().toString().replace(/\$|\,/g,''));
                                                        var b = parseFloat(Ext.getCmp('esf_unit_price').getValue().toString().replace(/\$|\,/g,''));
                                                        var total = a*b;
                                                        //Ext.getCmp('total_price_text').setValue( CommaFormatted((a*b).toFixed(2)));
                                                        Ext.getCmp('esf_total').setValue(CommaFormatted(total.toFixed(4)));
    //													Ext.getCmp('save-po').enable();
                                                    }
    else
       Ext.getCmp('esf_total').setValue('');

}

function hitungTotalCancel()
{
       if (Ext.getCmp('esfcancel_qty').getValue() != '' && Ext.getCmp('esfcancel_unit_price').getValue() != '')
                                                    {
                                                        var a = parseFloat(Ext.getCmp('esfcancel_qty').getValue().toString().replace(/\$|\,/g,''));
                                                        var b = parseFloat(Ext.getCmp('esfcancel_unit_price').getValue().toString().replace(/\$|\,/g,''));
                                                        var total = a*b;
                                                        //Ext.getCmp('total_price_text').setValue( CommaFormatted((a*b).toFixed(2)));
                                                        Ext.getCmp('esfcancel_total').setValue(CommaFormatted(total.toFixed(4)));
    //													Ext.getCmp('save-po').enable();
                                                    }
    else
       Ext.getCmp('esfcancel_total').setValue('');
}

function addToStoreEsf()
{

        var d = new esflist({
                erf_no : Ext.getCmp('erf_no_text').getValue(),
                urut: orierf.data['urut'],
                workid: orierf.data['workid'],
                workname: orierf.data['workname'],
                pr_number: orierf.data['trano'],
                prj_kode: orierf.data['prj_kode'],
                sit_kode: orierf.data['sit_kode'],
                prj_nama: orierf.data['prj_nama'],
                sit_nama: orierf.data['sit_nama'],
                kode_brg: orierf.data['kode_brg'],
                nama_brg: orierf.data['nama_brg'],
                totalPriceInErfh: orierf.data['totalPriceInErfh'],
                totalPriceErf: orierf.data['totalPrice'],
                qty: Ext.getCmp('esf_qty').getValue().toString().replace(/\$|\,/g,''),
                uom: orierf.data['uom'],
                val_kode: orierf.data['val_kode'],
                 rateidr : orierf.data['rateidr'],
                price: Ext.getCmp('esf_unit_price').getValue().toString().replace(/\$|\,/g,''),
//                tgl_esf: Ext.getCmp('tgl_esf_text').getValue(),
                tgl_erf: orierf.data['tgl'],
                totalPrice: Ext.getCmp('esf_total').getValue().toString().replace(/\$|\,/g,''),
                 ket: Ext.getCmp('ket_text').getValue(),
                petugas : Ext.getCmp('mgr_kode_text').getValue(),
        //            finance : Ext.getCmp('fin_kode_text').getValue(),
                pic : Ext.getCmp('pic_kode_text').getValue(),
                cfs_kode : Ext.getCmp('cfs_kode_text').getValue(),
                id: orierf.data['id']
                });


    return d;
}

function addToStoreCancel()
{


            var e = new cancellist({
                erf_no : Ext.getCmp('erf_no_text').getValue(),
                urut: orierf.data['urut'],
                workid: orierf.data['workid'],
                workname: orierf.data['workname'],
                pr_number: orierf.data['trano'],
                prj_kode: orierf.data['prj_kode'],
                sit_kode: orierf.data['sit_kode'],
                prj_nama: orierf.data['prj_nama'],
                sit_nama: orierf.data['sit_nama'],
                kode_brg: orierf.data['kode_brg'],
                nama_brg: orierf.data['nama_brg'],
                totalPriceInErfh: orierf.data['totalPriceInErfh'],
                totalPriceErf: orierf.data['totalPrice'],
                qty: Ext.getCmp('esfcancel_qty').getValue().toString().replace(/\$|\,/g,''),
                uom: orierf.data['uom'],
                val_kode: orierf.data['val_kode'],
                 rateidr : orierf.data['rateidr'],
                price: Ext.getCmp('esfcancel_unit_price').getValue().toString().replace(/\$|\,/g,''),
//                tgl_esf: Ext.getCmp('tgl_esf_text').getValue(),
                tgl_erf: orierf.data['tgl'],
                totalPrice: Ext.getCmp('esfcancel_total').getValue().toString().replace(/\$|\,/g,''),
                 ket: Ext.getCmp('ket_text').getValue(),
                petugas : Ext.getCmp('mgr_kode_text').getValue(),
//        finance : Ext.getCmp('fin_kode_text').getValue(),
                pic : Ext.getCmp('pic_kode_text').getValue(),
                cfs_kode : Ext.getCmp('cfs_kode_text').getValue(),
                id: orierf.data['id']

                });

    return e;
}

function addToEsf(idErf)
{
    Ext.getCmp('save-esf').setText('Add to List(Cart)');
    Ext.getCmp('cancel-esf').setText('Cancel Add');

    orierf = storeERF.getAt(storeERF.findExact('id', idErf));

    if (orierf != undefined)
    {
        var valNew = Ext.getCmp('val_kode_text').getValue();
        var valuta = orierf.data['val_kode'];

            

                if (valNew != valuta)
                  {
                	  Ext.MessageBox.show({
              	           title: 'Error Currency',
              	           msg: 'Currency Not Match!!',
              	           buttons: Ext.MessageBox.OK,
              	           icon: Ext.MessageBox.ERROR
              	       });

                	  clearESFForm();

                      return false;

                  }
        Ext.getCmp('erf-detail-grid').disable();
        Ext.getCmp('esf-grid').disable();
        Ext.getCmp('esf-cancel-grid').disable();
//        Ext.getCmp('cancel-esf').enable();
        Ext.getCmp('erf_no_text').setValue(orierf.data['trano']);
        Ext.getCmp('tgl_erf_text').setValue(orierf.data['tgl']);
        Ext.getCmp('prj_kode_text').setValue(orierf.data['prj_kode']);
        Ext.getCmp('prj_nama_text').setValue(orierf.data['prj_nama']);
        Ext.getCmp('sit_kode_text').setValue(orierf.data['sit_kode']);
        Ext.getCmp('sit_nama_text').setValue(orierf.data['sit_nama']);
        Ext.getCmp('esf_qty').setValue(CommaFormatted(orierf.data['qty']));
        Ext.getCmp('esf_unit_price').setValue(CommaFormatted(orierf.data['price']));
        Ext.getCmp('cfs_kode_text').setValue(orierf.data['cfs_kode']);

        var totalPriceErf = parseFloat(orierf.data['totalPrice'].toString().replace(/\$|\,/g,''));
        var totalPriceEsf = parseFloat(orierf.data['totalPriceESF'].toString().replace(/\$|\,/g,''));
        var totalPriceEsfCancel = parseFloat(orierf.data['totalPriceESFCancel'].toString().replace(/\$|\,/g,''));
        var totalPriceInEsf = totalPriceEsf + totalPriceEsfCancel;
        var balanceTotal = totalPriceErf - (totalPriceEsf + totalPriceEsfCancel);

        Ext.getCmp('total_erf_text').setValue(CommaFormatted(totalPriceErf));
        Ext.getCmp('total_esf_text').setValue(CommaFormatted(totalPriceInEsf));
        Ext.getCmp('total_balance_text').setValue(CommaFormatted(balanceTotal));

        Ext.getCmp('total_erf_cur').setValue(valuta);
        Ext.getCmp('total_esf_cur').setValue(valuta);
        Ext.getCmp('total_balance_cur').setValue(valuta);
        Ext.getCmp('esf_uom').setValue(orierf.data['uom']);
        Ext.getCmp('esf_cur').setValue(valuta);
        Ext.getCmp('esf_total_cur').setValue(valuta);
        Ext.getCmp('esfcancel_uom').setValue(orierf.data['uom']);
        Ext.getCmp('esfcancel_total_cur').setValue(valuta);
        Ext.getCmp('esfcancel_cur').setValue(valuta);


        hitungTotalEsf();
//        cekTotal()


    }
}

function insertToList()
{
if (cekTotal())
{
    Ext.getCmp('save-list').enable();
    Ext.getCmp('cancel-list').enable();

    if (orierf != undefined){

    var oriesf = storeESF.getAt(storeESF.findExact('id', orierf.data['id']));
    var oricancel = storeCancel.getAt(storeCancel.findExact('id', orierf.data['id']));

        if (oriesf != undefined || oricancel != undefined)
        {

             if (oriesf != undefined && oricancel != undefined && oriesf.data['status'] == 'edit' && oricancel.data['status'] == 'edit')
            {

                if (Ext.getCmp('esf_total').getValue() == '')
                {
//                    var a = parseFloat(oriesf.data['totalPrice']);
//                    orierf.data['totalPriceESF'] = orierf.data['totalPriceESF'] + a;
                    storeESF.remove(oriesf);

                    oricancel.data['qty'] = Ext.getCmp('esfcancel_qty').getValue().toString().replace(/\$|\,/g,'');
                    oricancel.data['price'] = Ext.getCmp('esfcancel_unit_price').getValue().toString().replace(/\$|\,/g,'');
                    oricancel.data['totalPrice'] = Ext.getCmp('esfcancel_total').getValue().toString().replace(/\$|\,/g,'');
                    oricancel.data['status'] = '';

                    oricancel.data['cfs_kode'] = Ext.getCmp('cfs_kode_text').getValue();
                    var totesfc = Ext.getCmp('esfcancel_total').getValue().toString().replace(/\$|\,/g,'');
                        var totpriceEsfCancel = parseFloat(orierf.data['totalPriceESFCancel'].toString().replace(/\$|\,/g,''));
                        orierf.data['totalPriceESFCancel'] = parseFloat(totesfc);
                         orierf.data['totalPriceESF'] = 0;

                }
                 else if (Ext.getCmp('esfcancel_total').getValue() == '')
                {
//                        var b = parseFloat(oricancel.data['totalPrice']);
//                        orierf.data['totalPriceESFCancel'] = orierf.data['totalPriceESFCancel'] + b;
                        storeCancel.remove(oricancel);

                        oriesf.data['qty'] = Ext.getCmp('esf_qty').getValue().toString().replace(/\$|\,/g,'');
                        oriesf.data['price'] = Ext.getCmp('esf_unit_price').getValue().toString().replace(/\$|\,/g,'');
                        oriesf.data['totalPrice'] = Ext.getCmp('esf_total').getValue().toString().replace(/\$|\,/g,'');
                        oriesf.data['status'] = '';

                        oriesf.data['cfs_kode'] = Ext.getCmp('cfs_kode_text').getValue();
                         var totesf = Ext.getCmp('esf_total').getValue().toString().replace(/\$|\,/g,'');
                        var totesfC = parseFloat(orierf.data['totalPriceESF'].toString().replace(/\$|\,/g,''));
                        orierf.data['totalPriceESF'] = parseFloat(totesf);
                        orierf.data['totalPriceESFCancel'] = 0;
                }
                else{
                oriesf.data['qty'] = Ext.getCmp('esf_qty').getValue().toString().replace(/\$|\,/g,'');
                oriesf.data['price'] = Ext.getCmp('esf_unit_price').getValue().toString().replace(/\$|\,/g,'');
                oriesf.data['totalPrice'] = Ext.getCmp('esf_total').getValue().toString().replace(/\$|\,/g,'');
                oriesf.data['status'] = '';

                oricancel.data['qty'] = Ext.getCmp('esfcancel_qty').getValue().toString().replace(/\$|\,/g,'');
                oricancel.data['price'] = Ext.getCmp('esfcancel_unit_price').getValue().toString().replace(/\$|\,/g,'');
                oricancel.data['totalPrice'] = Ext.getCmp('esfcancel_total').getValue().toString().replace(/\$|\,/g,'');
                oricancel.data['status'] = '';

                oricancel.data['cfs_kode'] = Ext.getCmp('cfs_kode_text').getValue();
                oriesf.data['cfs_kode'] = Ext.getCmp('cfs_kode_text').getValue();
                var totesf = Ext.getCmp('esf_total').getValue().toString().replace(/\$|\,/g,'');
                var totesfc = Ext.getCmp('esfcancel_total').getValue().toString().replace(/\$|\,/g,'');
                        var totpriceesf = parseFloat(orierf.data['totalPriceESF'].toString().replace(/\$|\,/g,''));
                        var totpriceesfC = parseFloat(orierf.data['totalPriceESFCancel'].toString().replace(/\$|\,/g,''));
                        orierf.data['totalPriceESF'] = parseFloat(totesf);
                        orierf.data['totalPriceESFCancel'] = parseFloat(totesfc);
                }
            }

            else if (oriesf != undefined && oriesf.data['status'] == 'edit')
            {

                if (Ext.getCmp('esfcancel_total').getValue() != '')
                {

                    var totesfc = Ext.getCmp('esfcancel_total').getValue().toString().replace(/\$|\,/g,'');
                        var totpriceesfc = parseFloat(orierf.data['totalPriceESFCancel'].toString().replace(/\$|\,/g,''));
                        orierf.data['totalPriceESFCancel'] = parseFloat(totesfc);
                    storeCancel.add(addToStoreCancel());
//                    alert(parseFloat(totesfc));

                    if (Ext.getCmp('esf_total').getValue() == '')
                    {


//                    var a = parseFloat(oriesf.data['totalPrice']);
//                    orierf.data['totalPriceESF'] = orierf.data['totalPriceESF'] + a;
                    storeESF.remove(oriesf);

//                      oricancel.data['qty'] = Ext.getCmp('esfcancel_qty').getValue().toString().replace(/\$|\,/g,'');
//                      oricancel.data['price'] = Ext.getCmp('esfcancel_unit_price').getValue().toString().replace(/\$|\,/g,'');
//                      oricancel.data['totalPrice'] = Ext.getCmp('esfcancel_total').getValue().toString().replace(/\$|\,/g,'');
//                      oricancel.data['status'] = '';
//
//                      var totesfc = Ext.getCmp('esfcancel_total').getValue().toString().replace(/\$|\,/g,'');
//                      orierf.data['totalPriceESFCancel'] = parseFloat(orierf.data['totalPriceESFCancel']) + parseFloat(totesfc);
                    }

                }
//                else{

                oriesf.data['qty'] = Ext.getCmp('esf_qty').getValue().toString().replace(/\$|\,/g,'');
                oriesf.data['price'] = Ext.getCmp('esf_unit_price').getValue().toString().replace(/\$|\,/g,'');
                oriesf.data['totalPrice'] = Ext.getCmp('esf_total').getValue().toString().replace(/\$|\,/g,'');
                oriesf.data['status'] = '';

                 oriesf.data['cfs_kode'] = Ext.getCmp('cfs_kode_text').getValue();
                var totesf = Ext.getCmp('esf_total').getValue().toString().replace(/\$|\,/g,'');
                    var totpriceesf = parseFloat(orierf.data['totalPriceESF'].toString().replace(/\$|\,/g,''));
                    orierf.data['totalPriceESF'] = parseFloat(totesf);

//                }
            }

            else if (oricancel != undefined && oricancel.data['status'] == 'edit')
            {

                if (Ext.getCmp('esf_total').getValue() != '')
                 {

                     var totesf = Ext.getCmp('esf_total').getValue().toString().replace(/\$|\,/g,'');
                        var totpriceesf = parseFloat(orierf.data['totalPriceESF'].toString().replace(/\$|\,/g,''));
                        orierf.data['totalPriceESF'] = parseFloat(totesf);
                     storeESF.add(addToStoreEsf());
//                     alert(parseFloat(totesf));



                     if (Ext.getCmp('esfcancel_total').getValue() == '')
                    {

//                         var b = parseFloat(oricancel.data['totalPrice']);
//                        orierf.data['totalPriceESFCancel'] = orierf.data['totalPriceESFCancel'] + b;

                        storeCancel.remove(oricancel);

//                        oriesf.data['qty'] = Ext.getCmp('esf_qty').getValue().toString().replace(/\$|\,/g,'');
//                        oriesf.data['price'] = Ext.getCmp('esf_unit_price').getValue().toString().replace(/\$|\,/g,'');
//                        oriesf.data['totalPrice'] = Ext.getCmp('esf_total').getValue().toString().replace(/\$|\,/g,'');
//                        oriesf.data['status'] = '';
//
//                         var totesf = Ext.getCmp('esf_total').getValue().toString().replace(/\$|\,/g,'');
//                         orierf.data['totalPriceESF'] = parseFloat(orierf.data['totalPriceESF']) + parseFloat(totesf);
                    }
                 }
//                else{

                oricancel.data['qty'] = Ext.getCmp('esfcancel_qty').getValue().toString().replace(/\$|\,/g,'');
                oricancel.data['price'] = Ext.getCmp('esfcancel_unit_price').getValue().toString().replace(/\$|\,/g,'');
                oricancel.data['totalPrice'] = Ext.getCmp('esfcancel_total').getValue().toString().replace(/\$|\,/g,'');
                oricancel.data['status'] = '';

                 oricancel.data['cfs_kode'] = Ext.getCmp('cfs_kode_text').getValue();
                var totesfc = Ext.getCmp('esfcancel_total').getValue().toString().replace(/\$|\,/g,'');

                    orierf.data['totalPriceESFCancel'] =  parseFloat(totesfc);

//                }
            }
            else if (oriesf.data['status'] == undefined || oriesf.data['status'] == '' || oricancel.data['status'] == undefined || oricancel.data['status'] == '')
    			{
    				Ext.MessageBox.show({
	    		           title: 'Error',
	    		           msg: 'Please use Edit for updating this item!',
	    		           buttons: Ext.MessageBox.OK,
	    		           icon: Ext.MessageBox.ERROR
	    		       });
		            return false;

    			}
        }
        else
        {


            if (Ext.getCmp('esf_total').getValue() != '' && Ext.getCmp('esfcancel_total').getValue() != '' )
            {
             var totesf = Ext.getCmp('esf_total').getValue().toString().replace(/\$|\,/g,'');
            var totesfc = Ext.getCmp('esfcancel_total').getValue().toString().replace(/\$|\,/g,'');
                    var totPriceesf = parseFloat(orierf.data['totalPriceESF'].toString().replace(/\$|\,/g,''));
                    var totPriceesfC = parseFloat(orierf.data['totalPriceESFCancel'].toString().replace(/\$|\,/g,''));
                    orierf.data['totalPriceESF'] = totPriceesf + parseFloat(totesf);
                    orierf.data['totalPriceESFCancel'] = totPriceesfC + parseFloat(totesfc);
            storeESF.add(addToStoreEsf());
            storeCancel.add(addToStoreCancel());
            }

             else if (Ext.getCmp('esf_total').getValue() != '')
             {
                  var totesf = Ext.getCmp('esf_total').getValue().toString().replace(/\$|\,/g,'');
                    var totpriceesf = parseFloat(orierf.data['totalPriceESF'].toString().replace(/\$|\,/g,''));
                    orierf.data['totalPriceESF'] = totpriceesf + parseFloat(totesf);

                 storeESF.add(addToStoreEsf());

             }
            else if (Ext.getCmp('esfcancel_total').getValue() != '')
             {
                 var totesfc = Ext.getCmp('esfcancel_total').getValue().toString().replace(/\$|\,/g,'');
                    var totpriceesfc = parseFloat(orierf.data['totalPriceESFCancel'].toString().replace(/\$|\,/g,''));
                    orierf.data['totalPriceESFCancel'] = totpriceesfc + parseFloat(totesfc);
                 storeCancel.add(addToStoreCancel());
//                 alert(parseFloat(totesfc));

             }

        }
            if (storeESF != undefined)
                var totESF = storeESF.sum('totalPrice');
//    		 var oriesf = storeESF.getAt(storeESF.findExact('id', orierf.data['id']));
            if (storeCancel != undefined)
                var totCancel = storeCancel.sum('totalPrice');
//             var oricancel = storeCancel.getAt(storeCancel.findExact('id',orierf.data['id']));

//            if (oriesf != undefined && oriesf.data['totalPrice'] != '')
//            var totpriceesf = parseFloat(oriesf.data['totalPrice']);
//            else
//                var totpriceesf = 0;
//            if (oricancel != undefined && oricancel.data['totalPrice'])
//                var totpricecancel = parseFloat(oricancel.data['totalPrice']);
//            else
//                var totpricecancel = 0;
//
            var gabung = totESF +  totCancel;
//
//	   		 TEMPORARY = TEMPORARY + gabung;

            Ext.getCmp('erf-detail-grid').enable();
            Ext.getCmp('esf-cancel-grid').enable();
            Ext.getCmp('esf-grid').enable();
            Ext.getCmp('erf-detail-grid').getView().refresh();
            Ext.getCmp('esf-cancel-grid').getView().refresh();
            Ext.getCmp('esf-grid').getView().refresh();
//            Ext.getCmp('save-esf').disable();
//            Ext.getCmp('cancel-esf').disable();
            clearESFForm();

            Ext.getCmp('total_text').setValue(CommaFormatted(gabung));
            Ext.getCmp('total_cur').setValue(Ext.getCmp('val_kode_text').getValue());

//            Ext.getCmp('gtotal-text').setText('Sub Total :'+TEMPORARY.toString());
//    		Ext.getCmp('pajak-text').setText('Tax :'+pajak.toString());
//    		Ext.getCmp('gtotals-text').setText('Grand Total :'+grandtotal.toString());

    		orierf = undefined;
    		oriesf = undefined;
            oricancel = undefined;



    }
}
}

function delList(idErf)
{
    Ext.MessageBox.confirm('Confirm', 'Are you sure want to delete this?', function(btn){
		if (btn== 'yes')
		{
            var b = storeESF.getAt(storeESF.findExact('id', idErf));
            var c = storeCancel.getAt(storeCancel.findExact('id', idErf));
            var a = storeERF.getAt(storeERF.findExact('id', idErf));

			if (b != undefined && c!= undefined)
			{


                var totalPriceEsf = parseFloat(b.data['totalPrice'].toString().replace(/\$|\,/g,''));
                var totalPriceCancel = parseFloat(c.data['totalPrice'].toString().replace(/\$|\,/g,''));
                var newtotalPriceESF = parseFloat(a.data['totalPriceESF'].toString().replace(/\$|\,/g,''));
                var newtotalPriceESFCancel = parseFloat(a.data['totalPriceESFCancel'].toString().replace(/\$|\,/g,''));

                    a.data['totalPriceESF'] =  newtotalPriceESF - totalPriceEsf;
                    a.data['totalPriceESFCancel'] =  newtotalPriceESFCancel - totalPriceCancel;
					storeESF.remove(b);
                    storeCancel.remove(c);
				    Ext.getCmp('erf-detail-grid').getView().refresh();
                    Ext.getCmp('esf-cancel-grid').getView().refresh();
				    Ext.getCmp('esf-grid').getView().refresh();

			}
            else if(b != undefined)
            {


                var totalPriceEsf = parseFloat(b.data['totalPrice']);
                var newtotalPriceESF = parseFloat(a.data['totalPriceESF']);

                 a.data['totalPriceESF'] =  newtotalPriceESF - totalPriceEsf;
                storeESF.remove(b);

				Ext.getCmp('erf-detail-grid').getView().refresh();
				Ext.getCmp('esf-grid').getView().refresh();

            }
            else if(c != undefined)
            {

                var totalPriceCancel = parseFloat(c.data['totalPrice']);
                var newtotalPriceESFCancel = parseFloat(a.data['totalPriceESFCancel']);

                 a.data['totalPriceESFCancel'] =  newtotalPriceESFCancel - totalPriceCancel;
                storeESFCancel.remove(c);

				Ext.getCmp('erf-detail-grid').getView().refresh();
				Ext.getCmp('esf-cancel-grid').getView().refresh();
            }


		}
	});
}

function editList(idErf)
{
    Ext.getCmp('save-esf').setText('Update to ESF List(Cart)');
    Ext.getCmp('cancel-esf').setText('Cancel Edit');

	var oriesf = storeESF.getAt(storeESF.findExact('id', idErf));
    var oricancel = storeCancel.getAt(storeCancel.findExact('id', idErf));
     orierf = storeERF.getAt(storeERF.findExact('id',idErf));
    var newTotalESF=0;
    var newTotalESFCancel=0;

    if (orierf != undefined)
    {

        var valuta = orierf.data['val_kode'];

		Ext.getCmp('erf-detail-grid').disable();
        Ext.getCmp('esf-cancel-grid').disable();
		Ext.getCmp('esf-grid').disable();

//		Ext.getCmp('cancel-esf').enable();

        Ext.getCmp('erf_no_text').setValue(orierf.data['trano']);
        Ext.getCmp('tgl_erf_text').setValue(orierf.data['tgl']);
        Ext.getCmp('prj_kode_text').setValue(orierf.data['prj_kode']);
        Ext.getCmp('prj_nama_text').setValue(orierf.data['prj_nama']);
        Ext.getCmp('sit_kode_text').setValue(orierf.data['sit_kode']);
        Ext.getCmp('sit_nama_text').setValue(orierf.data['sit_nama']);
//        Ext.getCmp('esf_qty').setValue(CommaFormatted(orierf.data['qty']));
//        Ext.getCmp('esf_unit_price').setValue(CommaFormatted(orierf.data['price']));

    if (oriesf != undefined && oricancel != undefined)
    {

        oriesf.data['status'] = 'edit';
        oricancel.data['status'] = 'edit';
        Ext.getCmp('esf_qty').setValue(CommaFormatted(oriesf.data['qty']));
        Ext.getCmp('esf_unit_price').setValue(CommaFormatted(oriesf.data['price']));
        Ext.getCmp('esf_total').setValue(CommaFormatted(oriesf.data['totalPrice']));
        Ext.getCmp('esfcancel_qty').setValue(CommaFormatted(oricancel.data['qty']));
        Ext.getCmp('esfcancel_unit_price').setValue(CommaFormatted(oricancel.data['price']));
        Ext.getCmp('esfcancel_total').setValue(CommaFormatted(oricancel.data['totalPrice']));

        Ext.getCmp('cfs_kode_text').setValue(oriesf.data['cfs_kode']);

            var tempOriPriceEsf = parseFloat(orierf.data['totalPriceESF'].toString().replace(/\$|\,/g,''));
            var tempOriPriceEsfCancel = parseFloat(orierf.data['totalPriceESFCancel'].toString().replace(/\$|\,/g,''));
            var tempOriesfPrice = parseFloat(oriesf.data['totalPrice'].toString().replace(/\$|\,/g,''));
            var tempOriesfPriceCancel = parseFloat(oricancel.data['totalPrice'].toString().replace(/\$|\,/g,''));
            newTotalESF = tempOriPriceEsf - tempOriesfPrice;
            newTotalESFCancel = tempOriPriceEsfCancel - tempOriesfPriceCancel;

    }
    else if (oriesf != undefined)
    {

        oriesf.data['status'] = 'edit';
        Ext.getCmp('esf_qty').setValue(CommaFormatted(oriesf.data['qty']));
        Ext.getCmp('esf_unit_price').setValue(CommaFormatted(oriesf.data['price']));
        Ext.getCmp('esf_total').setValue(CommaFormatted(oriesf.data['totalPrice']));

        Ext.getCmp('cfs_kode_text').setValue(oriesf.data['cfs_kode']);

//            orierf.data['totalPriceESF'] = parseFloat(orierf.data['totalPriceESF'])- parseFloat(oriesf.data['totalPrice']);
            var tempOriPriceEsf = parseFloat(orierf.data['totalPriceESF'].toString().replace(/\$|\,/g,''));
            var tempOriesfPrice = parseFloat(oriesf.data['totalPrice'].toString().replace(/\$|\,/g,''));
            
            newTotalESF = tempOriPriceEsf - tempOriesfPrice;            
    }
    else if (oricancel != undefined)
    {

        oricancel.data['status'] = 'edit';
        Ext.getCmp('esfcancel_qty').setValue(CommaFormatted(oricancel.data['qty']));
        Ext.getCmp('esfcancel_unit_price').setValue(CommaFormatted(oricancel.data['price']));
        Ext.getCmp('esfcancel_total').setValue(CommaFormatted(oricancel.data['totalPrice']));

        Ext.getCmp('cfs_kode_text').setValue(oricancel.data['cfs_kode']);

            var tempOriPriceEsfCancel = parseFloat(orierf.data['totalPriceESFCancel'].toString().replace(/\$|\,/g,''));
            var tempOriesfPriceCancel = parseFloat(oricancel.data['totalPrice'].toString().replace(/\$|\,/g,''));
            newTotalESFCancel = tempOriPriceEsfCancel - tempOriesfPriceCancel;
    }
        var totalPriceErf = parseFloat(orierf.data['totalPrice'].toString().replace(/\$|\,/g,''));
        var totalPriceEsf = parseFloat(newTotalESF);
        var totalPriceEsfCancel = parseFloat(newTotalESFCancel);

        var totalPriceInEsf = totalPriceEsf + totalPriceEsfCancel;

        var totalPriceInEsf = totalPriceEsf + totalPriceEsfCancel;
        var balanceTotal = totalPriceErf - totalPriceInEsf;

        Ext.getCmp('total_erf_text').setValue(CommaFormatted(totalPriceErf));
        Ext.getCmp('total_esf_text').setValue(CommaFormatted(totalPriceInEsf));
        Ext.getCmp('total_balance_text').setValue(CommaFormatted(balanceTotal));
        Ext.getCmp('total_erf_cur').setValue(valuta);
        Ext.getCmp('total_esf_cur').setValue(valuta);
        Ext.getCmp('total_balance_cur').setValue(valuta);
        Ext.getCmp('esf_uom').setValue(orierf.data['uom']);
        Ext.getCmp('esf_cur').setValue(valuta);
        Ext.getCmp('esf_total_cur').setValue(valuta);
        Ext.getCmp('esfcancel_uom').setValue(orierf.data['uom']);
        Ext.getCmp('esfcancel_total_cur').setValue(valuta);
        Ext.getCmp('esfcancel_cur').setValue(valuta);

//             if (storeESF != undefined)
//    		 var oriesf = storeESF.getAt(storeESF.findExact('id', orierf.data['id']));
//            if (storeCancel != undefined)
//             var oricancel = storeCancel.getAt(storeCancel.findExact('id',orierf.data['id']));
//
//            if (oriesf != undefined && oriesf.data['totalPrice'] != '')
//            var totpriceesf = parseFloat(oriesf.data['totalPrice']);
//            else
//                var totpriceesf = 0;
//            if (oricancel != undefined && oricancel.data['totalPrice'])
//                var totpricecancel = parseFloat(oricancel.data['totalPrice']);
//            else
//                var totpricecancel = 0;
//
//            var gabung = totpriceesf +  totpricecancel;
//
//	   		 TEMPORARY = TEMPORARY - gabung;
    }
}


function init()
{
    Ext.getCmp('trano_esf_text').setValue('<?php echo $this->trano; ?>');
    var tgl_sekarang = new Date();
//    Ext.getCmp('tgl_esf_text').setValue(tgl_sekarang.format('Y-m-d'));
    Ext.getCmp('val_kode_text').setValue('<?php echo $this->val_kode; ?>');
    Ext.getCmp('req_kode_text').setValue('<?php echo $this->requester2; ?>');
    Ext.getCmp('mgr_kode_text').setValue('<?php echo $this->requester; ?>');
//    Ext.getCmp('pic_kode_text').setValue('<?php echo $this->petugas; ?>');
//    Ext.getCmp('pic_nama_text').setValue('<?php echo $this->nama; ?>');
    Ext.getCmp('pic_kode_text').setValue('<?php echo $this->uid; ?>');
     Ext.getCmp('pic_nama_text').setValue('<?php echo $this->nama; ?>');
//    Ext.getCmp('fin_kode_text').setValue('<?php echo $this->finance; ?>');
    Ext.getCmp('ket_text').setValue('<?php echo $this->ket; ?>');
    getRequesterName();
    //getFinanceName();
    getPicName();
    getGridList();

//    Ext.getCmp('fin_kode_text').setValue('<?php echo $this->uid; ?>');
//    Ext.getCmp('fin_nama_text').setValue('<?php echo $this->nama; ?>');

//    var a = '<?php echo $this->uid; ?>';
//    var b = '<?php echo $this->nama; ?>';
}

function getRequesterName()
{
    var trano = Ext.getCmp('trano_esf_text').getValue();
	Ext.Ajax.request({
        results: 0,
        url: '/default/home/getmastermanagerEsf/esfno/'+trano,
        method:'POST',
        success: function(result, request){
           var returnData = Ext.util.JSON.decode(result.responseText);
         Ext.getCmp('mgr_nama_text').setValue(returnData);

        },
        failure:function( action){
            if(action.failureType == 'server'){
                obj = Ext.util.JSON.decode(action.response.responseText);
                Ext.Msg.alert('Error!', obj.errors.reason);
                }else{
                Ext.Msg.alert('Warning!', 'Server is unreachable : ' + action.response.responseText);
                }
                }
        });
}

function getPicName()
{
    var data = Ext.getCmp('pic_kode_text').getValue();
	Ext.Ajax.request({
        results: 0,
        url: '/default/home/getmasterlogin/type/pic/data/'+data,
        method:'POST',
        success: function(result, request){
           var returnData = Ext.util.JSON.decode(result.responseText);
         Ext.getCmp('pic_nama_text').setValue(returnData);

        },
        failure:function( action){
            if(action.failureType == 'server'){
                obj = Ext.util.JSON.decode(action.response.responseText);
                Ext.Msg.alert('Error!', obj.errors.reason);
                }else{
                Ext.Msg.alert('Warning!', 'Server is unreachable : ' + action.response.responseText);
                }
                }
        });
}

function getGridList()
{
    var trano = Ext.getCmp('trano_esf_text').getValue();
	Ext.Ajax.request({
        results: 0,
        url: '/default/home/getdataforeditesf/data/'+trano,
        method:'POST',
        success: function(result, request){
           var returnData = Ext.util.JSON.decode(result.responseText);

                for(var i=0;i<returnData.erfd.length;i++){
                    returnData.erfd[i]['person'] =  Ext.util.JSON.encode(returnData.erfd[i]['person']);
                }
                
            storeERF.loadData(returnData.erfd);


            if(returnData.esfddcancel.length > 0)
            {
                storeCancel.loadData(returnData.esfddcancel);
                var totCancel = storeCancel.sum('totalPrice');
            }
            else
                var totCancel = 0;

            if(returnData.esfdd.length > 0 )
            {
                storeESF.loadData(returnData.esfdd);
                var totESF = storeESF.sum('totalPrice');
            }
            else
                var totESF = 0;

        var gabung = totESF +  totCancel;
//
//	   		 TEMPORARY = TEMPORARY + gabung;

            Ext.getCmp('total_text').setValue(CommaFormatted(gabung));
            Ext.getCmp('total_cur').setValue(Ext.getCmp('val_kode_text').getValue());
            Ext.getCmp('save-list').enable();
            Ext.getCmp('cancel-list').enable();

        },
        failure:function( action){
            if(action.failureType == 'server'){
                obj = Ext.util.JSON.decode(action.response.responseText);
                Ext.Msg.alert('Error!', obj.errors.reason);
                }else{
                Ext.Msg.alert('Warning!', 'Server is unreachable : ' + action.response.responseText);
                }
                }
        });
}


userForm = new Ext.extend(Ext.form.FormPanel,{
	id : 'user-forms',
    iconCls: 'silk-user',
    title: 'Create New ESF (Sales)',
    frame: true,
    width: 650,
    labelAlign: 'left',

initComponent : function() {
    this.items = this.buildForm();
//    getExchangeRate();
    this.buttons = this.buildUI();
    this.addEvents({
        create : true
    });
    userForm.superclass.initComponent.call(this);
},
buildForm : function() {
    return [
     {
         layout : 'column',
         items:[
             {
                 layout :'form',
                 items:[
                     {
                         fieldLabel:'No Trans',
                         id:'trano_esf_text',
                         name: 'trano_esf',
                         disabled : true,
                         xtype: 'textfield',
                         width: 100
                     },
                         {
                                fieldLabel : 'Requester Name',
                                id : 'user_selector',
                                xtype: 'userselector',
                                ShowName: false,
                                UserSelectid: 'req_kode_text',
                                width: 200,
                                allowBlank: false
                            },

                 ]
             }

                  ]
             },
             { layout: 'column',
                 items:[

 						  {
 							  layout: 'form',
 							  items:[
						            {xtype:'trigger',fieldLabel: 'Manager name',id:'mgr_kode_text',name: 'mgr_kode', triggerClass: 'teropong',
		                            onTriggerClick: function( ){
						            	showManagerList();
									},
		                            editable: false,
									allowBlank: false,
                                width: 100
									},

 							]},
 							{columnWidth: .3,
 							layout : 'form',
 							items :[
                            {id:'mgr_nama_text', name: 'mgr_nama', xtype: 'textfield', readOnly: true,hideLabel: true, width: 100 },
// 							{id:'pic_nama_text',name: 'pic_nama', xtype: 'textfield', readOnly: true,hideLabel: true },
// 							{id:'val_nama_text',name: 'val_nama', xtype: 'textfield', readOnly: true,hideLabel: true },

 							]},
 	]}, {
        layout : 'column',
        items:[
            {
                columnWidth:.8,
                layout :'form',
                items:[
                        {
								            layout:'column',
								            items:[
								                   {
									                columnWidth:.31,
								                    layout: 'form',
								                	items: [{
															    fieldLabel : 'PIC Name',
															    id : 'pic_kode_text',
															    xtype: 'textfield',
															    disabled: true,

                                                width: 47
													    	}
											    			]
								                   },
								                   {
										                columnWidth:.49,
									                    layout: 'form',
									                	items: [{
																    id : 'pic_nama_text',
																    xtype: 'textfield',
																    hideLabel: true,
																    disabled: true,
                                                width: 147
														    	}
												    			]
									                   }
												]
							    		},
                        {
				    fieldLabel : 'Remark',
				    id:'ket_text',
				    name:'keterangan',
                                xtype:'textfield',
                                width:200
//                    allowBlank: false
					},

                            
                        {
                                 layout:'column',
                                 items:[
                                     {
                                         layout: 'form',
                                         items: [{
                                                xtype: 'currencyselector',
                                                anchor: '100%',
                                                id: 'currency-select',
                                                Selectid: 'val_kode_text',
                                                Nameid: 'val_nama_text',
                                                ShowName: true,
                                                fieldLabel:'Currency Code',
                                                allowBlank:false,
                                                selectValue:'IDR',
                                                size:115,
                                                disabled:true
                                            },
                                            {labelWidth: 100,
                                                layout:'column',
                                                items:[{
                                                        layout: 'form',  
                                                        items: [{ 
                                                                fieldLabel : 'Total',
                                                                id : 'total_text',
                                                                xtype: 'textfield',
                                                                disabled: true,
                                         style:"text-align:right",
                                         width: 100
                                                            }]},
                                                    {
                                     layout: 'form',
                                                        style: 'margin-left:5px;',   
                                     items: [{
                                             id: 'total_cur',
                                             xtype:'textfield',
                                             hideLabel: true,
                                             width: 30,
                                             disabled:true
                                                            }]}
                                                ]}
                                        ]
                                 }
                             ]


                      }
                ]
            }
            ]}

 ];
 },
  buildUI: function(){
    return [

    {
        text: 'Search ERF',
                disabled: true,
        icon:"/images/g_rec_src.png",
                handler:   function(btn, ev){ 
                    showTranoList();

                }
        
    }, {
        text: 'Reset',
             disabled: true,
        handler: function(btn, ev){

    		this.getForm().reset();
            init();
        },
        scope: this
    }];
}
});

userForm2 = new Ext.extend(Ext.form.FormPanel,{

    renderTo: 'user-form2',
    id: 'esf-form',
    iconCls: 'silk-user',
    labelAlign: 'right',
    title: 'Detail Entertainment Settlement Form (ESF) Sales',
    frame: true,
    width: 750,
    labelAlign: 'left',
    style: 'margin-top: 10px',
    initComponent : function() {
        this.items = this.buildForm();
        this.buttons = this.buildUI();
        this.addEvents({
            create : true
        });
        userForm2.superclass.initComponent.call(this);
    }
    ,
    buildForm : function() {
        return [
            {
            layout:'column',
            items:[
                   {columnWidth:.55,
                    layout: 'form',
                	items: [{
                                fieldLabel : 'ERF Number',
                                id : 'erf_no_text',
                                xtype: 'textfield',
                                readOnly : true,
                                width : 100
                                },

                                {
                                fieldLabel : 'ERF Date',
                                id : 'tgl_erf_text',
                                xtype: 'textfield',
                                disabled : true,
                                width : 75
                                },{
								            layout:'column',
								            items:[
								                   {
									                columnWidth:.43,
								                    layout: 'form',
								                	items: [{
															    fieldLabel : 'Project Code',
															    id : 'prj_kode_text',
															    xtype: 'textfield',
															    disabled: true,

															    width: 65
													    	}
											    			]
								                   },
								                   {
										                columnWidth:.49,
									                    layout: 'form',
									                	items: [{
																    id : 'prj_nama_text',
																    xtype: 'textfield',
																    hideLabel: true,
																    disabled: true,
																    width: 180
														    	}
												    			]
									                   }
												]
							    		},

                                {
								            layout:'column',
								            items:[
								                   {
									                columnWidth:.43,
								                    layout: 'form',
								                	items: [{
															    fieldLabel : 'Site Code',
															    id : 'sit_kode_text',
															    xtype: 'textfield',
															    disabled: true,
															    width: 65
													    	}
											    			]
								                   },
								                   {
										                columnWidth:.49,
									                    layout: 'form',
									                	items: [{
																    id : 'sit_nama_text',
																    xtype: 'textfield',
																    hideLabel: true,
																    disabled: true,
																    width: 180
														    	}
												    			]
									                   }
												]
							    		},
                                {
                                    fieldLabel : 'CFS Kode',
                                    id : 'cfs_kode_text',
                                    xtype: 'textfield',
//                                    disabled : true,
                                    width : 65
                                }

                                ]
                   },
                   {    columnWidth:.4,
                       layout: 'form',

                   	items: [ {
                                    xtype:'fieldset',
                                    title: 'Balance',
                                    id : 'Balance-fieldset',
                                    autoHeight : true,
                                    layout: 'form',
                                    labelWidth : 110,
                                    items : [
                                 {
                                      layout:'column',
								            items:[
                                                {
                                                    columnWidth:.8,
								                    layout: 'form',
								                	items: [{

                                                            fieldLabel: 'Total ERF',
                                                            id: 'total_erf_text',
                                                            xtype:'textfield',
                                                             style:"text-align:right",
                                                            width: 100,
                                                            disabled:true
                                                            }]
                                                },{
                                                    columnWidth:.2,
								                    layout: 'form',
								                	items: [{
                                                            id: 'total_erf_cur',
                                                            xtype:'textfield',
                                                            hideLabel: true,
                                                            width: 30,
                                                            disabled:true
                                                            }]
                                                }
                                            ]
                                 }, {
                                    layout:'column',
								            items:[
                                                {
                                                    columnWidth:.8,
								                    layout: 'form',
								                	items: [{
                                                            fieldLabel: 'Total ESF',
                                                            id: 'total_esf_text',
                                                            xtype:'textfield',
                                                            style:"text-align:right",
                                                            width: 100,
                                                            disabled:true
                                                            }]
                                                },{
                                                    columnWidth:.2,
								                    layout: 'form',
								                	items: [{
                                                            id: 'total_esf_cur',
                                                            xtype:'textfield',
                                                            hideLabel: true,
                                                            width: 30,
                                                            disabled:true
                                                            }]
                                                }
                                            ]
                                 },
                                 {
                                     layout:'column',
                                            items:[
                                                {
                                                    columnWidth:.8,
                                                    layout: 'form',
                                                    items: [{

                                                             fieldLabel: 'Balance',
                                                             id: 'total_balance_text',
                                                             style:"text-align:right",
                                                             disabled:true,
                                                             xtype:'textfield',
                                                             width: 100
                                                            }]
                                                },{
                                                    columnWidth:.2,
								                    layout: 'form',
								                	items: [{
                                                            id: 'total_balance_cur',
                                                            xtype:'textfield',
                                                            hideLabel: true,
                                                            width: 30,
                                                            disabled:true
                                                            }]
                                                }
                                            ]

                                  }

                               ]
                       }

				       ]
                   }
              ]
            },
        {
            layout:'column',
            items:[
                {    columnWidth:.55,
                   layout: 'form',

                   items: [ {
                                xtype:'fieldset',
                                title: 'Expense Claim',
                                id : 'ESF-fieldset',
                                autoHeight : true,
                                layout: 'form',
                                labelWidth : 110,
                                width : 300,

                                items : [
                             {
                                     layout:'column',
                                            items:[
                                                {
                                                    columnWidth:.65,
                                                    layout: 'form',
                                                    items: [{


                                                fieldLabel: 'Qty',
                                                id: 'esf_qty',
                                                xtype:'textfield',
                                                width: 60,
                                                style:"text-align:right",
                                                enableKeyEvents: true,
                                                listeners:{
                                                    'blur': function(t) {
                                                        if (!isNaN(t.getValue()))
                                                        {
                                                            t.setValue(CommaFormatted(t.getValue()));
                                                        }
                                                    },
                                                    'focus': function(t) {
                                                        if (t.getValue().search(",")>0)
                                                           t.setValue(t.getValue().toString().replace(/\$|\,/g,''));
                                                    },
                                                    'keyup' : function (t,e) {
                                                        if (!isNaN(t.getValue()))
                                                        {
                                                            hitungTotalEsf();
//                                                            cekTotal();


                                                        }
                                                    }
                                                }
                                                }]
                                                },{
                                                    columnWidth:.2,
								                    layout: 'form',
								                	items: [{
                                                            id: 'esf_uom',
                                                            xtype:'textfield',
                                                            hideLabel: true,
                                                            width: 30,
                                                            disabled:true
                                                            }]
                                                }
                                            ]


                             }, {

                                     layout:'column',
                                            items:[
                                                {
                                                    columnWidth:.79,
                                                    layout: 'form',
                                                    items: [{


                                                    fieldLabel: 'Price',
                                                    id: 'esf_unit_price',
                                                    xtype:'textfield',
                                                    width: 100,
                                                    style:"text-align:right",
                                                    enableKeyEvents: true,
                                                    listeners:{
                                                        'blur': function(t) {
                                                            if (!isNaN(t.getValue()))
                                                            {
                                                                t.setValue(CommaFormatted(t.getValue()));
                                                            }
                                                        },
                                                        'focus': function(t) {
                                                            if (t.getValue().search(",")>0)
                                                               t.setValue(t.getValue().toString().replace(/\$|\,/g,''));
                                                        },
                                                        'keyup' : function (t,e) {
                                                            if (!isNaN(t.getValue()))
                                                            {
                                                                 hitungTotalEsf();
//                                                                 cekTotal();

                                                            }
                                                        }
                                                    }
                                                }]
                                                },{
                                                    columnWidth:.2,
								                    layout: 'form',
								                	items: [{
                                                            id: 'esf_cur',
                                                            xtype:'textfield',
                                                            hideLabel: true,
                                                            width: 30,
                                                            disabled:true
                                                            }]
                                                }
                                            ]

                             },
                             {
                                 layout:'column',
                                            items:[
                                                {
                                                    columnWidth:.79,
                                                    layout: 'form',
                                                    items: [{
                                                     fieldLabel: 'Total',
                                                     id: 'esf_total',

                                                     xtype:'textfield',
                                                     style:"text-align:right",
                                                     width: 100,
                                                     disabled : true
                                                     }]
                                                },{
                                                    columnWidth:.2,
								                    layout: 'form',
								                	items: [{
                                                            id: 'esf_total_cur',
                                                            xtype:'textfield',
                                                            hideLabel: true,
                                                            width: 30,
                                                            disabled:true
                                                            }]
                                                }
                                            ]

                              }

                           ]
                   }

                ]},
             {    columnWidth:.4,
                   layout: 'form',

                   items: [ {
                                xtype:'fieldset',
                                title: 'Amount Due To Company',
                                id : 'ESF-cancel-fieldset',
                                autoHeight : true,
                                layout: 'form',
                                labelWidth : 110,
                                autoWidth : true,
                                items : [
                             {
                                 layout:'column',
                                            items:[
                                                {
                                                    columnWidth:.66,
                                                    layout: 'form',
                                                    items: [{


                                                        fieldLabel: 'Qty',
                                                        id: 'esfcancel_qty',
                                                        xtype:'textfield',
                                                        width: 60,
                                                        style:"text-align:right",
                                                        enableKeyEvents: true,
                                                        listeners:{
                                                            'blur': function(t) {
                                                                if (!isNaN(t.getValue()))
                                                                {
                                                                    t.setValue(CommaFormatted(t.getValue()));
                                                                }
                                                            },
                                                            'focus': function(t) {
                                                                if (t.getValue().search(",")>0)
                                                                   t.setValue(t.getValue().toString().replace(/\$|\,/g,''));
                                                            },
                                                            'keyup' : function (t,e) {
                                                                if (!isNaN(t.getValue()))
                                                                {
                                                                    hitungTotalCancel();
//                                                                     cekTotal();

                                                                }
                                                            }
                                                        }
                                                    }]
                                                },{
                                                    columnWidth:.2,
								                    layout: 'form',
								                	items: [{
                                                            id: 'esfcancel_uom',
                                                            xtype:'textfield',
                                                            hideLabel: true,
                                                            width: 30,
                                                            disabled:true
                                                            }]
                                                }
                                            ]

                             }, {
                                        layout:'column',
                                                items:[
                                                    {
                                                        columnWidth:.8,
                                                        layout: 'form',
                                                        items: [{

                                                        fieldLabel: 'Price',
                                                        id: 'esfcancel_unit_price',
                                                        xtype:'textfield',
                                                        width: 100,
                                                        style:"text-align:right",
                                                        enableKeyEvents: true,
                                                        listeners:{
                                                            'blur': function(t) {
                                                                if (!isNaN(t.getValue()))
                                                                {
                                                                    t.setValue(CommaFormatted(t.getValue()));
                                                                }
                                                            },
                                                            'focus': function(t) {
                                                                if (t.getValue().search(",")>0)
                                                                   t.setValue(t.getValue().toString().replace(/\$|\,/g,''));
                                                            },
                                                            'keyup' : function (t,e) {
                                                                if (!isNaN(t.getValue()))
                                                                {
                                                                    hitungTotalCancel();
//                                                                    cekTotal();

                                                                }
                                                            }
                                                        }
                                                     }]
                                                },{
                                                    columnWidth:.2,
								                    layout: 'form',
								                	items: [{
                                                            id: 'esfcancel_cur',
                                                            xtype:'textfield',
                                                            hideLabel: true,
                                                            width: 30,
                                                            disabled:true
                                                            }]
                                                }
                                            ]

                             },
                             {
                                 layout:'column',
                                 items:[
                                     {
                                         columnWidth:.8,
                                         layout: 'form',
                                         items: [{

                                         fieldLabel: 'Total',
                                         id: 'esfcancel_total',
                                         disabled:true,
                                         xtype:'textfield',
                                         style:"text-align:right",
                                         width: 100
                                         }]
                                 },{
                                     columnWidth:.2,
                                     layout: 'form',
                                     items: [{
                                             id: 'esfcancel_total_cur',
                                             xtype:'textfield',
                                             hideLabel: true,
                                             width: 30,
                                             disabled:true
                                             }]
                                 }
                             ]


                              }

                           ]
                   }

                ]}


            ]
        }



     ];
     },
      buildUI: function(){
        return [

        {
             text: 'Add to List(Cart)',
             id: 'save-esf',
//             disabled:true,
             iconCls: 'icon-add',
             handler: function(){
                 //var rec = Ext.getCmp('pr-detail-grid').getSelectionModel().getSelections();
                 //insertPOtoList(rec[0].data['id']);
                 insertToList();
             }

        },{
             text: 'Cancel Add',
             id: 'cancel-esf',
//             disabled:true,
             iconCls: 'icon-cancel',
             handler: function(){
                    clearESFForm();
                    Ext.getCmp('erf-detail-grid').enable();
                    Ext.getCmp('esf-cancel-grid').enable();
                    Ext.getCmp('esf-grid').enable();
                    Ext.getCmp('erf-detail-grid').getView().refresh();
                    Ext.getCmp('esf-cancel-grid').getView().refresh();
                    Ext.getCmp('esf-grid').getView().refresh();
//                    Ext.getCmp('save-esf').disable();
//                    Ext.getCmp('cancel-esf').disable();

                    orierf = undefined;                    

             }, scope: this
       }
   ];
    }
 });

//---------------------------------------end of function section



//---------------------------- Main Section ---------------------//

Ext.onReady(function() {
    Ext.QuickTips.init();

var userForms = new userForm ({
	renderTo : 'user-form'

});


var userForms2 = new userForm2({
    renderTo: 'user-form2'
});


var erfGrids = new erfGrid({
    renderTo: 'user-grid',
    store: storeERF,
    columns : userColumns,
    width: 700,
    height : 300,
        border: true,
        frame: true,
        stripeRows: true,
        stateful: true,
        loadMask:true,
    bbar: new Ext.PagingToolbar({
    id: 'paging-erfGrid',
    pageSize: 100,
    store: storeERF,
    displayInfo: true,
    displayMsg: 'Displaying data {0} - {1} of {2}',
    emptyMsg: "No data to display"
        }),
        listeners: {
            'rowdblclick': function(g, rowIndex, e){
                Ext.getCmp('esf-person-grid').enable();
                var rec = storeERF.getAt(rowIndex);
                        
                var tgl = rec.data['tglhold'].format('Y-m-d');
                var place = rec.data['place'];
               
                Ext.getCmp('tgl_hold').setValue(tgl);
                Ext.getCmp('place_hold').setValue(place);
               
                storePerson.loadData(Ext.util.JSON.decode(rec.data['person']));   
            
            }
        }
                
    });
    //        var personForms = new personForm({
    //            renderTo: 'user-grid4'
    //        });
    //        
    var personGrids = new personGrid({
        renderTo: 'user-grid4',
        store: storePerson,
        columns : personColumns,
        height : 200,
        width:400,
        title:'List of Persons Accompanied',  
        tbar: ['Date Hold :',
            {            
                xtype:'textfield',                               
                id: 'tgl_hold',
                disabled: true,                                
                width: 100,
                editable : false
                        
            },'-',
            'Place Hold :',
            {            
                xtype:'textfield',                                
                id: 'place_hold',
                disabled: true,                                
                width: 100,
                editable : false
                        
            }
        ],
        bbar: new Ext.PagingToolbar({
            id: 'paging-erfGrid',
            pageSize: 100,
            store: storePerson,
            displayInfo: true,
            displayMsg: 'Displaying data {0} - {1} of {2}',
            emptyMsg: "No data to display"
    })
});

var cancelGrids = new cancelGrid({
    renderTo: 'user-grid2',
    store: storeCancel,
    columns : userColumns2,
    width: 700,
    height : 300,
    bbar: new Ext.PagingToolbar({
    id: 'paging-cancelGrid',
    pageSize: 100,
    store: storeCancel,
    displayInfo: true,
    displayMsg: 'Displaying data {0} - {1} of {2}',
    emptyMsg: "No data to display"
    })
});

var esfGrids = new esfGrid({
    renderTo: 'user-grid3',
    store: storeESF,
    columns : userColumns3,
    width: 700,
    height: 300,
    bbar: ['->',{
             xtype: 'button',
	         text: 'Save ESF List(Cart)',
	         id : 'save-list',
	         iconCls: 'icon-save',
	         disabled : true,
	         handler: function()
	         {
                 if (!Ext.getCmp('user-forms').getForm().isValid())
                 {
                     Ext.MessageBox.show({
	    		           title: 'Error',
	    		           msg: 'Please Fill Blank Field!',
	    		           buttons: Ext.MessageBox.OK,
	    		           icon: Ext.MessageBox.ERROR
	    		       });
                     return false;
                 }

                var json = '';
                var json2 = '';
                var parameter = '';

                Ext.getCmp('esf-grid').getStore().each(function(store){

                json += Ext.util.JSON.encode(store.data) + ',';
                });

            	json = '[' + json.substring(0, json.length - 1) + ']'; //JSON format fix

                Ext.getCmp('esf-cancel-grid').getStore().each(function(store){

                json2 += Ext.util.JSON.encode(store.data) + ',';
                });
                json2 = '[' + json2.substring(0, json2.length - 1) + ']'; //JSON format fix

//                console.log(json);
                if (storeESF.getAt(0)!= undefined)
                    var p = storeESF.getAt(0);
//               if (storeCancel.getAt(0) != undefined)
                 else
                    var p = storeCancel.getAt(0);

            	var prjKode = p.data['prj_kode'];
            	var sitKode = p.data['sit_kode'];
            	var prjNama = p.data['prj_nama'];
            	var sitNama = p.data['sit_nama'];
            	var ket = Ext.getCmp('ket_text').getValue();
            	var petugas= Ext.getCmp('mgr_kode_text').getValue();
//            	var tglESF = p.data['tgl_esf'];
                var tglERF = p.data['tgl_erf'];
                var noERF = p.data['erf_no'];
                var pic = Ext.getCmp('pic_kode_text').getValue();
                    //                        var finance = Ext.getCmp('fin_kode_text').getValue();
                var valKode = Ext.getCmp('val_kode_text').getValue();
                var rateIdr = p.data['rateidr'];
                 var totalErfH = Ext.getCmp('total_text').getValue().toString().replace(/\$|\,/g,'');
                    var requester = Ext.getCmp('req_kode_text').getValue();
                 var trano = Ext.getCmp('trano_esf_text').getValue();

                      
//                    var urlmode='appesf/from/edit';
//                    if(mode=='budget')urlmode='appesfbudget/from/edit';
//                    else if(mode=='sales')urlmode='appesfbudget/from/edit/sales/true';
//                   
                    parameter = '[{"prj_kode":"' + prjKode + '","prj_nama":"' + prjNama + '", "sit_kode":"' + sitKode + '", "sit_nama":"' + sitNama + '","ket":"' + ket + '","tgl_erf":"' + tglERF + '","petugas":"' + petugas + '","pic":"' + pic + '", "val_kode":"' + valKode + '", "rateidr":"' + rateIdr + '","totalerfh":"' + totalErfH + '","trano":"' + trano + '","requester":"' + requester + '","erf_no":"' + noERF + '" }]';
            	params = {posts:json, etc:parameter, posts2:json2};
            	myPanel = Ext.getCmp('abs-budget-panel'); //Load the panel
        	    myPanel.body.load({
        	        url: '/procurement/esf/appesfbudget/from/edit/sales/true', //the url
        	        scripts : true,
        	        params: params //our params goes here
                });
	         },
	         scope: this
        	}
                ,
                {
                xtype: 'button',
	         text: 'Cancel ESF List(Cart)',
	         id : 'cancel-list',
	         disabled : true,
	         iconCls: 'icon-cancel',
	         handler:showAddESF
	         ,
	         scope: this
        	}
      ]
    });


    init();

<?php
if ($this->ERFtrano != '') {
?>
     Ext.Ajax.request({
                            results: 0,
                            url: '/default/home/geterfsummary/data/<?php echo $this->ERFtrano; ?>',
                            method:'POST',
                                success: function(result, request){
                                   var returnData = Ext.util.JSON.decode(result.responseText);

                                   Ext.each(returnData.posts, function(op) {

                                      var c = new erflist({
                                          	trano : op['trano'],
                                            tgl : op['tgl'],
                                          	urut: op['urut'],
                                      		prj_kode: op['prj_kode'],
                                       		prj_nama: op['prj_nama'],
                                       		sit_kode: op['sit_kode'],
                                       		sit_nama: op['sit_nama'],
                                       		workid: op['workid'],
           			     					workname: op['workname'],
                                        	kode_brg: op['kode_brg'],
                                        	nama_brg: op['nama_brg'],
           		            				qty: op['qty'],
                                            uom: op['uom'],
                                            price: op['harga'],
                                            totalPrice: op['total'],
                                            ket: op['ket'],
                                            petugas: op['petugas'],
                                            val_kode: op['val_kode'],
                                            rateidr: op['rateidr'],
                                            totalESF: op['totalESF'],
                                            totalPriceESF: op['totalPriceESF'],
                                            totalESFCancel: op['totalESFCancel'],
                                            totalPriceESFCancel: op['totalPriceESFCancel'],
                                            totalPriceInErfh: op['totalInErfh'],
                            tgl_hold:op['tgl_hold'],
                            place_hold:op['place_hold'],
                            person:op['person_accom'],
                   		            	    id: getNewID()

                                      });
                                      storeERF.add(c);

                               });
                               Ext.getCmp('erf-detail-grid').getView().refresh();
                        }
                        });

<?php
    }
?>

});

 //----------------------------------end of main section

</script>

<div id="user-form"></div>
<!--<div id="my-panel"></div>-->
<div id="user-grid4" style="float: right;"></div>
<div id="user-grid"></div>

<div id="user-form2"></div>
<div id="user-grid2"></div>

<div id="user-grid3"></div>