<script type="text/javascript">

var oriarf;
var TEMPORARY = 0;

showAddASF = function(){
    myPanel = Ext.getCmp('abs-budget-panel');
    myPanel.body.load({
        url: '/procurement/procurement/addasf',
        scripts : true
    });
};

function deleteFile()
    {
        var rec = Ext.getCmp('files-grid').getSelectionModel().getSelections();
        theFile = storeFile.getAt(storeFile.findExact('id', rec[0].data['id']));

        if (theFile != undefined)
        {
            Ext.MessageBox.confirm('Confirm', 'Are you sure want to delete this file?', function(btn) {
                if (btn == 'yes')
                {
                if (theFile.data['status'] == 'new')
                    var params = {filename: theFile.data['savename']};
                    Ext.Ajax.request({
                        url: '/procurement/procurement/deletefile',
                        method: 'POST',
                        success: function(result, request) {
                            var returnData = Ext.util.JSON.decode(result.responseText);
                            if (returnData.success)
                            {
                                storeFile.remove(theFile);
                                Ext.getCmp('files-grid').getView().refresh();
                            }
                            else
                            {
                                Ext.Msg.alert('Error!', returnData.msg);
                                return false;
                            }
                        },
                        failure: function(action) {
                            if (action.failureType == 'server') {
                                obj = Ext.util.JSON.decode(action.response.responseText);
                                Ext.Msg.alert('Error!', obj.errors.reason);
                            } else {
                                Ext.Msg.alert('Warning!', 'Server is unreachable : ' + action.response.responseText);
                            }
                        },
                        params: params
                    });
                }
            });
        }
    }
    ;
    
var arflist = Ext.data.Record.create([{
	  name: 'id',
	    type: 'integer'
	},{
	    name: 'trano',
	    type: 'string'
	},{
	    name: 'tgl',
	    type: 'date',
	    dateFormat: 'Y-m-d'
	},{
	    name: 'urut',
	    type: 'string'
	},{
	    name: 'prj_kode',
	    type: 'string'
	}, {
	    name: 'prj_nama',
	    type: 'string'
	},{
	    name: 'sit_kode',
	    type: 'string'
	},{
	    name: 'sit_nama',
	    type: 'string'
	},{
	    name: 'workid',
	    type: 'string'
	},{
	    name: 'workname',
	    type: 'string'
	},{
	    name: 'kode_brg',
	    type: 'string'
	},{
	    name: 'nama_brg',
	    type: 'string'
	},{
	    name: 'qty',
	    type: 'string'
	},{
	    name: 'uom',
	    type: 'string'
	},{
	    name: 'price',
	    type:'float'
	},{
	    name: 'totalPrice',
	    type: 'float'
	},{
	    name: 'totalPriceInArfh',
	    type: 'float'
	},{
	    name: 'ket',
	    type: 'string'
	},{
	    name: 'petugas',
	    type: 'string'
	},{
	    name: 'finance',
	    type: 'string'
	},{
	    name: 'pic',
	    type: 'string'
	},{
	    name: 'val_kode',
	    type: 'string'
	},{
	    name: 'rateidr',
	    type:'float'
	},{
	    name: 'totalASF',
	    type:'float'
	},{
	    name: 'totalPriceASF',
	    type:'float'
	},{
	    name: 'totalASFCancel',
	    type:'float'
	},{
	    name: 'totalPriceASFCancel',
	    type:'float'
	},{
	    name: 'cfs_kode',
	    type: 'string'
	}

	]);

var cancellist = Ext.data.Record.create([{
	  name: 'id',
	    type: 'integer'
	},{
	    name: 'trano',
	    type: 'string'
	},{
	    name: 'arf_no',
	    type: 'string'
	},{
	    name: 'tgl_asf',
	    type: 'date',
	    dateFormat: 'Y-m-d'
	},{
	    name: 'tgl_arf',
	    type: 'date',
	    dateFormat: 'Y-m-d'
	},{
	    name: 'urut',
	    type: 'string'
	},{
	    name: 'prj_kode',
	    type: 'string'
	}, {
	    name: 'prj_nama',
	    type: 'string'
	},{
	    name: 'sit_kode',
	    type: 'string'
	},{
	    name: 'sit_nama',
	    type: 'string'
	},{
	    name: 'workid',
	    type: 'string'
	},{
	    name: 'workname',
	    type: 'string'
	},{
	    name: 'kode_brg',
	    type: 'string'
	},{
	    name: 'nama_brg',
	    type: 'string'
	},{
	    name: 'qty',
	    type: 'string'
	},{
	    name: 'uom',
	    type: 'string'
	},{
	    name: 'price',
	    type:'float'
	},{
	    name: 'totalPrice',
	    type: 'float'
	},{
	    name: 'totalPriceInArfh',
	    type: 'float'
	},{
	    name: 'ket',
	    type: 'string'
	},{
	    name: 'petugas',
	    type: 'string'
	},{
	    name: 'finance',
	    type: 'string'
	},{
	    name: 'pic',
	    type: 'string'
	},{
	    name: 'val_kode',
	    type: 'string'
	},{
	    name: 'rateidr',
	    type:'float'
	},{
	    name: 'totalASF',
	    type:'string'
	},{
	    name: 'totalPriceASF',
	    type:'float'
	},{
	    name: 'status',
	    type:'string'
	},{
	    name: 'cfs_kode',
	    type: 'string'
	}
	]);

var asflist = Ext.data.Record.create([{
	  name: 'id',
	    type: 'integer'
	},{
	    name: 'trano',
	    type: 'string'
	},{
	    name: 'arf_no',
	    type: 'string'
	},{
	    name: 'tgl_asf',
	    type: 'date',
	    dateFormat: 'Y-m-d'
	},{
	    name: 'tgl_arf',
	    type: 'date',
	    dateFormat: 'Y-m-d'
	},{
	    name: 'urut',
	    type: 'string'
	},{
	    name: 'prj_kode',
	    type: 'string'
	}, {
	    name: 'prj_nama',
	    type: 'string'
	},{
	    name: 'sit_kode',
	    type: 'string'
	},{
	    name: 'sit_nama',
	    type: 'string'
	},{
	    name: 'workid',
	    type: 'string'
	},{
	    name: 'workname',
	    type: 'string'
	},{
	    name: 'kode_brg',
	    type: 'string'
	},{
	    name: 'nama_brg',
	    type: 'string'
	},{
	    name: 'qty',
	    type: 'string'
	},{
	    name: 'uom',
	    type: 'string'
	},{
	    name: 'price',
	    type:'float'
	},{
	    name: 'totalPrice',
	    type: 'float'
	},{
	    name: 'totalPriceInArfh',
	    type: 'float'
	},{
	    name: 'ket',
	    type: 'string'
	},{
	    name: 'petugas',
	    type: 'string'
	},{
	    name: 'val_kode',
	    type: 'string'
	},{
	    name: 'rateidr',
	    type:'float'
	},{
	    name: 'totalASF',
	    type:'float'
	},{
	    name: 'totalPriceASF',
	    type:'float'
	},{
	    name: 'status',
	    type:'string'
	},{
	    name: 'cfs_kode',
	    type: 'string'
	}
	]);

var grouplist = Ext.data.Record.create([{
	  name: 'id',
	    type: 'integer'
	},{
	    name: 'trano',
	    type: 'string'
	},{
	    name: 'arf_no',
	    type: 'string'
	},{
	    name: 'tgl_asf',
	    type: 'date',
	    dateFormat: 'Y-m-d'
	},{
	    name: 'tgl_arf',
	    type: 'date',
	    dateFormat: 'Y-m-d'
	},{
	    name: 'urut',
	    type: 'string'
	},{
	    name: 'prj_kode',
	    type: 'string'
	}, {
	    name: 'prj_nama',
	    type: 'string'
	},{
	    name: 'sit_kode',
	    type: 'string'
	},{
	    name: 'sit_nama',
	    type: 'string'
	},{
	    name: 'workid',
	    type: 'string'
	},{
	    name: 'workname',
	    type: 'string'
	},{
	    name: 'kode_brg',
	    type: 'string'
	},{
	    name: 'nama_brg',
	    type: 'string'
	},{
	    name: 'qty',
	    type: 'string'
	},{
	    name: 'uom',
	    type: 'string'
	},{
	    name: 'price',
	    type:'float'
	},{
	    name: 'totalPrice',
	    type: 'float'
	},{
	    name: 'totalPriceInArfh',
	    type: 'float'
	},{
	    name: 'ket',
	    type: 'string'
	},{
	    name: 'petugas',
	    type: 'string'
	},{
	    name: 'val_kode',
	    type: 'string'
	},{
	    name: 'rateidr',
	    type:'float'
	},{
	    name: 'totalASF',
	    type:'float'
	},{
	    name: 'totalPriceASF',
	    type:'float'
	},{
	    name: 'status',
	    type:'string'
	},{
	    name: 'cfs_kode',
	    type: 'string'
	}
	]);

var storeARF = new Ext.data.Store({
    reader: new Ext.data.JsonReader({fields: arflist})
});

var storeCancel = new Ext.data.Store({
    reader: new Ext.data.JsonReader({fields: cancellist})
});

var writer = new Ext.data.JsonWriter({
    encode: true,
    writeAllFields: false
});

var filelist = Ext.data.Record.create([{
            name: 'id',
            type: 'integer'
        }, {
            name: 'filename',
            type: 'string'
        }, {
            name: 'savename',
            type: 'string'
        }, {
            name: 'status',
            type: 'string'
        }, {
            name: 'path',
            type: 'string'
        }]);
    
var storeFile = new Ext.data.Store({
//        id:'store-file',
//        proxy:proxy,
        reader: new Ext.data.JsonReader({fields: filelist})
    });   
//    console.log(storeFile);

var proxy = new Ext.data.HttpProxy({
    api:{
    create: '/default/prd/list'
    }
    
    
});

var storeASF = new Ext.data.Store({
    //id: 'po',
    proxy: proxy,
    writer: writer,
    reader: new Ext.data.JsonReader({
    totalProperty: 'count',
    idProperty: 'polist',
    root: 'posts',
    fields: asflist})
});



var userColumns = [
        new Ext.grid.RowNumberer(),
        {header: "",width: 30, dataIndex: 'id',renderer: function (v,p,r) {
//        if (!isMscWorkid(r.data['workid']))
//        {
//	    	var qty = r.data['qty'];
//	    	percent = (r.data['totalASF'] / qty) * 100;
//
//        }
//        else
//        {

	    	percent = ((parseFloat(r.data['totalPriceASF']) + parseFloat(r.data['totalPriceASFCancel'])) / parseFloat(r.data['totalPrice'])) * 100;
//        }

    	if (percent < 100){
			return '<a href="#" onclick="addToAsf(' + v + ');"><img src="/images/g_rec_add.png"></a>';
    	}
        else
    	{
    		p.attr ='ext:qtip="This item (' + r.data['kode_brg'] + ') must be created by ARF"';
    		return '<img src="/images/icons/fam/page_tag_red.gif">';
//    		return '<a href="#" onclick="addToAFE(' + v + ');"><img src="/images/icons/fam/page_tag_red.gif"></a>';
    	}
    }},

//{header: "Date", width: 100, sortable: true, dataIndex: 'tgl', xtype: 'datecolumn', format: 'd/m/Y'},
        {header: "No Trans", width: 100, sortable: true, dataIndex: 'trano'},
        {header: "Work ID", width: 55, sortable: true, dataIndex: 'workid'},
        {header: "Work Name", width: 120, sortable: true, dataIndex: 'workname'},
        {header: "Product ID", width: 80, sortable: true, dataIndex: 'kode_brg'},
        {header: "Name Material", width: 200, sortable: true, dataIndex: 'nama_brg'},
        {header: "Unit", width: 35, sortable: true, dataIndex: 'uom'},
        {header: "Unit Price", width: 100, sortable: true, dataIndex: 'price', align : 'right'},
        {header: "QTY", width: 100, sortable: true, dataIndex: 'qty'},
        {header: "Total Price", width: 100, sortable: true, dataIndex: 'totalPrice', align : 'right'},
        {header: "Currency", width: 50, sortable: true, dataIndex: 'val_kode', align : 'right'},
        {header: "Description", width: 250, sortable: true, dataIndex: 'ket'},
        {header: "Available", width: 100, renderer: function(v,p,r) {
        var percent = 0;

        	if (r.data['totalPrice'] != 0 || r.data['totalPriceASF'] != 0 || r.data['totalPriceASFCancel'] != 0)
	        {
            	var total = parseFloat(r.data['totalPrice']);
            	var totalAsf = parseFloat(r.data['totalPriceASF']);
                var totalCancel = parseFloat(r.data['totalPriceASFCancel']);
	        	percent = ( (totalAsf + totalCancel) / total) * 100;
                
	        	if (percent > 100)
	            	percent = 100;
	        	percent = percent.toFixed(2);
				var warna = '#0a0';
	        	if (percent > 75)
	            	warna = '#FF3F7D';
	        	else if (percent > 50)
	            	warna = '#FFDA2F';
	        }
		return '<div class="meter-wrap"><div class="meter-value" style="background-color: ' + warna + '; width: ' + percent + '%;"><div class="meter-text"><b>' + percent + '%</b></div></div></div>';
    }}

];

var userColumns2 = [
new Ext.grid.RowNumberer(),
{header: "",width: 60, dataIndex: 'id',css:'text-align:center;',renderer: function (v,p,r) {
  		return '<a href="#" onclick="editList(' + v + ');"><img src="/images/g_rec_upd.png"></a>&nbsp;<a href="#" onclick="delList(' + v + ',\'' + r.data['workid'] + '\');"><img src="/images/g_rec_del.png"></a>';
      }},
//{header: "Date", width: 100, sortable: true, dataIndex: 'tgl', xtype: 'datecolumn', format: 'd/m/Y'},
{header: "No Trans", width: 100, sortable: true, dataIndex: 'arf_no'},
{header: "Work ID", width: 55, sortable: true, dataIndex: 'workid'},
{header: "Work Name", width: 120, sortable: true, dataIndex: 'workname'},
{header: "Product ID", width: 80, sortable: true, dataIndex: 'kode_brg'},
{header: "Name Material", width: 200, sortable: true, dataIndex: 'nama_brg'},
{header: "Unit", width: 35, sortable: true, dataIndex: 'uom'},
{header: "Unit Price", width: 100, sortable: true, dataIndex: 'price', align : 'right'},
{header: "QTY", width: 100, sortable: true, dataIndex: 'qty'},
{header: "Total Price", width: 100, sortable: true, dataIndex: 'totalPrice', align : 'right'},
{header: "Description", width: 250, sortable: true, dataIndex: 'ket'},
{header: "CFS Code", width: 65, sortable: true, dataIndex: 'cfs_kode'}
];

var userColumns3 = [
new Ext.grid.RowNumberer(),
//{header: "",width: 60, dataIndex: 'id',css:'text-align:center;',renderer: function (v,p,r) {
//  		return '<a href="#" onclick="editList(' + v + ');"><img src="/images/g_rec_upd.png"></a>&nbsp;<a href="#" onclick="delList(' + v + ');"><img src="/images/g_rec_del.png"></a>';
//      }},
{header: "Edit",width: 50, dataIndex: 'id',css:'text-align:center;',renderer: function (v,p,r) {
 return '<a href="#" onclick="editList(' + v + ');"><img src="/images/g_rec_upd.png"></a>';
}},
{header: "Delete", width: 50, dataIndex: 'id', css: 'text-align:center;', renderer: function(v, p, r) {
return '<a href="#" onclick="delList(' + v + ',\'' + r.data['workid'] + '\');"><img src="/images/g_rec_del.png"></a>';
}},
//{header: "Date", width: 100, sortable: true, dataIndex: 'tgl', xtype: 'datecolumn', format: 'd/m/Y'},
{header: "No Trans", width: 100, sortable: true, dataIndex: 'arf_no'},
{header: "Work ID", width: 55, sortable: true, dataIndex: 'workid'},
{header: "Work Name", width: 120, sortable: true, dataIndex: 'workname'},
{header: "Product ID", width: 80, sortable: true, dataIndex: 'kode_brg'},
{header: "Name Material", width: 200, sortable: true, dataIndex: 'nama_brg'},
{header: "Unit", width: 35, sortable: true, dataIndex: 'uom'},
{header: "Unit Price", width: 100, sortable: true, dataIndex: 'price', align : 'right'},
{header: "QTY", width: 100, sortable: true, dataIndex: 'qty'},
{header: "Total Price", width: 100, sortable: true, dataIndex: 'totalPrice', align : 'right'},
{header: "Description", width: 250, sortable: true, dataIndex: 'ket'},
{header: "CFS Code", width: 65, sortable: true, dataIndex: 'cfs_kode'}
];

    <?php echo $this->action('index','textfield',null); ?>
    <?php echo $this->action('popupgrid','grid'); ?>

function showManagerList()
{
    var columns = [
                    {header:'Uid',width:100,sortable:true,dataIndex:'uid'},
                    {header:'Manager Name',width:150,sortable:true,dataIndex:'nama'},
                ];

    data =  [

            {name: 'uid', mapping: 'uid'},
            {name: 'nama', mapping: 'nama'},
            ];


    urlJson = '/manager/list';

    primaryKey = 'uid';
    Pk = primaryKey;
    widthGrid = 380;
    heightGrid = 250;

    var stores = new Ext.data.Store({
        proxy:new Ext.data.HttpProxy({
        url: urlJson
         }),
            reader: new Ext.data.JsonReader({
        root: 'posts',
        totalProperty: 'count'
    },data)
        });

    yAxis=100;
    grids = function()
    {
        grids.superclass.constructor.call(this, {
        store: stores,
        columns: columns,
        x:0,
        y:yAxis,
        id:primaryKey+'_grid',
        loadMask: true,
        bbar:[ new Ext.PagingToolbar({
            pageSize: 100,
            store: stores,
            displayInfo: true,
            displayMsg: 'Displaying data {0} - {1} of {2}',
            emptyMsg: "No data to display"
        })],
        height:heightGrid,
        width:widthGrid,
        listeners: {
            'rowdblclick': function(g, rowIndex, e){
				        	objectName = 'uid';
				            txtBoxChange = 'mgr_kode_text';
				            closeForm = true;
				            formId = 'a-form-panel-mgr_kode_button';
				            var uid = g.getStore().getAt(rowIndex).get(objectName);
				           newUrl = '/default/manager/dblclick/name/uid/data/' + uid;
				            prox = 'trano_proxy';
				            gri = 'trano_grid';

				            var record = g.getStore().getAt(rowIndex).get(objectName);
				            var record2 = g.getStore().getAt(rowIndex).get("nama");
                            Ext.getCmp('mgr_kode_text').setValue(record);



                            if (Ext.getCmp('mgr_nama_text') != undefined)
                            {
                            	Ext.getCmp('mgr_nama_text').setValue(record2);
                            }


                            if (closeForm)
                            {
                                Ext.getCmp(formId).close();
                            }

                            window.setTimeout(function(){
                                    isDblClick = false;
                            }, 0);
                    }
            }
    });
    }
    stores.load();

    Ext.extend(grids, Ext.grid.GridPanel);
    Ext.extend(txtboks,Ext.form.TextField);//PR
    searchMgrKode = function(field,e){
        newUrl = '/default/manager/dblclick/name/uid/data/' + field.getValue();    prox = Pk+'_proxy';
        gri = Pk+'_grid';
        proxies = Ext.getCmp(gri).getStore();
        proxies.proxy = new Ext.data.HttpProxy({
            url: newUrl
             });
        Ext.getCmp(gri).getStore().reload();

    }
    searchMgrName = function(field,e){
        newUrl = '/default/manager/dblclick/name/Name/data/' + field.getValue();    prox = Pk+'_proxy';
        gri = Pk+'_grid';
        proxies = Ext.getCmp(gri).getStore();
        proxies.proxy = new Ext.data.HttpProxy({
            url: newUrl
             });
        Ext.getCmp(gri).getStore().reload();
    }

    var aForm =  new Ext.Window({
        id: 'a-form-panel-mgr_kode_button',
        layout: 'absolute',
        minWidth: 300,
        minHeight: 200,
        stateful:false,
        modal: true,
        resizable: false,
        width: 400,
        height: 400,
        items : [
            {
            x: 10,
            y: 12,
            xtype: 'label',
            text: 'Manager Uid:'
            },
             new txtboks(90,10,80,'manager_code',searchMgrKode),
             {
            x: 180,
            y: 12,
            xtype: 'label',
            text: 'Manager Name:'
            },
            new txtboks(260,10,80,'manager_name',searchMgrName),
             new grids('manager_list')
        ]

      });
      aForm.title = 'Choose Manager';
      aForm.show();
}

function showUserList()
{
    var columns = [
                    {header:'Id',width:35,sortable:true,dataIndex:'id'},
                    {header:'Uid',width:100,sortable:true,dataIndex:'uid'},
                    {header:'User Name',width:150,sortable:true,dataIndex:'Name'},
                ];

    data =  [
            {name: 'id', mapping: 'id'},
    
            {name: 'uid', mapping: 'uid'},
            {name: 'Name', mapping: 'Name'},
            ];


    urlJson = '/user/list';

    primaryKey = 'id';
    Pk = primaryKey;
    widthGrid = 380;
    heightGrid = 250;

    var stores = new Ext.data.Store({
        proxy:new Ext.data.HttpProxy({
        url: urlJson
         }),
            reader: new Ext.data.JsonReader({
        root: 'posts',
        totalProperty: 'count'
    },data)
        });

    yAxis=100;
    grids = function()
    {
        grids.superclass.constructor.call(this, {
        store: stores,
        columns: columns,
        x:0,
        y:yAxis,
        id:primaryKey+'_grid',
        loadMask: true,
        bbar:[ new Ext.PagingToolbar({
            pageSize: 100,
            store: stores,
            displayInfo: true,
            displayMsg: 'Displaying data {0} - {1} of {2}',
            emptyMsg: "No data to display"
        })],
        height:heightGrid,
        width:widthGrid,
        listeners: {
            'rowdblclick': function(g, rowIndex, e){
				        	objectName = 'id';
				            txtBoxChange = 'mgr_kode_text';
				            closeForm = true;
				            formId = 'a-form-panel-user_button';
				            var id = g.getStore().getAt(rowIndex).get(objectName);
				           newUrl = '/default/user/listByParams/name/id/data/' + id;
				            prox = 'trano_proxy';
				            gri = 'trano_grid';

				            var record = g.getStore().getAt(rowIndex).get("uid");
				            var record2 = g.getStore().getAt(rowIndex).get("Name");
                            Ext.getCmp('fin_kode_text').setValue(record);



                            if (Ext.getCmp('fin_nama_text') != undefined)
                            {
                            	Ext.getCmp('fin_nama_text').setValue(record2);
                            }


                            if (closeForm)
                            {
                                Ext.getCmp(formId).close();
                            }

                            window.setTimeout(function(){
                                    isDblClick = false;
                            }, 0);
                    }
            }
    });
    }
    stores.load();

    Ext.extend(grids, Ext.grid.GridPanel);
    Ext.extend(txtboks,Ext.form.TextField);//PR
    searchUserLogin = function(field,e){
        newUrl = '/default/user/listByParams/name/uid/data/' + field.getValue();    prox = Pk+'_proxy';
        gri = Pk+'_grid';
        proxies = Ext.getCmp(gri).getStore();
        proxies.proxy = new Ext.data.HttpProxy({
            url: newUrl
             });
        Ext.getCmp(gri).getStore().reload();

    }
    searchUserName = function(field,e){
        newUrl = '/default/user/listByParams/name/Name/data/' + field.getValue();    prox = Pk+'_proxy';
        gri = Pk+'_grid';
        proxies = Ext.getCmp(gri).getStore();
        proxies.proxy = new Ext.data.HttpProxy({
            url: newUrl
             });
        Ext.getCmp(gri).getStore().reload();
    }

    var aForm =  new Ext.Window({
        id: 'a-form-panel-user_button',
        layout: 'absolute',
        minWidth: 300,
        minHeight: 200,
        stateful:false,
        modal: true,
        resizable: false,
        width: 400,
        height: 400,
        items : [
            {
            x: 10,
            y: 12,
            xtype: 'label',
            text: 'User Login:'
            },
             new txtboks(100,10,80,'uid',searchUserLogin),
             {
            x: 190,
            y: 12,
            xtype: 'label',
            text: 'User Name:'
            },
            new txtboks(260,10,80,'Name',searchUserName),
             new grids('user_list')
        ]

      });
      aForm.title = 'Choose User';
      aForm.show();
}

function getNewID()
{
	var maxRecordARF = storeARF.getCount();
    var maxRecordCancel = storeCancel.getCount();
    var maxRecordASF = storeASF.getCount();

	var newID = maxRecordARF + maxRecordCancel + maxRecordASF + 1;

	return newID;
}

function clearASFForm()
{
     var teks = Ext.getCmp('asf-form').findByType('textfield');
    Ext.each(teks, function (t, index){
			t.setValue('');
        });
}

function showArfList()
{
    var columns = [ {header:'Trano',width:100,sortable:true,dataIndex:'trano'},
                    {header:'Project ID',width:100,sortable:true,dataIndex:'prj_kode'},
                    {header:'Project Name',width:150,sortable:true,dataIndex:'prj_nama'},
                    {header:'Site Code',width:100,sortable:true,dataIndex:'sit_kode'},
                    {header:'Site Name',width:100,sortable:true,dataIndex:'sit_nama'},
                ];

    urlJson = '/default/arfh/list/type/P';
    data =  [
            {name: 'trano', mapping: 'trano'},
            {name: 'prj_kode', mapping: 'prj_kode'},
            {name: 'prj_nama', mapping: 'prj_nama'},
            {name: 'sit_kode', mapping: 'sit_kode'},
            {name: 'sit_nama', mapping: 'sit_nama'},
            {name: 'prj_nama', mapping: 'prj_nama'},];
    primaryKey = 'trano';
    Pk = primaryKey;
    widthGrid = 380;
    heightGrid = 250;

    var stores = new Ext.data.Store({
        proxy:new Ext.data.HttpProxy({
        url: urlJson
         }),
        reader: new Ext.data.JsonReader({
        root: 'posts',
        totalProperty: 'count'
    },data)
        });

    yAxis=100;
    grids = function()
    {
        grids.superclass.constructor.call(this, {
        store: stores,
        columns: columns,
        x:0,
        y:yAxis,
        id:primaryKey+'_grid',
        loadMask: true,
        bbar:[ new Ext.PagingToolbar({
            pageSize: 100,
            store: stores,
            displayInfo: true,
            displayMsg: 'Displaying data {0} - {1} of {2}',
            emptyMsg: "No data to display"
        })],
        height:heightGrid,
        width:widthGrid,
        listeners: {
            'rowdblclick': function(g, rowIndex, e){
                            closeForm = false;
                            isDblClick = true;
                            objectName = 'trano';
                            txtBoxChange = 'trano_text';
                            closeForm = true;
                            formId = 'a-form-panel-trano_button';
                            prox = 'trano_proxy';
                            gri = 'trano_grid';
                            var trano = g.getStore().getAt(rowIndex).get(objectName);


                            //Ext.getCmp('PR-detail-grid').getStore().proxy.setUrl('/default/prd/listbyparams/name/trano/data/' + trano);
                            //Ext.getCmp('PR-detail-grid').getStore().reload();
                    Ext.Ajax.request({
                    url: '/default/home/cekfinal/trano/' + trano,
                    method:'POST',
                    success: function(resp){
                        var returnData = Ext.util.JSON.decode(resp.responseText);
                        if (returnData.success)
                        {
                            Ext.Ajax.request({
                                results: 0,
                                url: '/default/home/getarfsummary/data/'+trano,
                                method:'POST',
                                success: function(result, request){
                                   var returnData = Ext.util.JSON.decode(result.responseText);

                                   Ext.each(returnData.posts, function(op) {

                                      var c = new arflist({
                                          	trano : op['trano'],
                                            tgl : op['tgl'],
                                          	urut: op['urut'],
                                      		prj_kode: op['prj_kode'],
                                       		prj_nama: op['prj_nama'],
                                       		sit_kode: op['sit_kode'],
                                       		sit_nama: op['sit_nama'],
                                       		workid: op['workid'],
           			     					workname: op['workname'],
                                        	kode_brg: op['kode_brg'],
                                        	nama_brg: op['nama_brg'],
           		            				qty: op['qty'],
                                            uom: op['uom'],
                                            price: op['harga'],
                                            totalPrice: op['total'],
                                            ket: op['ket'],
                                            petugas: op['petugas'],
                                            val_kode: op['val_kode'],
                                            rateidr: op['rateidr'],
                                            totalASF: op['totalASF'],
                                            totalPriceASF: op['totalPriceASF'],
                                            totalASFCancel: op['totalASFCancel'],
                                            totalPriceASFCancel: op['totalPriceASFCancel'],
                                            totalPriceInArfh: op['totalInArfh'],
                                            cfs_kode : op['cfs_kode'],
                   		            	    id: getNewID()

                                      });
                                      storeARF.add(c);
//                                      console.log(c);

                                   });
                                   Ext.getCmp('arf-detail-grid').getView().refresh();
//                                    Ext.getCmp('paging-arfGrid').doRefresh();

                            }
                            });
                        }
                        else
                        {
                            Ext.Msg.alert('Error', returnData.msg);
                        }
                    }
                    });

                            window.setTimeout(function(){
                                    isDblClick = false;
                            }, 0);
                    }
            }
    });
    }
    stores.load();

    Ext.extend(grids, Ext.grid.GridPanel);
    Ext.extend(txtboks,Ext.form.TextField);//PR
    searchTrano = function(field,e){
        newUrl = '/arfh/listByParams/type/P/name/trano/data/' + field.getValue(); prox = Pk+'_proxy';
        gri = Pk+'_grid';
        proxies = Ext.getCmp(gri).getStore();
        proxies.proxy = new Ext.data.HttpProxy( {
            url: newUrl
             });
        Ext.getCmp(gri).getStore().reload();
    }
    searchPrj_kode = function(field,e){
        newUrl = '/arfh/listByParams/type/P/name/prj_kode/data/' + field.getValue(); prox = Pk+'_proxy';
        gri = Pk+'_grid';
        proxies = Ext.getCmp(gri).getStore();
        proxies.proxy = new Ext.data.HttpProxy( {
            url: newUrl
             });
        Ext.getCmp(gri).getStore().reload();
}
    searchSit_kode = function(field,e){
        newUrl = '/arfh/listByParams/type/P/name/sit_kode/data/' + field.getValue(); prox = Pk+'_proxy';
        gri = Pk+'_grid';
        proxies = Ext.getCmp(gri).getStore();
        proxies.proxy = new Ext.data.HttpProxy( {
            url: newUrl
             });
        Ext.getCmp(gri).getStore().reload();
}

    var aForm =  new Ext.Window({
    id: 'a-form-panel-trano_button',
    layout: 'absolute',
    minWidth: 300,
    minHeight: 200,
    width: 400,
    height: 400,
    stateful: false,
    modal : true,
    resizeable : false,
    items : [
        {
        x: 6,
        y: 12,
        xtype: 'label',
        text: 'No Trans'
        },
       new txtboks(80,10,80,'trans_no',searchTrano),
       {
           x : 6,
           y: 52,
           xtype: 'label',
           text: 'Project Code'
           },
          new txtboks(80,50,80,'prj_kode',searchPrj_kode),
       {
             x: 165,
             y: 52,
        	xtype: 'label',
            text: 'Site Code'
              },
             new txtboks(240,50,80,'sit_kode',searchSit_kode),
         {
        x: 384,
        y: 12,
        xtype: 'label',
        text: ''
        }
        ,new grids('pr_list')
    ]

  });
  aForm.title = 'Choose No Trans';
  aForm.show();
}

function cekTotal()
{

    var totpricebalance = Ext.getCmp('total_balance_text').getValue();

    if (Ext.getCmp('asf_total').getValue() != undefined && Ext.getCmp('asf_total').getValue() != '')
        var totpriceasf = Ext.getCmp('asf_total').getValue();
    else
        var totpriceasf = 0;
    if (Ext.getCmp('asfcancel_total').getValue() != undefined && Ext.getCmp('asfcancel_total').getValue() != '')
        var totpricecancel = Ext.getCmp('asfcancel_total').getValue();
    else
        var totpricecancel = 0;
//        var currency = Ext.getCmp('val_kode_text').getValue();

        totpricebalance = parseFloat(totpricebalance.toString().replace(/\$|\,/g,''));
        totpriceasf = parseFloat(totpriceasf.toString().replace(/\$|\,/g,''));
        totpricecancel = parseFloat(totpricecancel.toString().replace(/\$|\,/g,''));


        if (totpricebalance < (totpriceasf + totpricecancel ))
        {

//                   Ext.getCmp('save-asf').disable();
                   Ext.MessageBox.show({
                   title: 'Error',
                   msg: 'Request is over the Budget!',
                   buttons: Ext.MessageBox.OK,
                   icon: Ext.MessageBox.ERROR
            });
             return false;
        }
        else if ((totpriceasf + totpricecancel) == 0)
        {
//                   Ext.getCmp('save-asf').disable();
                   Ext.MessageBox.show({
                   title: 'Error',
                   msg: 'please input qty and unit price!',
                   buttons: Ext.MessageBox.OK,
                   icon: Ext.MessageBox.ERROR
            });
             return false;
        }
        else
        {

//            temptot = totpricebalance - (totpriceasf + totpricecancel );
//            Ext.getCmp('save-asf').enable();
            return true;
        }
}

function hitungTotalAsf()
{
       if (Ext.getCmp('asf_qty').getValue() != '' && Ext.getCmp('asf_unit_price').getValue() != '')
                                                    {
                                                        var a = parseFloat(Ext.getCmp('asf_qty').getValue().toString().replace(/\$|\,/g,''));
                                                        var b = parseFloat(Ext.getCmp('asf_unit_price').getValue().toString().replace(/\$|\,/g,''));
                                                        var total = a*b;
                                                        //Ext.getCmp('total_price_text').setValue( CommaFormatted((a*b).toFixed(2)));
                                                        Ext.getCmp('asf_total').setValue(CommaFormatted(total.toFixed(2)));
    //													Ext.getCmp('save-po').enable();
                                                    }
    else
       Ext.getCmp('asf_total').setValue('');

}

function hitungTotalCancel()
{
       if (Ext.getCmp('asfcancel_qty').getValue() != '' && Ext.getCmp('asfcancel_unit_price').getValue() != '')
                                                    {
                                                        var a = parseFloat(Ext.getCmp('asfcancel_qty').getValue().toString().replace(/\$|\,/g,''));
                                                        var b = parseFloat(Ext.getCmp('asfcancel_unit_price').getValue().toString().replace(/\$|\,/g,''));
                                                        var total = a*b;
                                                        //Ext.getCmp('total_price_text').setValue( CommaFormatted((a*b).toFixed(2)));
                                                        Ext.getCmp('asfcancel_total').setValue(CommaFormatted(total.toFixed(2)));
    //													Ext.getCmp('save-po').enable();
                                                    }
    else
       Ext.getCmp('asfcancel_total').setValue('');
}

function addToStoreAsf()
{

        var d = new asflist({
                arf_no : Ext.getCmp('arf_no_text').getValue(),
                urut: oriarf.data['urut'],
                workid: oriarf.data['workid'],
                workname: oriarf.data['workname'],
                pr_number: oriarf.data['trano'],
                prj_kode: oriarf.data['prj_kode'],
                sit_kode: oriarf.data['sit_kode'],
                prj_nama: oriarf.data['prj_nama'],
                sit_nama: oriarf.data['sit_nama'],
                kode_brg: oriarf.data['kode_brg'],
                nama_brg: oriarf.data['nama_brg'],
                totalPriceInArfh: oriarf.data['totalPriceInArfh'],
                totalPriceArf: oriarf.data['totalPrice'],
                qty: Ext.getCmp('asf_qty').getValue().toString().replace(/\$|\,/g,''),
                uom: oriarf.data['uom'],
                val_kode: oriarf.data['val_kode'],
                 rateidr : oriarf.data['rateidr'],
                price: Ext.getCmp('asf_unit_price').getValue().toString().replace(/\$|\,/g,''),
//                tgl_asf: Ext.getCmp('tgl_asf_text').getValue(),
                tgl_arf: oriarf.data['tgl'],
                totalPrice: Ext.getCmp('asf_total').getValue().toString().replace(/\$|\,/g,''),
                 ket: Ext.getCmp('ket_text').getValue(),
                petugas : Ext.getCmp('mgr_kode_text').getValue(),
                finance : Ext.getCmp('fin_kode_text').getValue(),
                pic : Ext.getCmp('pic_kode_text').getValue(),
                cfs_kode : Ext.getCmp('cfs_kode_text').getValue(),
                id: oriarf.data['id']
                });


    return d;
}

function addToStoreCancel()
{


            var e = new cancellist({
                arf_no : Ext.getCmp('arf_no_text').getValue(),
                urut: oriarf.data['urut'],
                workid: oriarf.data['workid'],
                workname: oriarf.data['workname'],
                pr_number: oriarf.data['trano'],
                prj_kode: oriarf.data['prj_kode'],
                sit_kode: oriarf.data['sit_kode'],
                prj_nama: oriarf.data['prj_nama'],
                sit_nama: oriarf.data['sit_nama'],
                kode_brg: oriarf.data['kode_brg'],
                nama_brg: oriarf.data['nama_brg'],
                totalPriceInArfh: oriarf.data['totalPriceInArfh'],
                totalPriceArf: oriarf.data['totalPrice'],
                qty: Ext.getCmp('asfcancel_qty').getValue().toString().replace(/\$|\,/g,''),
                uom: oriarf.data['uom'],
                val_kode: oriarf.data['val_kode'],
                 rateidr : oriarf.data['rateidr'],
                price: Ext.getCmp('asfcancel_unit_price').getValue().toString().replace(/\$|\,/g,''),
//                tgl_asf: Ext.getCmp('tgl_asf_text').getValue(),
                tgl_arf: oriarf.data['tgl'],
                totalPrice: Ext.getCmp('asfcancel_total').getValue().toString().replace(/\$|\,/g,''),
                 ket: Ext.getCmp('ket_text').getValue(),
                petugas : Ext.getCmp('mgr_kode_text').getValue(),
                finance : Ext.getCmp('fin_kode_text').getValue(),
                pic : Ext.getCmp('pic_kode_text').getValue(),
                cfs_kode : Ext.getCmp('cfs_kode_text').getValue(),
                id: oriarf.data['id']

                });

    return e;
}

function addToAsf(idArf)
{
    Ext.getCmp('save-asf').setText('Add to List(Cart)');
    Ext.getCmp('cancel-asf').setText('Cancel Add');
    
    oriarf = storeARF.getAt(storeARF.findExact('id', idArf));

    if (oriarf != undefined)
    {
        var valNew = Ext.getCmp('val_kode_text').getValue();
        var valuta = oriarf.data['val_kode'];

                if (valNew != valuta)
                  {
                	  Ext.MessageBox.show({
              	           title: 'Error Currency',
              	           msg: 'Currency Not Match!!',
              	           buttons: Ext.MessageBox.OK,
              	           icon: Ext.MessageBox.ERROR
              	       });

                	  clearASFForm();

                      return false;

                  }
        Ext.getCmp('arf-detail-grid').disable();
        Ext.getCmp('asf-grid').disable();
        Ext.getCmp('asf-cancel-grid').disable();
//        Ext.getCmp('cancel-asf').enable();
        Ext.getCmp('arf_no_text').setValue(oriarf.data['trano']);
        Ext.getCmp('tgl_arf_text').setValue(oriarf.data['tgl']);
        Ext.getCmp('prj_kode_text').setValue(oriarf.data['prj_kode']);
        Ext.getCmp('prj_nama_text').setValue(oriarf.data['prj_nama']);
        Ext.getCmp('sit_kode_text').setValue(oriarf.data['sit_kode']);
        Ext.getCmp('sit_nama_text').setValue(oriarf.data['sit_nama']);
        Ext.getCmp('asf_qty').setValue(CommaFormatted(oriarf.data['qty']));
        Ext.getCmp('asf_unit_price').setValue(CommaFormatted(oriarf.data['price']));
        Ext.getCmp('cfs_kode_text').setValue(oriarf.data['cfs_kode']);

        var totalPriceArf = parseFloat(oriarf.data['totalPrice']);
        var totalPriceAsf = parseFloat(oriarf.data['totalPriceASF']);
        var totalPriceAsfCancel = parseFloat(oriarf.data['totalPriceASFCancel']);
        var totalPriceInAsf = totalPriceAsf + totalPriceAsfCancel;
        var balanceTotal = totalPriceArf - (totalPriceAsf + totalPriceAsfCancel);

        Ext.getCmp('total_arf_text').setValue(CommaFormatted(totalPriceArf));
        Ext.getCmp('total_asf_text').setValue(CommaFormatted(totalPriceInAsf));
        Ext.getCmp('total_balance_text').setValue(CommaFormatted(balanceTotal));

        Ext.getCmp('total_arf_cur').setValue(valuta);
        Ext.getCmp('total_asf_cur').setValue(valuta);
        Ext.getCmp('total_balance_cur').setValue(valuta);
        Ext.getCmp('asf_uom').setValue(oriarf.data['uom']);
        Ext.getCmp('asf_cur').setValue(valuta);
        Ext.getCmp('asf_total_cur').setValue(valuta);
        Ext.getCmp('asfcancel_uom').setValue(oriarf.data['uom']);
        Ext.getCmp('asfcancel_total_cur').setValue(valuta);
        Ext.getCmp('asfcancel_cur').setValue(valuta);
        

        hitungTotalAsf();
//        cekTotal()


    }
}

function insertToList()
{
if (cekTotal())
{
    Ext.getCmp('save-list').enable();
    Ext.getCmp('cancel-list').enable();

    if (oriarf != undefined){

    var oriasf = storeASF.getAt(storeASF.findExact('id', oriarf.data['id']));
    var oricancel = storeCancel.getAt(storeCancel.findExact('id', oriarf.data['id']));

        if (oriasf != undefined || oricancel != undefined)
        {


             if (oriasf != undefined && oricancel != undefined && oriasf.data['status'] == 'edit' && oricancel.data['status'] == 'edit')
            {

                if (Ext.getCmp('asf_total').getValue() == '')
                {
//                    var a = parseFloat(oriasf.data['totalPrice']);
//                    oriarf.data['totalPriceASF'] = oriarf.data['totalPriceASF'] + a;
                    storeASF.remove(oriasf);

                    oricancel.data['qty'] = Ext.getCmp('asfcancel_qty').getValue().toString().replace(/\$|\,/g,'');
                    oricancel.data['price'] = Ext.getCmp('asfcancel_unit_price').getValue().toString().replace(/\$|\,/g,'');
                    oricancel.data['totalPrice'] = Ext.getCmp('asfcancel_total').getValue().toString().replace(/\$|\,/g,'');
                    oricancel.data['status'] = '';

                    oricancel.data['cfs_kode'] = Ext.getCmp('cfs_kode_text').getValue();

                    var totasfc = Ext.getCmp('asfcancel_total').getValue().toString().replace(/\$|\,/g,'');
                    oriarf.data['totalPriceASFCancel'] = parseFloat(oriarf.data['totalPriceASFCancel']) + parseFloat(totasfc);


                }
                 else if (Ext.getCmp('asfcancel_total').getValue() == '')
                {
//                        var b = parseFloat(oricancel.data['totalPrice']);
//                        oriarf.data['totalPriceASFCancel'] = oriarf.data['totalPriceASFCancel'] + b;
                        storeCancel.remove(oricancel);

                        oriasf.data['qty'] = Ext.getCmp('asf_qty').getValue().toString().replace(/\$|\,/g,'');
                        oriasf.data['price'] = Ext.getCmp('asf_unit_price').getValue().toString().replace(/\$|\,/g,'');
                        oriasf.data['totalPrice'] = Ext.getCmp('asf_total').getValue().toString().replace(/\$|\,/g,'');
                        oriasf.data['status'] = '';

                        oriasf.data['cfs_kode'] = Ext.getCmp('cfs_kode_text').getValue();

                         var totasf = Ext.getCmp('asf_total').getValue().toString().replace(/\$|\,/g,'');
                         oriarf.data['totalPriceASF'] = parseFloat(oriarf.data['totalPriceASF']) + parseFloat(totasf);

                }
                else{
                oriasf.data['qty'] = Ext.getCmp('asf_qty').getValue().toString().replace(/\$|\,/g,'');
                oriasf.data['price'] = Ext.getCmp('asf_unit_price').getValue().toString().replace(/\$|\,/g,'');
                oriasf.data['totalPrice'] = Ext.getCmp('asf_total').getValue().toString().replace(/\$|\,/g,'');
                oriasf.data['status'] = '';

                oricancel.data['qty'] = Ext.getCmp('asfcancel_qty').getValue().toString().replace(/\$|\,/g,'');
                oricancel.data['price'] = Ext.getCmp('asfcancel_unit_price').getValue().toString().replace(/\$|\,/g,'');
                oricancel.data['totalPrice'] = Ext.getCmp('asfcancel_total').getValue().toString().replace(/\$|\,/g,'');
                oricancel.data['status'] = '';

                oricancel.data['cfs_kode'] = Ext.getCmp('cfs_kode_text').getValue();
                oriasf.data['cfs_kode'] = Ext.getCmp('cfs_kode_text').getValue();

                var totasf = Ext.getCmp('asf_total').getValue().toString().replace(/\$|\,/g,'');
                var totasfc = Ext.getCmp('asfcancel_total').getValue().toString().replace(/\$|\,/g,'');
                oriarf.data['totalPriceASF'] = parseFloat(oriarf.data['totalPriceASF']) + parseFloat(totasf);
                oriarf.data['totalPriceASFCancel'] = parseFloat(oriarf.data['totalPriceASFCancel']) + parseFloat(totasfc);
                }
            }

            else if (oriasf != undefined && oriasf.data['status'] == 'edit')
            {

                if (Ext.getCmp('asfcancel_total').getValue() != '')
                {

                    var totasfc = Ext.getCmp('asfcancel_total').getValue().toString().replace(/\$|\,/g,'');
                    oriarf.data['totalPriceASFCancel'] = parseFloat(oriarf.data['totalPriceASFCancel']) + parseFloat(totasfc);
                    storeCancel.add(addToStoreCancel());


                    if (Ext.getCmp('asf_total').getValue() == '')
                    {


//                    var a = parseFloat(oriasf.data['totalPrice']);
//                    oriarf.data['totalPriceASF'] = oriarf.data['totalPriceASF'] + a;
                    storeASF.remove(oriasf);

//                      oricancel.data['qty'] = Ext.getCmp('asfcancel_qty').getValue().toString().replace(/\$|\,/g,'');
//                      oricancel.data['price'] = Ext.getCmp('asfcancel_unit_price').getValue().toString().replace(/\$|\,/g,'');
//                      oricancel.data['totalPrice'] = Ext.getCmp('asfcancel_total').getValue().toString().replace(/\$|\,/g,'');
//                      oricancel.data['status'] = '';
//
//                      var totasfc = Ext.getCmp('asfcancel_total').getValue().toString().replace(/\$|\,/g,'');
//                      oriarf.data['totalPriceASFCancel'] = parseFloat(oriarf.data['totalPriceASFCancel']) + parseFloat(totasfc);
                    }

                }
//                else{

                oriasf.data['qty'] = Ext.getCmp('asf_qty').getValue().toString().replace(/\$|\,/g,'');
                oriasf.data['price'] = Ext.getCmp('asf_unit_price').getValue().toString().replace(/\$|\,/g,'');
                oriasf.data['totalPrice'] = Ext.getCmp('asf_total').getValue().toString().replace(/\$|\,/g,'');
                oriasf.data['status'] = '';

                oriasf.data['cfs_kode'] = Ext.getCmp('cfs_kode_text').getValue();
                var totasf = Ext.getCmp('asf_total').getValue().toString().replace(/\$|\,/g,'');
                oriarf.data['totalPriceASF'] = parseFloat(oriarf.data['totalPriceASF']) + parseFloat(totasf);

//                }
            }

            else if (oricancel != undefined && oricancel.data['status'] == 'edit')
            {

                if (Ext.getCmp('asf_total').getValue() != '')
                 {

                     var totasf = Ext.getCmp('asf_total').getValue().toString().replace(/\$|\,/g,'');
                    oriarf.data['totalPriceASF'] = parseFloat(oriarf.data['totalPriceASF']) + parseFloat(totasf);
                     storeASF.add(addToStoreAsf());




                     if (Ext.getCmp('asfcancel_total').getValue() == '')
                    {

//                         var b = parseFloat(oricancel.data['totalPrice']);
//                        oriarf.data['totalPriceASFCancel'] = oriarf.data['totalPriceASFCancel'] + b;

                        storeCancel.remove(oricancel);

//                        oriasf.data['qty'] = Ext.getCmp('asf_qty').getValue().toString().replace(/\$|\,/g,'');
//                        oriasf.data['price'] = Ext.getCmp('asf_unit_price').getValue().toString().replace(/\$|\,/g,'');
//                        oriasf.data['totalPrice'] = Ext.getCmp('asf_total').getValue().toString().replace(/\$|\,/g,'');
//                        oriasf.data['status'] = '';
//
//                         var totasf = Ext.getCmp('asf_total').getValue().toString().replace(/\$|\,/g,'');
//                         oriarf.data['totalPriceASF'] = parseFloat(oriarf.data['totalPriceASF']) + parseFloat(totasf);
                    }
                 }
//                else{

                oricancel.data['qty'] = Ext.getCmp('asfcancel_qty').getValue().toString().replace(/\$|\,/g,'');
                oricancel.data['price'] = Ext.getCmp('asfcancel_unit_price').getValue().toString().replace(/\$|\,/g,'');
                oricancel.data['totalPrice'] = Ext.getCmp('asfcancel_total').getValue().toString().replace(/\$|\,/g,'');
                oricancel.data['status'] = '';

                oricancel.data['cfs_kode'] = Ext.getCmp('cfs_kode_text').getValue();
                var totasfc = Ext.getCmp('asfcancel_total').getValue().toString().replace(/\$|\,/g,'');

                oriarf.data['totalPriceASFCancel'] = parseFloat(oriarf.data['totalPriceASFCancel']) + parseFloat(totasfc);

//                }
            }
            else if (oriasf.data['status'] == undefined || oriasf.data['status'] == '' || oricancel.data['status'] == undefined || oricancel.data['status'] == '')
    			{
    				Ext.MessageBox.show({
	    		           title: 'Error',
	    		           msg: 'Please use Edit for updating this item!',
	    		           buttons: Ext.MessageBox.OK,
	    		           icon: Ext.MessageBox.ERROR
	    		       });
		            return false;
                    
    			}
        }
        else
        {


            if (Ext.getCmp('asf_total').getValue() != '' && Ext.getCmp('asfcancel_total').getValue() != '' )
            {
             var totasf = Ext.getCmp('asf_total').getValue().toString().replace(/\$|\,/g,'');
            var totasfc = Ext.getCmp('asfcancel_total').getValue().toString().replace(/\$|\,/g,'');
            oriarf.data['totalPriceASF'] = parseFloat(oriarf.data['totalPriceASF']) + parseFloat(totasf);
            oriarf.data['totalPriceASFCancel'] = parseFloat(oriarf.data['totalPriceASFCancel']) + parseFloat(totasfc);
            storeASF.add(addToStoreAsf());
            storeCancel.add(addToStoreCancel());
            }

             else if (Ext.getCmp('asf_total').getValue() != '')
             {
                  var totasf = Ext.getCmp('asf_total').getValue().toString().replace(/\$|\,/g,'');
                oriarf.data['totalPriceASF'] = parseFloat(oriarf.data['totalPriceASF']) + parseFloat(totasf);

                 storeASF.add(addToStoreAsf());

             }
            else if (Ext.getCmp('asfcancel_total').getValue() != '')
             {
                 var totasfc = Ext.getCmp('asfcancel_total').getValue().toString().replace(/\$|\,/g,'');
                oriarf.data['totalPriceASFCancel'] = parseFloat(oriarf.data['totalPriceASFCancel']) + parseFloat(totasfc);
                 storeCancel.add(addToStoreCancel());


             }

        }
            if (storeASF != undefined)
    		 var oriasf = storeASF.getAt(storeASF.findExact('id', oriarf.data['id']));
            if (storeCancel != undefined)
             var oricancel = storeCancel.getAt(storeCancel.findExact('id',oriarf.data['id']));

            if (oriasf != undefined && oriasf.data['totalPrice'] != '')
            var totpriceasf = parseFloat(oriasf.data['totalPrice']);
            else
                var totpriceasf = 0;
            if (oricancel != undefined && oricancel.data['totalPrice'])
                var totpricecancel = parseFloat(oricancel.data['totalPrice']);
            else
                var totpricecancel = 0;

            var gabung = totpriceasf +  totpricecancel;

	   		 TEMPORARY = TEMPORARY + gabung;

            Ext.getCmp('arf-detail-grid').enable();
            Ext.getCmp('asf-cancel-grid').enable();
            Ext.getCmp('asf-grid').enable();
            Ext.getCmp('arf-detail-grid').getView().refresh();
            Ext.getCmp('asf-cancel-grid').getView().refresh();
            Ext.getCmp('asf-grid').getView().refresh();
//            Ext.getCmp('save-asf').disable();
//            Ext.getCmp('cancel-asf').disable();
            clearASFForm();

            Ext.getCmp('total_text').setValue(CommaFormatted(TEMPORARY));
            Ext.getCmp('total_cur').setValue(Ext.getCmp('val_kode_text').getValue());

//            Ext.getCmp('gtotal-text').setText('Sub Total :'+TEMPORARY.toString());
//    		Ext.getCmp('pajak-text').setText('Tax :'+pajak.toString());
//    		Ext.getCmp('gtotals-text').setText('Grand Total :'+grandtotal.toString());

    		oriarf = undefined;
    		oriasf = undefined;
            oricancel = undefined;



    }
}
}

function delList(idArf)
{
    Ext.MessageBox.confirm('Confirm', 'Are you sure want to delete this?', function(btn){
		if (btn== 'yes')
		{
            var b = storeASF.getAt(storeASF.findExact('id', idArf));
            var c = storeCancel.getAt(storeCancel.findExact('id', idArf));
            var a = storeARF.getAt(storeARF.findExact('id', idArf));

			if (b != undefined && c!= undefined)
			{


                    var totalPriceAsf = parseFloat(b.data['totalPrice']);
                    var totalPriceCancel = parseFloat(c.data['totalPrice']);
                    var newtotalPriceASF = parseFloat(a.data['totalPriceASF']);
                    var newtotalPriceASFCancel = parseFloat(a.data['totalPriceASFCancel']);

                    a.data['totalPriceASF'] =  newtotalPriceASF - totalPriceAsf;
                    a.data['totalPriceASFCancel'] =  newtotalPriceASFCancel - totalPriceCancel;
					storeASF.remove(b);
                    storeCancel.remove(c);
				    Ext.getCmp('arf-detail-grid').getView().refresh();
                    Ext.getCmp('asf-cancel-grid').getView().refresh();
				    Ext.getCmp('asf-grid').getView().refresh();

			}
            else if(b != undefined)
            {


                var totalPriceAsf = parseFloat(b.data['totalPrice']);
                var newtotalPriceASF = parseFloat(a.data['totalPriceASF']);

                 a.data['totalPriceASF'] =  newtotalPriceASF - totalPriceAsf;
                storeASF.remove(b);

				Ext.getCmp('arf-detail-grid').getView().refresh();
				Ext.getCmp('asf-grid').getView().refresh();

            }
            else if(c != undefined)
            {
                
                var totalPriceCancel = parseFloat(c.data['totalPrice']);
                var newtotalPriceASFCancel = parseFloat(a.data['totalPriceASFCancel']);

                 a.data['totalPriceASFCancel'] =  newtotalPriceASFCancel - totalPriceCancel;
                storeASFCancel.remove(c);

				Ext.getCmp('arf-detail-grid').getView().refresh();
				Ext.getCmp('asf-cancel-grid').getView().refresh();
            }
	

		}
	});
}

function editList(idArf)
{
    Ext.getCmp('save-asf').setText('Update to ASF List(Cart)');
    Ext.getCmp('cancel-asf').setText('Cancel Edit');

	var oriasf = storeASF.getAt(storeASF.findExact('id', idArf));
    var oricancel = storeCancel.getAt(storeCancel.findExact('id', idArf));
     oriarf = storeARF.getAt(storeARF.findExact('id',idArf));

    if (oriarf != undefined)
    {
        var valuta = oriarf.data['val_kode'];

		Ext.getCmp('arf-detail-grid').disable();
        Ext.getCmp('asf-cancel-grid').disable();
		Ext.getCmp('asf-grid').disable();

//		Ext.getCmp('cancel-asf').enable();

        Ext.getCmp('arf_no_text').setValue(oriarf.data['trano']);
        Ext.getCmp('tgl_arf_text').setValue(oriarf.data['tgl']);
        Ext.getCmp('prj_kode_text').setValue(oriarf.data['prj_kode']);
        Ext.getCmp('prj_nama_text').setValue(oriarf.data['prj_nama']);
        Ext.getCmp('sit_kode_text').setValue(oriarf.data['sit_kode']);
        Ext.getCmp('sit_nama_text').setValue(oriarf.data['sit_nama']);
//        Ext.getCmp('asf_qty').setValue(CommaFormatted(oriarf.data['qty']));
//        Ext.getCmp('asf_unit_price').setValue(CommaFormatted(oriarf.data['price']));

    if (oriasf != undefined && oricancel != undefined)
    {

        oriasf.data['status'] = 'edit';
        oricancel.data['status'] = 'edit';
        Ext.getCmp('asf_qty').setValue(CommaFormatted(oriasf.data['qty']));
        Ext.getCmp('asf_unit_price').setValue(CommaFormatted(oriasf.data['price']));
        Ext.getCmp('asf_total').setValue(CommaFormatted(oriasf.data['totalPrice']));
        Ext.getCmp('asfcancel_qty').setValue(CommaFormatted(oricancel.data['qty']));
        Ext.getCmp('asfcancel_unit_price').setValue(CommaFormatted(oricancel.data['price']));
        Ext.getCmp('asfcancel_total').setValue(CommaFormatted(oricancel.data['totalPrice']));

        Ext.getCmp('cfs_kode_text').setValue(oriasf.data['cfs_kode']);

        oriarf.data['totalPriceASF'] = parseFloat(oriarf.data['totalPriceASF']) - parseFloat(oriasf.data['totalPrice']);
        oriarf.data['totalPriceASFCancel'] = parseFloat(oriarf.data['totalPriceASFCancel']) - parseFloat(oricancel.data['totalPrice']);

    }
    else if (oriasf != undefined)
    {

        oriasf.data['status'] = 'edit';
        Ext.getCmp('asf_qty').setValue(CommaFormatted(oriasf.data['qty']));
        Ext.getCmp('asf_unit_price').setValue(CommaFormatted(oriasf.data['price']));
        Ext.getCmp('asf_total').setValue(CommaFormatted(oriasf.data['totalPrice']));

         Ext.getCmp('cfs_kode_text').setValue(oriasf.data['cfs_kode']);

        oriarf.data['totalPriceASF'] = parseFloat(oriarf.data['totalPriceASF'])- parseFloat(oriasf.data['totalPrice']);
    }
    else if (oricancel != undefined)
    {

        oricancel.data['status'] = 'edit';
        Ext.getCmp('asfcancel_qty').setValue(CommaFormatted(oricancel.data['qty']));
        Ext.getCmp('asfcancel_unit_price').setValue(CommaFormatted(oricancel.data['price']));
        Ext.getCmp('asfcancel_total').setValue(CommaFormatted(oricancel.data['totalPrice']));

         Ext.getCmp('cfs_kode_text').setValue(oricancel.data['cfs_kode']);
        
        oriarf.data['totalPriceASFCancel'] = parseFloat(oriarf.data['totalPriceASFCancel']) - parseFloat(oricancel.data['totalPrice']);
    }
        var totalPriceArf = parseFloat(oriarf.data['totalPrice']);
        var totalPriceAsf = parseFloat(oriarf.data['totalPriceASF']);
        var totalPriceAsfCancel = parseFloat(oriarf.data['totalPriceASFCancel']);


        var totalPriceInAsf = totalPriceAsf + totalPriceAsfCancel;
        var balanceTotal = totalPriceArf - totalPriceInAsf;

        Ext.getCmp('total_arf_text').setValue(CommaFormatted(totalPriceArf));
        Ext.getCmp('total_asf_text').setValue(CommaFormatted(totalPriceInAsf));
        Ext.getCmp('total_balance_text').setValue(CommaFormatted(balanceTotal));
        Ext.getCmp('total_arf_cur').setValue(valuta);
        Ext.getCmp('total_asf_cur').setValue(valuta);
        Ext.getCmp('total_balance_cur').setValue(valuta);
        Ext.getCmp('asf_uom').setValue(oriarf.data['uom']);
        Ext.getCmp('asf_cur').setValue(valuta);
        Ext.getCmp('asf_total_cur').setValue(valuta);
        Ext.getCmp('asfcancel_uom').setValue(oriarf.data['uom']);
        Ext.getCmp('asfcancel_total_cur').setValue(valuta);
        Ext.getCmp('asfcancel_cur').setValue(valuta);

             if (storeASF != undefined)
    		 var oriasf = storeASF.getAt(storeASF.findExact('id', oriarf.data['id']));
            if (storeCancel != undefined)
             var oricancel = storeCancel.getAt(storeCancel.findExact('id',oriarf.data['id']));

            if (oriasf != undefined && oriasf.data['totalPrice'] != '')
            var totpriceasf = parseFloat(oriasf.data['totalPrice']);
            else
                var totpriceasf = 0;
            if (oricancel != undefined && oricancel.data['totalPrice'])
                var totpricecancel = parseFloat(oricancel.data['totalPrice']);
            else
                var totpricecancel = 0;

            var gabung = totpriceasf +  totpricecancel;

	   		 TEMPORARY = TEMPORARY - gabung;
    }
}

function init()
{
    var tgl_sekarang = new Date();
//    Ext.getCmp('tgl_asf_text').setValue(tgl_sekarang.format('Y-m-d'));
    Ext.getCmp('val_kode_text').setValue('IDR');
    Ext.getCmp('pic_kode_text').setValue('<?php echo $this->uid; ?>');
    Ext.getCmp('pic_nama_text').setValue('<?php echo $this->nama; ?>');
//    Ext.getCmp('fin_kode_text').setValue('<?php echo $this->uid; ?>');
//    Ext.getCmp('fin_nama_text').setValue('<?php echo $this->nama; ?>');
    
//    var a = '<?php echo $this->uid; ?>';
//    var b = '<?php echo $this->nama; ?>';
}

//function showArfList()
//{
//    var columns = [ {header:'Trano',width:120,sortable:true,dataIndex:'trano'},
//                    {header:'Project ID',width:80,sortable:true,dataIndex:'prj_kode'},
//                    {header:'Project Name',width:150,sortable:true,dataIndex:'prj_nama'},
//                    {header:'Site Code',width:55,sortable:true,dataIndex:'sit_kode'},
//                    {header:'Site Name',width:120,sortable:true,dataIndex:'sit_nama'},
//                    {header:'Currency',width:50,sortable:true,dataIndex:'val_kode'},
//                    {header:'Work ID',width:65,sortable:true,dataIndex:'workid'},
//                    {header:'Work Name',width:150,sortable:true,dataIndex:'workname'},
//                    {header:'Product ID',width:80,sortable:true,dataIndex:'kode_brg'},
//                    {header:'Product Name',width:150,sortable:true,dataIndex:'nama_brg'}
//                ];
//
//    var store = new Ext.ux.data.PagingJsonStore({
//        idProperty: 'id',
//        totalProperty: 'count',
//        root : 'posts',
//        fields: [
//			{name: 'id'},
//			{name: 'trano'},
//			{name: 'prj_kode'},
//			{name: 'sit_kode'},
//			{name: 'prj_nama'},
//			{name: 'sit_nama'},
//            {name: 'val_kode'},
//            {name: 'workid'},
//            {name: 'workname'},
//            {name: 'kode_brg'},
//            {name: 'nama_brg'}
//          ],
//        autoLoad: {params: {start: 0, limit: 50}},
//        url: '/pool_arf.json'
//    });
//	store.load();
//
//    yAxis=100;
//    grids = function()
//    {
//        grids.superclass.constructor.call(this, {
//        store: store,
//        columns: columns,
//        x:0,
//        y:yAxis,
//        id:'pr_grid',
//        loadMask: true,
//        bbar:[ new Ext.PagingToolbar({
//            pageSize: 50,
//            store: store,
//            displayInfo: true,
//            displayMsg: 'Displaying data {0} - {1} of {2}',
//            emptyMsg: "No data to display"
//        })],
//        width:380,
//        height:250,
//        listeners: {
//            'rowdblclick': function(g, rowIndex, e){
//                            closeForm = false;
//                            isDblClick = true;
//                            objectName = 'trano';
//                            txtBoxChange = 'trano_text';
//                            closeForm = true;
//                            formId = 'a-form-panel-trano_button';
//                            prox = 'trano_proxy';
//                            gri = 'trano_grid';
//                            var trano = g.getStore().getAt(rowIndex).get(objectName);
//
//                            Ext.Ajax.request({
//                                results: 0,
//                                url: '/default/home/getarfsummary/data/'+trano,
//                                method:'POST',
//                                success: function(result, request){
//                                   var returnData = Ext.util.JSON.decode(result.responseText);
//
//                                   Ext.each(returnData.posts, function(op) {
//
//                                      var c = new arflist({
//                                          	trano : op['trano'],
//                                            tgl : op['tgl'],
//                                          	urut: op['urut'],
//                                      		prj_kode: op['prj_kode'],
//                                       		prj_nama: op['prj_nama'],
//                                       		sit_kode: op['sit_kode'],
//                                       		sit_nama: op['sit_nama'],
//                                       		workid: op['workid'],
//           			     					workname: op['workname'],
//                                        	kode_brg: op['kode_brg'],
//                                        	nama_brg: op['nama_brg'],
//           		            				qty: op['qty'],
//                                            uom: op['uom'],
//                                            price: op['harga'],
//                                            totalPrice: op['total'],
//                                            ket: op['ket'],
//                                            petugas: op['petugas'],
//                                            val_kode: op['val_kode'],
//                                            rateidr: op['rateidr'],
//                                            totalASF: op['totalASF'],
//                                            totalPriceASF: op['totalPriceASF'],
//                                            totalASFCancel: op['totalASFCancel'],
//                                            totalPriceASFCancel: op['totalPriceASFCancel'],
//                                            totalPriceInArfh: op['totalInArfh'],
//
//                   		            	    id: getNewID()
//
//                                      });
//                                      storeARF.add(c);
////                                      console.log(c);
//
//                                   });
//                                   Ext.getCmp('arf-detail-grid').getView().refresh();
////                                    Ext.getCmp('paging-arfGrid').doRefresh();
//
//                            }
//                            });
//
//                            window.setTimeout(function(){
//                                    isDblClick = false;
//                            }, 0);
//                    }
//            }
//    });
//        Ext.override(Ext.PagingToolbar, {
//            doRefresh: function(){
//                store.clearFilter();
//                delete this.store.lastParams;
//                this.doLoad(this.cursor);
//            }
//            });
//    }
//
//    Ext.extend(grids, Ext.grid.GridPanel);
//    Ext.extend(txtboks,Ext.form.TextField);//PR
//    searchTrano = function(field,e){
//
//        var docs = field.getValue();
//        store.clearFilter();
//        store.filterBy(function(record,id){
//           reg = new RegExp(docs, "gi");
//            if(reg.test(record.data['trano']))
//            {
//                return true;
//            }
//        });
//        Ext.getCmp('pr_grid').getStore().reload();
//        Ext.getCmp('pr_grid').getView().refresh();
//    }
//    searchPrj_kode = function(field,e){
//
//        var docs = field.getValue();
//        store.clearFilter();
//        store.filterBy(function(record,id){
//           reg = new RegExp(docs, "gi");
//            if(reg.test(record.data['prj_kode']))
//            {
//                return true;
//            }
//        });
//        Ext.getCmp('pr_grid').getStore().reload();
//        Ext.getCmp('pr_grid').getView().refresh();
//}
//    searchSit_nama = function(field,e){
//
//        var docs = field.getValue();
//        store.clearFilter();
//        store.filterBy(function(record,id){
//           reg = new RegExp(docs, "gi");
//            if(reg.test(record.data['sit_nama']))
//            {
//                return true;
//            }
//        });
//        Ext.getCmp('pr_grid').getStore().reload();
//        Ext.getCmp('pr_grid').getView().refresh();
//}
//
//    var aForm =  new Ext.Window({
//    id: 'a-form-panel-trano_button',
//    layout: 'absolute',
//    minWidth: 300,
//    minHeight: 200,
//    width: 400,
//    height: 400,
//    stateful: false,
//    modal : true,
//    resizeable : false,
//    items : [
//        {
//        x: 6,
//        y: 12,
//        xtype: 'label',
//        text: 'No Trans'
//        },
//       new txtboks(80,10,80,'trans_no',searchTrano),
//       {
//           x : 6,
//           y: 52,
//           xtype: 'label',
//           text: 'Project Code'
//           },
//          new txtboks(80,50,80,'prj_kode',searchPrj_kode),
//       {
//             x: 165,
//             y: 52,
//        	xtype: 'label',
//            text: 'Site Name'
//              },
//             new txtboks(240,50,80,'sit_nama',searchSit_nama),
//         {
//        x: 384,
//        y: 12,
//        xtype: 'label',
//        text: ''
//        }
//        ,new grids('pr_list')
//    ]
//
//  });
//  aForm.title = 'Choose No Trans';
//  aForm.show();
//
//
//}

userForm = new Ext.extend(Ext.form.FormPanel,{
	id : 'user-forms',
    iconCls: 'silk-user',
    title: 'Create New ASF',
    frame: true,
    width: 650,
    labelAlign: 'left',
   
initComponent : function() {
    this.items = this.buildForm();
//    getExchangeRate();
    this.buttons = this.buildUI();
    this.addEvents({
        create : true
    });
    userForm.superclass.initComponent.call(this);
},
buildForm : function() {
    return [
     {
         layout : 'column',
         items:[
             {
                 columnWidth:.4,
                 layout :'form',
                 items:[

//                     {
//                         fieldLabel:'Date',
//                         id:'tgl_asf_text',
//                         name: 'tgl_po',
//                         allowBlank: false,
//                         xtype: 'datefield',
//                         format : ('d-m-Y')
//
//                     }
              {
                fieldLabel : 'Requester',
                id : 'req_kode_text',
                xtype: 'textfield',
                allowBlank: false,

                width: 150
            }

                 ]
             }

                  ]
             },
             { layout: 'column',
                 items:[

 						  {
 							  columnWidth : .25,
 							  layout: 'form',
 							  items:[
						            {xtype:'trigger',fieldLabel: 'Manager name',id:'mgr_kode_text',name: 'mgr_kode', triggerClass: 'teropong',
		                            onTriggerClick: function( ){
						            	showManagerList();
									},
		                            editable: false,
									allowBlank: false,
									width: 55
									},
//									{fieldLabel: 'PIC Name',id:'pic_kode_text',name: 'pic_kode', xtype: 'trigger',triggerClass: 'teropong',
//									onTriggerClick: function(){
//										showSitList();
//
//									},
//
//										allowBlank: true,
//										width: 100
//					                },
  					               {fieldLabel: 'currency',id:'val_kode_text',name: 'val_kode', xtype: 'trigger',triggerClass: 'teropong',
 	 									onTriggerClick: function(){
 	 										valutaPopUphandler();
 	 								
 	 									},

 	 										allowBlank: false,
 	 										width: 55
 	 					                }

 					                             
 							]},
 							{columnWidth: .3,
 							layout : 'form',		
 							items :[								
							{id:'mgr_nama_text', name: 'mgr_nama', xtype: 'textfield', readOnly: true,hideLabel: true, width: 150 },
// 							{id:'pic_nama_text',name: 'pic_nama', xtype: 'textfield', readOnly: true,hideLabel: true },
// 							{id:'val_nama_text',name: 'val_nama', xtype: 'textfield', readOnly: true,hideLabel: true },
 														
 							]},
 	]}, {
        layout : 'column',
        items:[
            {
                columnWidth:.8,
                layout :'form',
                items:[
                        {
								            layout:'column',
								            items:[
								                   {
									                columnWidth:.31,
								                    layout: 'form',
								                	items: [{
															    fieldLabel : 'PIC Name',
															    id : 'pic_kode_text',
															    xtype: 'textfield',
															    disabled: true,

															    width: 40
													    	}
											    			]
								                   },
								                   {
										                columnWidth:.49,
									                    layout: 'form',
									                	items: [{
																    id : 'pic_nama_text',
																    xtype: 'textfield',
																    hideLabel: true,
																    disabled: true,
																    width: 150
														    	}
												    			]
									                   }
												]
							    		},
                        {
								            layout:'column',
								            items:[
								                   {
									                columnWidth:.31,
								                    layout: 'form',
								                	items: [{
															    fieldLabel : 'Finance Receiving Name',
															    id : 'fin_kode_text',
                                                                xtype: 'trigger',
															    triggerClass: 'teropong',
		                                                        onTriggerClick: function( ){
						            	                            showUserList();
                                                                        },
                                                                        editable: false,
                                                                        allowBlank: false,
                                                                        width: 55
                                       
													    	}
											    			]
								                   },
								                   {
										                columnWidth:.49,
									                    layout: 'form',
									                	items: [{
																    id : 'fin_nama_text',
																    xtype: 'textfield',
																    hideLabel: true,
																    disabled: true,
																    width: 150
														    	}
												    			]
									                   }
												]
							    		},
					{
				    fieldLabel : 'Remark',
				    id:'ket_text',
				    name:'keterangan',
				    xtype:'textfield',
                                     allowBlank: false
					},

//					{
//						fieldLabel : 'Total',
//						id:'total_text',
//						name:'total',
//						xtype:'textfield',
//                        disabled: true
//					},
                        {
                                 layout:'column',
                                 items:[
                                     {
                                         columnWidth:.42,
                                         layout: 'form',
                                         items: [{

                                         fieldLabel: 'Total',
                                         id: 'total_text',
                                         disabled:true,
                                         xtype:'textfield',
                                         style:"text-align:right",
                                         width: 100
                                         }]
                                 },{
                                     columnWidth:.2,
                                     layout: 'form',
                                     items: [{
                                             id: 'total_cur',
                                             xtype:'textfield',
                                             hideLabel: true,
                                             width: 30,
                                             disabled:true
                                             }]
                                 }
                             ]


                      }
                ]
            }
            ]}
 
 ];
 },
  buildUI: function(){
    return [

    {
        text: 'Search ARF',
        icon:"/images/g_rec_src.png",
        handler: function(){ showArfList();}
        
    }, {
        text: 'Reset',
        handler: function(btn, ev){
        
    		this.getForm().reset();
            init();
        },
        scope: this
    }];
}
});

userForm2 = new Ext.extend(Ext.form.FormPanel,{

    renderTo: 'user-form2',
    id: 'asf-form',
    iconCls: 'silk-user',
    labelAlign: 'right',
    title: 'Detail Advance Settlement Form (ASF)',
    frame: true,
    width: 750,
    labelAlign: 'left',
    style: 'margin-top: 10px',
    initComponent : function() {
        this.items = this.buildForm();
        this.buttons = this.buildUI();
        this.addEvents({
            create : true
        });
        userForm2.superclass.initComponent.call(this);
    }
    ,
    buildForm : function() {
        return [
            {
            layout:'column',
            items:[
                   {columnWidth:.55,
                    layout: 'form',
                	items: [{
                                fieldLabel : 'ARF Number',
                                id : 'arf_no_text',
                                xtype: 'textfield',
                                readOnly : true,
                                width : 100
                                },

                                {
                                fieldLabel : 'ARF Date',
                                id : 'tgl_arf_text',
                                xtype: 'textfield',
                                disabled : true,
                                width : 75
                                },{
								            layout:'column',
								            items:[
								                   {
									                columnWidth:.43,
								                    layout: 'form',
								                	items: [{
															    fieldLabel : 'Project Code',
															    id : 'prj_kode_text',
															    xtype: 'textfield',
															    disabled: true,
                                                        
															    width: 65
													    	}
											    			]
								                   },
								                   {
										                columnWidth:.49,
									                    layout: 'form',
									                	items: [{
																    id : 'prj_nama_text',
																    xtype: 'textfield',
																    hideLabel: true,
																    disabled: true,
																    width: 180
														    	}
												    			]
									                   }
												]
							    		},
                	        
                                {
								            layout:'column',
								            items:[
								                   {
									                columnWidth:.43,
								                    layout: 'form',
								                	items: [{
															    fieldLabel : 'Site Code',
															    id : 'sit_kode_text',
															    xtype: 'textfield',
															    disabled: true,
															    width: 65
													    	}
											    			]
								                   },
								                   {
										                columnWidth:.49,
									                    layout: 'form',
									                	items: [{
																    id : 'sit_nama_text',
																    xtype: 'textfield',
																    hideLabel: true,
																    disabled: true,
																    width: 180
														    	}
												    			]
									                   }
												]
							    		},
                                {
                                    fieldLabel : 'CFS Kode',
                                    id : 'cfs_kode_text',
                                    xtype: 'textfield',
//                                    disabled : true,
                                    width : 65
                                }

                                ]
                   },
                   {    columnWidth:.4,
                       layout: 'form',

                   	items: [ {
                                    xtype:'fieldset',
                                    title: 'Balance',
                                    id : 'Balance-fieldset',
                                    autoHeight : true,
                                    layout: 'form',
                                    labelWidth : 110,
                                    items : [
                                 {
                                      layout:'column',
								            items:[
                                                {
                                                    columnWidth:.8,
								                    layout: 'form',
								                	items: [{

                                                            fieldLabel: 'Total ARF',
                                                            id: 'total_arf_text',
                                                            xtype:'textfield',
                                                             style:"text-align:right",
                                                            width: 100,
                                                            disabled:true
                                                            }]
                                                },{
                                                    columnWidth:.2,
								                    layout: 'form',
								                	items: [{
                                                            id: 'total_arf_cur',
                                                            xtype:'textfield',
                                                            hideLabel: true,
                                                            width: 30,
                                                            disabled:true
                                                            }]
                                                }
                                            ]
                                 }, {
                                    layout:'column',
								            items:[
                                                {
                                                    columnWidth:.8,
								                    layout: 'form',
								                	items: [{
                                                            fieldLabel: 'Total ASF',
                                                            id: 'total_asf_text',
                                                            xtype:'textfield',
                                                            style:"text-align:right",
                                                            width: 100,
                                                            disabled:true
                                                            }]
                                                },{
                                                    columnWidth:.2,
								                    layout: 'form',
								                	items: [{
                                                            id: 'total_asf_cur',
                                                            xtype:'textfield',
                                                            hideLabel: true,
                                                            width: 30,
                                                            disabled:true
                                                            }]
                                                }
                                            ]
                                 },
                                 {
                                     layout:'column',
                                            items:[
                                                {
                                                    columnWidth:.8,
                                                    layout: 'form',
                                                    items: [{

                                                             fieldLabel: 'Balance',
                                                             id: 'total_balance_text',
                                                             style:"text-align:right",
                                                             disabled:true,
                                                             xtype:'textfield',
                                                             width: 100
                                                            }]
                                                },{
                                                    columnWidth:.2,
								                    layout: 'form',
								                	items: [{
                                                            id: 'total_balance_cur',
                                                            xtype:'textfield',
                                                            hideLabel: true,
                                                            width: 30,
                                                            disabled:true
                                                            }]
                                                }
                                            ]

                                  }

                               ]
                       }

				       ]
                   }
              ]
            },
        {
            layout:'column',
            items:[
                {    columnWidth:.55,
                   layout: 'form',

                   items: [ {
                                xtype:'fieldset',
                                title: 'Expense Claim',
                                id : 'ASF-fieldset',
                                autoHeight : true,
                                layout: 'form',
                                labelWidth : 110,
                                width : 300,
                     
                                items : [
                             {
                                     layout:'column',
                                            items:[
                                                {
                                                    columnWidth:.65,
                                                    layout: 'form',
                                                    items: [{


                                                fieldLabel: 'Qty',
                                                id: 'asf_qty',
                                                xtype:'textfield',
                                                width: 60,
                                                style:"text-align:right",
                                                enableKeyEvents: true,
                                                listeners:{
                                                    'blur': function(t) {
                                                        if (!isNaN(t.getValue()))
                                                        {
                                                            t.setValue(CommaFormatted(t.getValue()));
                                                        }
                                                    },
                                                    'focus': function(t) {
                                                        if (t.getValue().search(",")>0)
                                                           t.setValue(t.getValue().toString().replace(/\$|\,/g,''));
                                                    },
                                                    'keyup' : function (t,e) {
                                                        if (!isNaN(t.getValue()))
                                                        {
                                                            hitungTotalAsf();
//                                                            cekTotal();


                                                        }
                                                    }
                                                }
                                                }]
                                                },{
                                                    columnWidth:.2,
								                    layout: 'form',
								                	items: [{
                                                            id: 'asf_uom',
                                                            xtype:'textfield',
                                                            hideLabel: true,
                                                            width: 30,
                                                            disabled:true
                                                            }]
                                                }
                                            ]


                             }, {

                                     layout:'column',
                                            items:[
                                                {
                                                    columnWidth:.79,
                                                    layout: 'form',
                                                    items: [{


                                                    fieldLabel: 'Price',
                                                    id: 'asf_unit_price',
                                                    xtype:'textfield',
                                                    width: 100,
                                                    style:"text-align:right",
                                                    enableKeyEvents: true,
                                                    listeners:{
                                                        'blur': function(t) {
                                                            if (!isNaN(t.getValue()))
                                                            {
                                                                t.setValue(CommaFormatted(t.getValue()));
                                                            }
                                                        },
                                                        'focus': function(t) {
                                                            if (t.getValue().search(",")>0)
                                                               t.setValue(t.getValue().toString().replace(/\$|\,/g,''));
                                                        },
                                                        'keyup' : function (t,e) {
                                                            if (!isNaN(t.getValue()))
                                                            {
                                                                 hitungTotalAsf();
//                                                                 cekTotal();

                                                            }
                                                        }
                                                    }
                                                }]
                                                },{
                                                    columnWidth:.2,
								                    layout: 'form',
								                	items: [{
                                                            id: 'asf_cur',
                                                            xtype:'textfield',
                                                            hideLabel: true,
                                                            width: 30,
                                                            disabled:true
                                                            }]
                                                }
                                            ]

                             },
                             {
                                 layout:'column',
                                            items:[
                                                {
                                                    columnWidth:.79,
                                                    layout: 'form',
                                                    items: [{
                                                     fieldLabel: 'Total',
                                                     id: 'asf_total',

                                                     xtype:'textfield',
                                                     style:"text-align:right",
                                                     width: 100,
                                                     disabled : true
                                                     }]
                                                },{
                                                    columnWidth:.2,
								                    layout: 'form',
								                	items: [{
                                                            id: 'asf_total_cur',
                                                            xtype:'textfield',
                                                            hideLabel: true,
                                                            width: 30,
                                                            disabled:true
                                                            }]
                                                }
                                            ]

                              }

                           ]
                   }

                ]},
             {    columnWidth:.4,
                   layout: 'form',

                   items: [ {
                                xtype:'fieldset',
                                title: 'Amount Due To Company',
                                id : 'ASF-cancel-fieldset',
                                autoHeight : true,
                                layout: 'form',
                                labelWidth : 110,
                                autoWidth : true,
                                items : [
                             {
                                 layout:'column',
                                            items:[
                                                {
                                                    columnWidth:.66,
                                                    layout: 'form',
                                                    items: [{


                                                        fieldLabel: 'Qty',
                                                        id: 'asfcancel_qty',
                                                        xtype:'textfield',
                                                        width: 60,
                                                        style:"text-align:right",
                                                        enableKeyEvents: true,
                                                        listeners:{
                                                            'blur': function(t) {
                                                                if (!isNaN(t.getValue()))
                                                                {
                                                                    t.setValue(CommaFormatted(t.getValue()));
                                                                }
                                                            },
                                                            'focus': function(t) {
                                                                if (t.getValue().search(",")>0)
                                                                   t.setValue(t.getValue().toString().replace(/\$|\,/g,''));
                                                            },
                                                            'keyup' : function (t,e) {
                                                                if (!isNaN(t.getValue()))
                                                                {
                                                                    hitungTotalCancel();
//                                                                     cekTotal();

                                                                }
                                                            }
                                                        }
                                                    }]
                                                },{
                                                    columnWidth:.2,
								                    layout: 'form',
								                	items: [{
                                                            id: 'asfcancel_uom',
                                                            xtype:'textfield',
                                                            hideLabel: true,
                                                            width: 30,
                                                            disabled:true
                                                            }]
                                                }
                                            ]

                             }, {
                                        layout:'column',
                                                items:[
                                                    {
                                                        columnWidth:.8,
                                                        layout: 'form',
                                                        items: [{

                                                        fieldLabel: 'Price',
                                                        id: 'asfcancel_unit_price',
                                                        xtype:'textfield',
                                                        width: 100,
                                                        style:"text-align:right",
                                                        enableKeyEvents: true,
                                                        listeners:{
                                                            'blur': function(t) {
                                                                if (!isNaN(t.getValue()))
                                                                {
                                                                    t.setValue(CommaFormatted(t.getValue()));
                                                                }
                                                            },
                                                            'focus': function(t) {
                                                                if (t.getValue().search(",")>0)
                                                                   t.setValue(t.getValue().toString().replace(/\$|\,/g,''));
                                                            },
                                                            'keyup' : function (t,e) {
                                                                if (!isNaN(t.getValue()))
                                                                {
                                                                    hitungTotalCancel();
//                                                                    cekTotal();
                                                                    
                                                                }
                                                            }
                                                        }
                                                     }]
                                                },{
                                                    columnWidth:.2,
								                    layout: 'form',
								                	items: [{
                                                            id: 'asfcancel_cur',
                                                            xtype:'textfield',
                                                            hideLabel: true,
                                                            width: 30,
                                                            disabled:true
                                                            }]
                                                }
                                            ]   

                             },
                             {
                                 layout:'column',
                                 items:[
                                     {
                                         columnWidth:.8,
                                         layout: 'form',
                                         items: [{

                                         fieldLabel: 'Total',
                                         id: 'asfcancel_total',
                                         disabled:true,
                                         xtype:'textfield',
                                         style:"text-align:right",
                                         width: 100
                                         }]
                                 },{
                                     columnWidth:.2,
                                     layout: 'form',
                                     items: [{
                                             id: 'asfcancel_total_cur',
                                             xtype:'textfield',
                                             hideLabel: true,
                                             width: 30,
                                             disabled:true
                                             }]
                                 }
                             ]


                              }

                           ]
                   }

                ]}


            ]
        }



     ];
     },
      buildUI: function(){
        return [

        {
             text: 'Add to List(Cart)',
             id: 'save-asf',
//             disabled:true,
             iconCls: 'icon-add',
             handler: function(){
                 //var rec = Ext.getCmp('pr-detail-grid').getSelectionModel().getSelections();
                 //insertPOtoList(rec[0].data['id']);
                 insertToList();
             }

        },{
             text: 'Cancel Add',
             id: 'cancel-asf',
//             disabled:true,
             iconCls: 'icon-cancel',
             handler: function(){
                    clearASFForm();
                    Ext.getCmp('arf-detail-grid').enable();
                    Ext.getCmp('asf-cancel-grid').enable();
                    Ext.getCmp('asf-grid').enable();
                    Ext.getCmp('arf-detail-grid').getView().refresh();
                    Ext.getCmp('asf-cancel-grid').getView().refresh();
                    Ext.getCmp('asf-grid').getView().refresh();
//                    Ext.getCmp('save-asf').disable();
//                    Ext.getCmp('cancel-asf').disable();

                    oripr = undefined;
			        oripo = undefined;

             }, scope: this
       }
   ];
    }
 });

arfGrid = Ext.extend(Ext.grid.GridPanel, {
    id:'arf-detail-grid',
    title:'ARF Detail',
    iconCls: 'silk-grid',
    frame: true,
    height: 450,
    style: 'margin-top: 10px',
    trackMouseOver: true,
    

    initComponent : function() {
        arfGrid.superclass.initComponent.call(this);
    }

});

cancelGrid = Ext.extend(Ext.grid.GridPanel, {
    id:'asf-cancel-grid',
    title:'Amount Due To Company Cart',
    iconCls: 'silk-grid',
    frame: true,
    height: 450,
    style: 'margin-top: 10px',
    trackMouseOver: true,

    initComponent : function() {
		cancelGrid.superclass.initComponent.call(this);
    }

});

asfGrid = Ext.extend(Ext.grid.GridPanel, {
    id:'asf-grid',
    title:'Expense Claim Cart',
    iconCls: 'silk-grid',
    frame: true,
    height: 450,
    style: 'margin-top: 10px',
    trackMouseOver: true,

    initComponent : function() {
        asfGrid.superclass.initComponent.call(this);
    }

});

Ext.onReady(function() {
    Ext.QuickTips.init();

    /*
     * bypass upload old
     * @type Ext.ux.uploadFile
    var uploadFile = new Ext.ux.uploadFile({
        renderTo: 'upload-file',
        title: 'Upload Document',
        width: 500,
        frame: true
    });*/

var userForms = new userForm ({
	renderTo : 'user-form'
		
});


var userForms2 = new userForm2({
    renderTo: 'user-form2'
});

var arfGrids = new arfGrid({
    renderTo: 'user-grid',
    store: storeARF,
    columns : userColumns,
    width: 700,
    height : 300,
    bbar: new Ext.PagingToolbar({
    id: 'paging-arfGrid',
    pageSize: 100,
    store: storeARF,
    displayInfo: true,
    displayMsg: 'Displaying data {0} - {1} of {2}',
    emptyMsg: "No data to display"
    })
});

var cancelGrids = new cancelGrid({
    renderTo: 'user-grid2',
    store: storeCancel,
    columns : userColumns2,
    width: 700,
    height : 300,
    bbar: new Ext.PagingToolbar({
    id: 'paging-cancelGrid',
    pageSize: 100,
    store: storeCancel,
    displayInfo: true,
    displayMsg: 'Displaying data {0} - {1} of {2}',
    emptyMsg: "No data to display"
    })
});

var asfGrids = new asfGrid({
    renderTo: 'user-grid3',
    store: storeASF,
    columns : userColumns3,
    width: 700,
    height: 300,
    bbar: ['->',{
             xtype: 'button',
	         text: 'Save ASF List(Cart)',
	         id : 'save-list',
	         iconCls: 'icon-save',
	         disabled : true,
	         handler: function()
	         {
                 if (!Ext.getCmp('user-forms').getForm().isValid())
                 {
                     Ext.MessageBox.show({
	    		           title: 'Error',
	    		           msg: 'Please Fill Blank Field!',
	    		           buttons: Ext.MessageBox.OK,
	    		           icon: Ext.MessageBox.ERROR
	    		       });
                     return false;
                 }

                var json = '';
                var json2 = '';
                var parameter = '';

                Ext.getCmp('asf-grid').getStore().each(function(store){

                json += Ext.util.JSON.encode(store.data) + ',';
                });

            	json = '[' + json.substring(0, json.length - 1) + ']'; //JSON format fix

                Ext.getCmp('asf-cancel-grid').getStore().each(function(store){

                json2 += Ext.util.JSON.encode(store.data) + ',';
                });
                json2 = '[' + json2.substring(0, json2.length - 1) + ']'; //JSON format fix

//                console.log(json);
                if (storeASF.getAt(0)!= undefined)
                    var p = storeASF.getAt(0);
//               if (storeCancel.getAt(0) != undefined)
                 else
                    var p = storeCancel.getAt(0);

                 if (p == undefined || p == '')
                 {
                      Ext.MessageBox.show({
	    		           title: 'Error',
	    		           msg: 'Cart is Empty!',
	    		           buttons: Ext.MessageBox.OK,
	    		           icon: Ext.MessageBox.ERROR
	    		       });
                     return false;
                 }
             
            	//Get add. Data
            	var prjKode = p.data['prj_kode'];
            	var sitKode = p.data['sit_kode'];
            	var prjNama = p.data['prj_nama'];
            	var sitNama = p.data['sit_nama'];
            	var ket = Ext.getCmp('ket_text').getValue();
            	var petugas= Ext.getCmp('mgr_kode_text').getValue();
//            	var tglASF = p.data['tgl_asf'];
                var tglARF = p.data['tgl_arf'];
                 var noARF = p.data['arf_no'];
                var pic = Ext.getCmp('pic_kode_text').getValue();
				var finance = Ext.getCmp('fin_kode_text').getValue();
                var valKode = Ext.getCmp('val_kode_text').getValue();
                var rateIdr = p.data['rateidr'];
                 var totalArfH = Ext.getCmp('total_text').getValue().toString().replace(/\$|\,/g,'');
                 var requester = Ext.getCmp('req_kode_text').getValue();

            	parameter = '[{"prj_kode":"' + prjKode + '","prj_nama":"' + prjNama + '", "sit_kode":"' + sitKode + '", "sit_nama":"' + sitNama + '","ket":"' + ket + '","tgl_arf":"' + tglARF + '","petugas":"' + petugas + '","pic":"' + pic + '", "finance":"' + finance + '", "val_kode":"' + valKode + '", "rateidr":"' + rateIdr + '","totalarfh":"' + totalArfH + '","requester":"' + requester + '","arf_no":"' + noARF + '" }]';
                 var filedata = '';
                        storeFile.each(function(store) {
                            filedata += Ext.util.JSON.encode(store.data) + ',';
                        });

                        filedata = '[' + filedata.substring(0, filedata.length - 1) + ']';
            	params = {posts:json, etc:parameter, posts2:json2, filedata: filedata};
            	myPanel = Ext.getCmp('abs-budget-panel'); //Load the panel
        	    myPanel.body.load({
        	        url: '/procurement/procurement/appasf', //the url
        	        scripts : true,
        	        params: params //our params goes here
                });
	         },
	         scope: this
        	}
                ,
                {
                xtype: 'button',
	         text: 'Cancel ASF List(Cart)',
	         id : 'cancel-list',
	         disabled : true,
	         iconCls: 'icon-cancel',
	         handler:showAddASF
	         ,
	         scope: this
        	}
      ]
    });



init();
<?php
    if ($this->ARFtrano != '')
    {
?>
     Ext.Ajax.request({
                            results: 0,
                            url: '/default/home/getarfsummary/data/<?php echo $this->ARFtrano; ?>',
                            method:'POST',
                                success: function(result, request){
                                   var returnData = Ext.util.JSON.decode(result.responseText);

                                   Ext.each(returnData.posts, function(op) {

                                      var c = new arflist({
                                          	trano : op['trano'],
                                            tgl : op['tgl'],
                                          	urut: op['urut'],
                                      		prj_kode: op['prj_kode'],
                                       		prj_nama: op['prj_nama'],
                                       		sit_kode: op['sit_kode'],
                                       		sit_nama: op['sit_nama'],
                                       		workid: op['workid'],
           			     					workname: op['workname'],
                                        	kode_brg: op['kode_brg'],
                                        	nama_brg: op['nama_brg'],
           		            				qty: op['qty'],
                                            uom: op['uom'],
                                            price: op['harga'],
                                            totalPrice: op['total'],
                                            ket: op['ket'],
                                            petugas: op['petugas'],
                                            val_kode: op['val_kode'],
                                            rateidr: op['rateidr'],
                                            totalASF: op['totalASF'],
                                            totalPriceASF: op['totalPriceASF'],
                                            totalASFCancel: op['totalASFCancel'],
                                            totalPriceASFCancel: op['totalPriceASFCancel'],
                                            totalPriceInArfh: op['totalInArfh'],

                   		            	    id: getNewID()

                                      });
                                      storeARF.add(c);

                               });
                               Ext.getCmp('arf-detail-grid').getView().refresh();
                        }
                        });

<?php
    }
?>

//var mainPanel = new Ext.Panel({
//	renderTo : 'my-panel',
//	id : 'myPanel',
//	width : 700,
//	items : [ arfGrids, cancelGrids ]
//});

var fileColumns = [
            new Ext.grid.RowNumberer(),
            {header: "File Name", width: 130, dataIndex: 'filename'},
            {header: 'Action', width: 40, sortable: true, css: 'text-align:center;', renderer: function(v, p, r) {
                    return '<a href="#" onclick="window.open(\'/default/file/download/path/files/filename/' + r.data['savename'] + '\',\'mywin\',\'left=20,top=20,width=100,height=20,toolbar=0,resizable=0\');"><img src="/images/icons/fam/page_find.gif"></a>&nbsp;<a href="#" onclick="deleteFile();"><img src="/images/g_rec_del.png"></a>';
                }}
        ];
        
    
var gridattach = new Ext.grid.GridPanel({
            id: 'files-grid',
            iconCls: 'silk-grid',
            height: 100,
            store: storeFile,
            trackMouseOver: true,
            width: 490,
            view: new Ext.grid.GridView({
                forceFit: true
            }),
            columns: fileColumns
        })    
    
var fileUploads = new Ext.FormPanel({
            title: 'File Attachment',
            renderTo: 'panel_attachment',
            fileUpload: true,
            width: 500,
            frame: true,
            allowBlank: false,
            msgTarget: 'side',
            items: [{
                    layout: 'column',
                    items: [{
                            columnWidth: 0.7,
                            layout: 'form',
                            items: [{
                                    xtype: 'fileuploadfield',
                                    id: 'po-file',
                                    emptyText: 'Select a File',
                                    fieldLabel: 'Attach File',
                                    allowBlank: false,
                                    name: 'file-path',
                                    buttonText: '',
                                    buttonCfg: {
                                        iconCls: 'upload-icon'
                                    },
                                    width: 200,
                                    anchor: '98%'
                                }]
                        }, {
                            columnWidth: 0.2,
                            layout: 'form',
                            items: [{
                                    xtype: 'button',
                                    text: 'Upload',
                                    handler: function()
                                    {
                                        if (fileUploads.getForm().isValid()) {
                                            form_action = 1;
                                            fileUploads.getForm().submit({
                                                url: '/procurement/procurement/uploadfile/type/RPI',
                                                waitMsg: 'Uploading file...',
                                                success: function(form, action) {
                                                    var returnData = action.result;
                                                    if (returnData.success) {
                                                        var c = new filelist({
                                                            id: parseFloat(storeFile.getCount() + 1),
                                                            filename: returnData.filename,
                                                            savename: returnData.savename,
                                                            path: returnData.path,
                                                            status: 'new'
                                                        });
                                                        storeFile.add(c);
                                                        Ext.getCmp('files-grid').getView().refresh();
                                                        Ext.getCmp('po-file').setValue('');
                                                    }
                                                    else
                                                    {
                                                        Ext.Msg.alert('Error', returnData.msg);
                                                    }
                                                }
                                            });
                                        }
                                    }
                                }]
                        }]
                }, gridattach],
buttons: []
        });
        init();
        var jsonFile = '<?php echo $this->file ?>';
        storeFile.loadData(jsonFile);
        Ext.getCmp('files-grid').getView().refresh();     
});


</script>

<!--<div id="upload-file"></div><br />  bypass upload old-->
<div id="panel_attachment" style="margin-bottom:10px"></div>
<div id="user-form"></div>
<!--<div id="my-panel"></div>-->
<div id="user-grid"></div>
<div id="user-form2"></div>
<div id="user-grid2"></div>

<div id="user-grid3"></div>