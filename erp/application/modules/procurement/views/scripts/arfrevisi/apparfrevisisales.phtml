<style>


.last-reject{
    margin-top: 10px;
    margin-bottom: 10px;
    border:solid 1px #DEDEDE;
    background:#EFEFEF;
    /*color:#222222;*/
    color: #C15119;
    padding:4px;
    text-align:left;
}
.all-reject{
    margin-top: 10px;
    margin-bottom: 10px;
    border:solid 1px #DEDEDE;
    background:#F6CBCA;
    color:#222222;
    padding:4px;
    text-align:left;
}
.all-approve{
    margin-top: 10px;
    margin-bottom: 10px;
    border:solid 1px #DEDEDE;
    /*background:#CEE6C3;*/
    color:#222222;
    padding:4px;
    text-align:left;
    height: 200px;
    overflow: auto;
}

.body {
	/*width: 720px;*/
    overflow: auto;
}
.title {
	width: 100%;
	text-align: center;
	font-size: 18px;
	font-weight: bold;
	margin-bottom: 10px;
}
.etc {
	width: 100%;
	height: 50px;
}
.kanan-etc {
	float: right;
	width: 48%;
}
.kiri-etc {
	float: left;
	width: 48%;
}
.blok {
	font-size: 12px;
	font-weight: bold;
	margin-bottom: 5px;
}
.budgetTable {
	width: 100%;
	font-size: 12px;
	font-weight: normal;
}

</style>
<style type="text/css">
    .x-grid3-td-name b {
            font-family:tahoma, verdana;
            display:block;
            color:#333;
    }
    .x-grid3-td-name b i {
        font-weight:normal;
        font-style: normal;
        color:#000;
    }
    .x-grid3-td-name .personicon {
        padding-left:20px;
        background:transparent url(/images/engineer-icon.png) no-repeat 0 2px;
    }
    .x-grid3-td-name .x-grid3-cell-inner {
        white-space:normal;
    }

    .x-grid3-row-body p {
        margin:5px 20px 10px 25px !important;
        color:#555;
    }

    .rolename {
        color:#333;
    }
.ketin {
    width: 100%;
    font-size: 12px;
	font-weight: bold;
    background-color:#FBF0A5;
}
.ketin fieldset p {
    padding: 5px 5px 5px 5px;
}
</style>

<script type="text/javascript">

function submitData(params,dataArray)
{
    var addurl = '';

    if (params == "" || params == '')
        return false;
    if (dataArray != undefined)
        addurl = '/next/' + dataArray.data['next'] + '/uid_next/' + dataArray.data['uid_next'] + '/workflow_structure_id/' + dataArray.data['workflow_structure_id'] + '/workflow_id/' + dataArray.data['workflow_id'] + '/workflow_item_id/' + dataArray.data['workflow_item_id'];

    Ext.Ajax.request({
        url: '/procurement/procurement/insertarfbudget' + addurl,
        method:'POST',
        success: function(resp){
			var returnData = Ext.util.JSON.decode(resp.responseText);
			if (returnData.success)
			{
                if (returnData.user != undefined && returnData.number == undefined)
                {
                    showNextPerson(returnData.user,params);
                    return false;
                }
                else
                {
                    Ext.Msg.alert('Success', 'ARF has been saved and submitted to current Workflow!'   + '<br><br>Your ARF number is <b><font color="#ff0000">' + returnData.number + '</font></b>');
                    myPanel = Ext.getCmp('abs-budget-panel');
                    myPanel.body.load({
                        url: '/procurement/procurement/addarf',
                        scripts : true
                    });
                }
			}
            else
            {
                Ext.Msg.alert('Error', returnData.msg);
            }
        },
    	failure:function( action){
      	if(action.failureType == 'server'){
          obj = Ext.util.JSON.decode(action.responseText);
          Ext.Msg.alert('Error!', obj.errors.reason);
      	}else{
          Ext.Msg.alert('Warning!', 'Server is unreachable : ' + action.responseText);
      	}
      	},
        params: params
    });

}

function submitData2(params,dataArray)
{
    var addurl = '';

    if (params == "" || params == '')
        return false;
    if (dataArray != undefined)
        addurl = '/next/' + dataArray.data['next'] + '/uid_next/' + dataArray.data['uid_next'] + '/workflow_structure_id/' + dataArray.data['workflow_structure_id'] + '/workflow_id/' + dataArray.data['workflow_id'] + '/workflow_item_id/' + dataArray.data['workflow_item_id'];

    Ext.Ajax.request({
        url: '/procurement/arfrevisi/updatefinalarfsales' + addurl,
        method:'POST',
        success: function(resp){
            var returnData = Ext.util.JSON.decode(resp.responseText);
            if (returnData.success)
            {
                if (returnData.user != undefined && returnData.number == undefined)
                {
                    showNextPerson(returnData.user,params,true);
                    return false;
                }
                else
                {
                    Ext.Msg.alert('Success', 'ARF has been saved and submitted to current Workflow!');
                    myPanel = Ext.getCmp('abs-budget-panel');
                    myPanel.body.load({
                        url: '/procurement/procurement/arf',
                        scripts : true
                    });
                }
            }
            else
            {
                Ext.Msg.alert('Error', returnData.msg);
            }
        },
        failure:function( action){
        if(action.failureType == 'server'){
          obj = Ext.util.JSON.decode(action.response.responseText);
          Ext.Msg.alert('Error!', obj.errors.reason);
        }else{
          Ext.Msg.alert('Warning!', 'Server is unreachable : ' + action.response.responseText);
        }
        },
        params: params
    });
}

function submitData3(params,dataArray)
{
    var addurl = '';

    if (params == "" || params == '')
        return false;
    if (dataArray != undefined)
        addurl = '/next/' + dataArray.data['next'] + '/uid_next/' + dataArray.data['uid_next'] + '/workflow_structure_id/' + dataArray.data['workflow_structure_id'] + '/workflow_id/' + dataArray.data['workflow_id'] + '/workflow_item_id/' + dataArray.data['workflow_item_id'];

    Ext.Ajax.request({
        url: '/procurement/procurement/insertarfbudget/sales/true' + addurl,
        method:'POST',
        success: function(resp){
			var returnData = Ext.util.JSON.decode(resp.responseText);
			if (returnData.success)
			{
                if (returnData.user != undefined && returnData.number == undefined)
                {
                    showNextPerson(returnData.user,params);
                    return false;
                }
                else
                {
                    Ext.Msg.alert('Success', 'ARF has been saved and submitted to current Workflow!'   + '<br><br>Your ARF number is <b><font color="#ff0000">' + returnData.number + '</font></b>');
                    myPanel = Ext.getCmp('abs-budget-panel');
                    myPanel.body.load({
                        url: '/procurement/procurement/addarf',
                        scripts : true
                    });
                }
			}
            else
            {
                Ext.Msg.alert('Error', returnData.msg);
            }
        },
    	failure:function( action){
      	if(action.failureType == 'server'){
          obj = Ext.util.JSON.decode(action.responseText);
          Ext.Msg.alert('Error!', obj.errors.reason);
      	}else{
          Ext.Msg.alert('Warning!', 'Server is unreachable : ' + action.responseText);
      	}
      	},
        params: params
    });

}

function submitData4(params,dataArray)
{
    var addurl = '';

    if (params == "" || params == '')
        return false;
    if (dataArray != undefined)
        addurl = '/next/' + dataArray.data['next'] + '/uid_next/' + dataArray.data['uid_next'] + '/workflow_structure_id/' + dataArray.data['workflow_structure_id'] + '/workflow_id/' + dataArray.data['workflow_id'] + '/workflow_item_id/' + dataArray.data['workflow_item_id'];
    Ext.getBody().mask('Loading..','x-mask-loading',false);
    Ext.Ajax.request({
//        url: '/procurement/procurement/updatearfbudget/sales/true' + addurl,
        url: '/procurement/arfrevisi/updatefinalarfsales/sales/true' + addurl,

        method:'POST',
        success: function(resp){
            Ext.getBody().unmask();
            var returnData = Ext.util.JSON.decode(resp.responseText);
            if (returnData.success)
            {
                if (returnData.user != undefined && returnData.number == undefined)
                {
                    showNextPerson(returnData.user,params,true);
                    return false;
                }
                else
                {
                    Ext.Msg.alert('Success', 'ARF has been saved and submitted to current Workflow!');
                    myPanel = Ext.getCmp('abs-budget-panel');
                    myPanel.body.load({
                        url: '/procurement/procurement/arf',
                        scripts : true
                    });
                }
            }
            else
            {
                Ext.Msg.alert('Error', returnData.msg);
            }
        },
        failure:function( action){
          Ext.getBody().unmask();
        if(action.failureType == 'server'){
          obj = Ext.util.JSON.decode(action.response.responseText);
          Ext.Msg.alert('Error!', obj.errors.reason);
        }else{
          Ext.Msg.alert('Warning!', 'Server is unreachable : ' + action.response.responseText);
        }
        },
        params: params
    });
}

function showNextPerson(userArray,params,isEdit)
{

    var addlist = Ext.data.Record.create([
             {name: 'id', type: 'string'},
             {name: 'workflow_id', type: 'string'},
             {name: 'workflow_item_id', type: 'string'},
             {name: 'workflow_item_name', type: 'string'},
             {name: 'workflow_structure_id', type: 'string'},
             {name: 'next', type: 'string'},
             {name: 'uid_next', type: 'string'},
             {name: 'name', type: 'string'},
             {name: 'role_name', type: 'string'},
             {name: 'prj_kode', type: 'string'}
        ]);

     var storeUser = new Ext.data.Store({
        reader: new Ext.data.JsonReader({fields: addlist})
    });

    Ext.each(userArray, function (t, index){
        var d = new addlist({
            id: t.id,
            workflow_id: t.workflow_id,
            workflow_item_id: t.workflow_item_id,
            workflow_item_name: t.workflow_item_name,
            workflow_structure_id: t.workflow_structure_id,
            uid_next: t.uid_next,
            next: t.next,
            name: t.name,
            role_name: t.role_name,
            prj_kode: t.prj_kode
        });
        storeUser.add(d);
        d = undefined;
    });

    var userColumns =  [
        new Ext.grid.RowNumberer(),
        {header: "Receiver", dataIndex: 'name', width: 220, renderer: function (v,p,r) {
            return '<div class="personicon"><b>' + r.data.name + '</b>&nbsp;<span class="rolename">' + r.data.role_name + '<br>Transaction Type: ' + r.data.workflow_item_name + '<br>Project : ' + r.data.prj_kode + '</span></div>';
        }}
    ];

    var bForm = new Ext.Window ({
    id: 'choose-next',
    layout: 'border',
    width: 300,
    height: 350,
    modal: true,
    resizable: false,
    title: 'Choose Document Receiver',
    style: 'margin-top: 10px',
    labelAlign: 'right',
    stateful: false,
    items : [

        new Ext.grid.GridPanel({
            width: 288,
            height: 330,
            id: 'site-grids',
            region: 'center',
            loadMask: true,
            columns: userColumns,
            store: storeUser,
            sm: new Ext.grid.RowSelectionModel({
                singleSelect:true
            }),
            viewConfig: {
                forceFit: true,
                enableRowBody:true,
                showPreview:true,
                getRowClass : function(record, rowIndex, p, ds) {
                                return 'x-grid3-row-collapsed';
                              }
            },
            listeners: {
                'rowdblclick': function(g, rowIndex, e){
                        var record = g.getStore().getAt(rowIndex);
                        if (isEdit)
                            submitData2(params,record);
                        else
                            submitData(params,record);
                        bForm.close();
                }
            }
        })
    ],
             buttons: [
                      {
                         text: 'OK',
                         id: 'ok-next',
                         iconCls: 'silk-upd',
                         handler: function(btn, ev) {
                            var row = Ext.getCmp('site-grids').getSelectionModel().getSelections();
                            var record = row[0];
                            if (isEdit)
                                submitData2(params,record);
                            else
                                submitData(params,record);
                            bForm.close();
                          }

                      },
                      {
                         text: 'Cancel',
                         id: 'cancel',
                         handler: function(btn, ev) {
                             bForm.close();
                             bForm = '';
                          }

                      }


                        ]
        });
        bForm.show();
};

<?php
if (!$this->preview && !$this->show) {
if ($this->approve)
{
?>

var trano = '<?=$this->docsID?>';
var uid = '<?=$this->uid?>';
var user_id = '<?=$this->userID?>';

<?php if ($this->reject) {

if (!$this->sales)
{
?>

var cancelButton = new Ext.Button({
    text: 'Goto Edit ARF',
    iconCls: 'icon-go',
    scale: 'large',
    handler: function (){
		myPanel = Ext.getCmp('abs-budget-panel');
	    myPanel.body.load({
	        url: '/procurement/procurement/editarf2budget/trano/<?php echo $this->trano; ?>',
	        scripts : true
	    });
	},
	renderTo: 'cancel-button'
});

<?php } else { ?>

var cancelButton = new Ext.Button({
    text: 'Goto Edit ARF',
    iconCls: 'icon-go',
    scale: 'large',
    handler: function (){
		myPanel = Ext.getCmp('abs-budget-panel');
	    myPanel.body.load({
	        url: '/procurement/arfrevisi/arfrevisisalesnew/trano/<?php echo $this->trano; ?>',
	        scripts : true
	    });
	},
	renderTo: 'cancel-button'
});

<?php } } else { ?>


var questionButton = new Ext.Button({
    text: 'Ask Question',
    iconCls: 'icon-ask',
    scale: 'large',
    handler: function (){
        askQuestion('<?php echo $this->trano; ?>');
    },
	renderTo: 'ask-button'
});

var okButton = new Ext.Button({
    text: 'Approve',
    iconCls: 'icon-add',
    scale: 'large',
    handler: function (){
     this.disable();
	Ext.MessageBox.show({
        title: 'Comment',
        msg: 'Please enter comment:',
        width:300,
        buttons: Ext.MessageBox.OKCANCEL,
        multiline: true,
        fn: showResultText2
    });

	function showResultText2(btn, text){
		var comment='';
		if (btn == 'ok')
        {
			comment = text;
        }
        else if (btn == 'cancel')
            return false;
		params = {trans:trano, user: uid, comment: comment, user_id:user_id};
		Ext.Ajax.request({
	        url: '/admin/workflow/approve',
	        method:'POST',
	        success: function(resp){
				var returnData = Ext.util.JSON.decode(resp.responseText);
				if (returnData.success)
				{
//					Ext.Msg.alert('Success', 'Document has been approved!');
					getDocs();
					myPanel = Ext.getCmp('abs-budget-panel');
				    myPanel.body.load({
				        url: '/default/home/showprocessdocument',
				        scripts : true
			        });
				}
    			else
    			{
    				Ext.Msg.alert('Error', returnData.msg);
    			}
	        },
	    	failure:function( action){
	      	if(action.failureType == 'server'){
	          obj = Ext.util.JSON.decode(action.responseText);
	          Ext.Msg.alert('Error!', obj.errors.reason);
	      	}else{
	          Ext.Msg.alert('Warning!', 'Server is unreachable : ' + action.response.responseText);
	      	}
	      	},
	        params: params
	    });
	}
	},
	renderTo: 'ok-button'
});

var cancelButton = new Ext.Button({
    text: 'Reject',
    iconCls: 'icon-cancel',
    scale: 'large',
    handler: function (){
	Ext.MessageBox.show({
        title: 'Comment',
        msg: 'Please enter comment:',
        width:300,
        buttons: Ext.MessageBox.OKCANCEL,
        multiline: true,
        fn: showResultText
    });

	function showResultText(btn, text){
		var comment='';
        if (btn == 'ok')
        {
			comment = text;
        }
        else if (btn == 'cancel')
            return false;
        params = {trans:trano, user: uid, comment: comment, user_id:user_id};
    	Ext.Ajax.request({
            url: '/admin/workflow/reject',
            method:'POST',
            success: function(resp){
    			var returnData = Ext.util.JSON.decode(resp.responseText);
    			if (returnData.success)
    			{
//    				Ext.Msg.alert('Success', 'Document has been rejected!');
    				getDocs();
    				myPanel = Ext.getCmp('abs-budget-panel');
    			    myPanel.body.load({
    			        url: '/default/home/showprocessdocument',
    			        scripts : true
    		        });
    			}
    			else
    			{
    				Ext.Msg.alert('Error', returnData.msg);
    			}
            },
        	failure:function( action){
          	if(action.failureType == 'server'){
              obj = Ext.util.JSON.decode(action.responseText);
              Ext.Msg.alert('Error!', obj.errors.reason);
          	}else{
              Ext.Msg.alert('Warning!', 'Server is unreachable : ' + action.responseText);
          	}
          	},
            params: params
        });
    };


	},
	renderTo: 'cancel-button'
});

var backButton = new Ext.Button({
    text: 'Cancel',
    scale: 'large',
    handler: function (){
		myPanel = Ext.getCmp('abs-budget-panel');
	    myPanel.body.load({
	        url: '<?php echo $this->urlBack; ?>',
	        scripts : true
	    });
	},
	renderTo: 'back-button'
});

<?php
	}
}
elseif (!$this->approve)
{
?>


var json = '<?php echo $this->jsonResult; ?>';
var jsonFile = '<?php echo $this->jsonFile; ?>';
var parameter = '<?=Zend_Json::encode($this->etc)?>';

var okButton = new Ext.Button({
            text: 'Submit',
            iconCls: 'icon-save',
            scale: 'large',
            handler: function (){
            this.disable();
			<?php
			if (!$this->edit)
			{
                if(!$this->sales)
                {
			?>
//		Ext.MessageBox.show({
//		    title: 'Comment',
//		    msg: 'Please enter comment:',
//		    width:300,
//		    buttons: Ext.MessageBox.OKCANCEL,
//		    multiline: true,
//		    fn: function (btn,text)
//		    {
//                var comment = text;
//                parameter = '[{"comment": ' + comment + ',"prj_kode":"<?=$this->etc[0]['prj_kode']?>","prj_nama":"<?=$this->etc[0]['prj_nama']?>", "sit_kode":"<?=$this->etc[0]['sit_kode']?>", "sit_nama":"<?=$this->etc[0]['sit_nama']?>", "requester":"<?=$this->etc[0]['requester']?>" ,"requester2":"<?=$this->etc[0]['requester2']?>" , "penerima":"<?=$this->etc[0]['penerima']?>", "bank":"<?=$this->etc[0]['bank']?>", "bankaccountname":"<?=$this->etc[0]['bankaccountname']?>", "bankaccountno":"<?=$this->etc[0]['bankaccountno']?>", "valuta":"<?=$this->etc[0]['valuta']?>", "pic_kode":"<?=$this->etc[0]['pic_kode']?>", "mgr_kode":"<?=$this->etc[0]['mgr_kode']?>", "finance":"<?=$this->etc[0]['finance']?>", "budgettype":"<?=$this->etc[0]['budgettype']?>"}]';
//                var parameter = '[{"prj_kode":"<?=$this->etc[0]['prj_kode']?>","prj_nama":"<?=$this->etc[0]['prj_nama']?>", "sit_kode":"<?=$this->etc[0]['sit_kode']?>", "sit_nama":"<?=$this->etc[0]['sit_nama']?>", "requester":"<?=$this->etc[0]['requester']?>" ,"requester2":"<?=$this->etc[0]['requester2']?>" , "penerima":"<?=$this->etc[0]['penerima']?>", "bank":"<?=$this->etc[0]['bank']?>", "bankaccountname":"<?=$this->etc[0]['bankaccountname']?>", "bankaccountno":"<?=$this->etc[0]['bankaccountno']?>", "valuta":"<?=$this->etc[0]['valuta']?>", "pic_kode":"<?=$this->etc[0]['pic_kode']?>", "mgr_kode":"<?=$this->etc[0]['mgr_kode']?>", "finance":"<?=$this->etc[0]['finance']?>", "budgettype":"<?=$this->etc[0]['budgettype']?>", "ketin":"<?=$this->etc[0]['ketin']?>"}]';
                params = {posts:json, etc:parameter, file: jsonFile};
                submitData(params);
//		    }
//		});
            <?php } else { ?>

//                var parameter = '[{"prj_kode":"<?=$this->etc[0]['prj_kode']?>","prj_nama":"<?=$this->etc[0]['prj_nama']?>", "sit_kode":"<?=$this->etc[0]['sit_kode']?>", "sit_nama":"<?=$this->etc[0]['sit_nama']?>", "requester":"<?=$this->etc[0]['requester']?>" ,"requester2":"<?=$this->etc[0]['requester2']?>" , "penerima":"<?=$this->etc[0]['penerima']?>", "bank":"<?=$this->etc[0]['bank']?>", "bankaccountname":"<?=$this->etc[0]['bankaccountname']?>", "bankaccountno":"<?=$this->etc[0]['bankaccountno']?>", "valuta":"<?=$this->etc[0]['valuta']?>", "pic_kode":"<?=$this->etc[0]['pic_kode']?>", "mgr_kode":"<?=$this->etc[0]['mgr_kode']?>", "finance":"<?=$this->etc[0]['finance']?>", "budgettype":"<?=$this->etc[0]['budgettype']?>", "ketin":"<?=$this->etc[0]['ketin']?>"}]';
                params = {posts:json, etc:parameter, file: jsonFile};
                submitData3(params);


	 <?php }
            } else {
            if (!$this->sales)
            {
            ?>
//		Ext.MessageBox.show({
//		    title: 'Comment',
//		    msg: 'Please enter comment:',
//		    width:300,
//		    buttons: Ext.MessageBox.OKCANCEL,
//		    multiline: true,
//		    fn: function (btn,text)
//		    {
//                var comment = text;
//                parameter = '[{"comment": ' + comment + ',"trano":"<?=$this->etc[0]['trano']?>","prj_kode":"<?=$this->etc[0]['prj_kode']?>","prj_nama":"<?=$this->etc[0]['prj_nama']?>", "sit_kode":"<?=$this->etc[0]['sit_kode']?>", "sit_nama":"<?=$this->etc[0]['sit_nama']?>", "requester":"<?=$this->etc[0]['requester']?>" ,"requester2":"<?=$this->etc[0]['requester2']?>" , "penerima":"<?=$this->etc[0]['penerima']?>", "bank":"<?=$this->etc[0]['bank']?>", "bankaccountname":"<?=$this->etc[0]['bankaccountname']?>", "bankaccountno":"<?=$this->etc[0]['bankaccountno']?>", "valuta":"<?=$this->etc[0]['valuta']?>", "pic_kode":"<?=$this->etc[0]['pic_kode']?>", "mgr_kode":"<?=$this->etc[0]['mgr_kode']?>", "finance":"<?=$this->etc[0]['finance']?>", "budgettype":"<?=$this->etc[0]['budgettype']?>"}]';
//                parameter = '[{"trano":"<?=$this->etc[0]['trano']?>","prj_kode":"<?=$this->etc[0]['prj_kode']?>","prj_nama":"<?=$this->etc[0]['prj_nama']?>", "sit_kode":"<?=$this->etc[0]['sit_kode']?>", "sit_nama":"<?=$this->etc[0]['sit_nama']?>", "requester":"<?=$this->etc[0]['requester']?>" ,"requester2":"<?=$this->etc[0]['requester2']?>" , "penerima":"<?=$this->etc[0]['penerima']?>", "bank":"<?=$this->etc[0]['bank']?>", "bankaccountname":"<?=$this->etc[0]['bankaccountname']?>", "bankaccountno":"<?=$this->etc[0]['bankaccountno']?>", "valuta":"<?=$this->etc[0]['valuta']?>", "pic_kode":"<?=$this->etc[0]['pic_kode']?>", "mgr_kode":"<?=$this->etc[0]['mgr_kode']?>", "finance":"<?=$this->etc[0]['finance']?>", "budgettype":"<?=$this->etc[0]['budgettype']?>"}]';
                params = {posts:json, etc:parameter, file: jsonFile};
                submitData2(params);
//		    }
//		});
        <?php } else { ?>
            Ext.MessageBox.show({
		    title: 'Comment',
		    msg: 'Please enter comment:',
		    width:300,
		    buttons: Ext.MessageBox.OKCANCEL,
		    multiline: true,
                    fn: showResultText1
                        });
                        
                        function showResultText1(btn, text){
                                var comment='';
                                if (btn == 'ok')
                        {
                                        comment = text;
                        }
                        else if (btn == 'cancel')
                            return false;
                        parameter = '<?=Zend_Json::encode($this->etc)?>'; 
//               parameter = '[{"trano":"<?=$this->etc[0]['trano']?>","prj_kode":"<?=$this->etc[0]['prj_kode']?>","prj_nama":"<?=$this->etc[0]['prj_nama']?>", "sit_kode":"<?=$this->etc[0]['sit_kode']?>", "sit_nama":"<?=$this->etc[0]['sit_nama']?>", "requester":"<?=$this->etc[0]['requester']?>" ,"requester2":"<?=$this->etc[0]['requester2']?>" , "penerima":"<?=$this->etc[0]['penerima']?>", "bank":"<?=$this->etc[0]['bank']?>", "bankaccountname":"<?=$this->etc[0]['bankaccountname']?>", "bankaccountno":"<?=$this->etc[0]['bankaccountno']?>", "valuta":"<?=$this->etc[0]['valuta']?>", "pic_kode":"<?=$this->etc[0]['pic_kode']?>", "mgr_kode":"<?=$this->etc[0]['mgr_kode']?>", "finance":"<?=$this->etc[0]['finance']?>", "budgettype":"<?=$this->etc[0]['budgettype']?>"}]';
//                params = {posts:json, etc:parameter, file: jsonFile, comment: comment};
                submitData4(params);
                }

		 <?php } } ?>
	},
	renderTo: 'ok-button'
});


var cancelButton = new Ext.Button({
    text: 'Cancel',
    iconCls: 'icon-cancel',
    scale: 'large',
    handler: function (){
        <?php
			if (!$this->edit)
			{
			?>
		params = {posts:json};
		myPanel = Ext.getCmp('abs-budget-panel'); //Load the panel
	    myPanel.body.load({
	        url: '/procurement/procurement/addnewarfbudget/returnback/true', //the url
	        scripts : true,
	        params: params //our params goes here
	    });
        <?php } else {  $arf_no = $this->etc[0]['trano'] ?>
            var arf_number = '<?=$arf_no?>';

        <?php if (!$this->sales) { ?>
        params = {posts:json};
		myPanel = Ext.getCmp('abs-budget-panel'); //Load the panel
	    myPanel.body.load({
	        url: '/procurement/procurement/editnewarfbudget/trano/'+arf_number, //the url
	        scripts : true,
	        params: params //our params goes here
	    });
        <?php } else {?>
        params = {posts:json};
		myPanel = Ext.getCmp('abs-budget-panel'); //Load the panel
	    myPanel.body.load({
	        url: '/procurement/arfrevisi/arfrevisisalesnew/returnback/true', //the url
	        scripts : true,
	        params: params //our params goes here
	    });

           <?php } }?>
	},
	renderTo: 'cancel-button'
});

<?php
    }
}
?>

Ext.onReady(function(){

    Ext.QuickTips.init();

    <?php $trano = $this->etc[0]['trano']?>

    var proxy = new Ext.data.HttpProxy({
           url : 'what ever'
        });

    var trano = '<?=$trano?>';

    var logstore = new Ext.data.Store ({

        url:'/procurement/arfrevisi/getlogtransaction/trano/'+ trano,
        autoLoad:true,

        reader:new Ext.data.JsonReader ({

            root:'data'
        },[
            {name:'tgl',type:'String'},
            {name:'uid',type:'String'},
            {name:'action',type:'String'},
            {name:'totalbefore',type:'String'},
            {name:'totalafter',type:'String'},
            {name:'trano',type:'String'}
        ])

    })

    var productlistbeforestore = new Ext.data.Store ({

        proxy:proxy,
        reader:new Ext.data.JsonReader ({

            root:'data'
        },[
            {name:'workid',type:'String'},
            {name:'nama_brg',type:'String'},
            {name:'kode_brg',type:'String'},
            {name:'ket',type:'String'},
            {name:'qty'},
            {name:'harga'},
            {name:'total'}
        ])

    })

    var productlistafterstore = new Ext.data.Store ({

        proxy:proxy,
        reader:new Ext.data.JsonReader ({

            root:'data'
        },[
            {name:'workid',type:'String'},
            {name:'nama_brg',type:'String'},
            {name:'kode_brg',type:'String'},
            {name:'ket',type:'String'},
            {name:'qty'},
            {name:'harga'},
            {name:'total'}
        ])

    })

    var arfaftergrid = new Ext.grid.GridPanel ({

        title:'ARF Sales after product list',
        store:productlistafterstore,
        height:150,
        viewConfig:{
            forceFit:true
        },
        columns:[{
            header:'Job Number',
            dataIndex:'workid',
            align:'center',
            sortable:true
        },{
            header:'Product ID',
            dataIndex:'kode_brg',
            align:'center',
            sortable:true
        },{
            header:'Description',
            dataIndex:'nama_brg',
            align:'center',
            sortable:true
        },{
            header:'Remark',
            dataIndex:'ket',
            align:'center',
            sortable:true
        },{
            header:'Qty',
            dataIndex:'qty',
            align:'center',
            sortable:true
        },{
            header:'Price',
            dataIndex:'harga',
            align:'center',
            sortable:true,
            renderer: function(v){
                        return v ? Ext.util.Format.number(v, '0,0') : '';
                        }
        },{
            header:'Total',
            dataIndex:'total',
            align:'center',
            sortable:true,
            renderer: function(v){
                        return v ? Ext.util.Format.number(v, '0,0') : '';
                        }
        }]

    })

    var arfbeforegrid = new Ext.grid.GridPanel ({

        title:'ARF Sales before product list',
        store:productlistbeforestore,
        height:150,
        style:'marginBottom:15px',
        viewConfig:{
            forceFit:true
        },
        columns:[{
            header:'Job Number',
            dataIndex:'workid',
            align:'center',
            sortable:true
        },{
            header:'Product ID',
            dataIndex:'kode_brg',
            align:'center',
            sortable:true
        },{
            header:'Description',
            dataIndex:'nama_brg',
            align:'center',
            sortable:true
        },{
            header:'Remark',
            dataIndex:'ket',
            align:'center',
            sortable:true
        },{
            header:'Qty',
            dataIndex:'qty',
            align:'center',
            sortable:true
        },{
            header:'Price',
            dataIndex:'harga',
            align:'center',
            sortable:true,
            renderer: function(v){
                        return v ? Ext.util.Format.number(v, '0,0') : '';
                        }
        },{
            header:'Total',
            dataIndex:'total',
            align:'center',
            sortable:true,
            renderer: function(v){
                        return v ? Ext.util.Format.number(v, '0,0') : '';
                        }
        }]

    })

    var arflistgrid = new Ext.grid.GridPanel ({

        store:logstore,
        viewConfig:{
            forceFit:true
        },
        style:'marginBottom:15px',
        height:100,
        listeners:{
            'rowdblclick':function (aktifgrid,rowindex,e)
            {
                isDbclick = true;
                var tgl = aktifgrid.getStore().getAt(rowindex).get('tgl');
                productlistbeforestore.proxy.setUrl('/procurement/arfrevisi/getlogproductlistbefore/trano/'+ trano + '/tgl/' + tgl);
                productlistbeforestore.load();
                arfbeforegrid.getView().refresh();

                productlistafterstore.proxy.setUrl('/procurement/arfrevisi/getlogproductlistafter/trano/'+ trano + '/tgl/' + tgl);
                productlistafterstore.load();
                arfaftergrid.getView().refresh();

            }
        },
        columns:[new Ext.grid.RowNumberer,{
            header:'Date',
            dataIndex:'tgl',
            align:'center',
            sortable:true
        },{
            header:'Input Name',
            dataIndex:'uid',
            align:'center',
            sortable:true
        },{
            header:'Action',
            dataIndex:'action',
            align:'center',
            sortable:true
        },{
            header:'Total Before',
            dataIndex:'totalbefore',
            align:'center',
            sortable:true,
            renderer: function(v){
                        return v ? Ext.util.Format.number(v, '0,0') : '';
                        }
        },{
            header:'Total After',
            dataIndex:'totalafter',
            align:'center',
            sortable:true,
            renderer: function(v){
                        return v ? Ext.util.Format.number(v, '0,0') : '';
                        }
        }]

    })

    var arflistwindow = new Ext.Window ({

        title:'ARF Sales transaction list before revisi',
        width:700,
        height:500,
        closeAction:'hide',
        plain: true,
        items:[arflistgrid,arfbeforegrid,arfaftergrid
        ],
        modal:true,
        buttons:[{
            text:'close',
            handler:function (btn,event){
                arflistwindow.hide();
            }
        }]


    })

    arflistwindow.show;

    var viewButton = new Ext.Button ({

    text:'view arf sales before',
    scale:'large',
    renderTo:'view-button-sales',
    id:'view_button_sales',
    handler:function (btn,event){
        arflistwindow.show();
        }

    })

})


</script>


<link rel="stylesheet" type="text/css" href="/css/table.css"/>

<div class="body">
<div align="right"><img src="/images/qdc.gif" alt= "logo qdc" /></div>
<div class="title">Advance Request Form (Revisi)</div>

<?php if ($this->reject) { ?>
<div class="last-reject">
    This Document was Rejected by <?php echo $this->lastReject[0]['name']; ?> at <?php echo date('d-m-Y H:i:s',strtotime($this->lastReject[0]['date'])); ?>
    <br />
    Comment : <?php echo $this->lastReject[0]['comment']; ?>
</div>
<?php } ?>

<?php if ($this->file != '') { ?>
<div class="files">
    Attachment Files :<br />
    <ul>
    <?php foreach ($this->file as $key => $val) { ?>
    <li>- <a href="#" onclick="window.open('/default/file/download/path/files/filename/<?php echo $val['savename']; ?>','mywin','left=20,top=20,width=100,height=20,toolbar=0,resizable=0');"><?php echo $val['filename']; ?></a></li>
    <?php } ?>
    </ul>
</div>
<?php } ?>

<div class="etc">
	<div class="kiri-etc">
        <?php if ($this->edit || $this->approve) {?><div class="blok">ARF Number : <?=$this->etc[0]['trano']?></div><?php } ?>
		<div class="blok">ARF Date : <?=date('d-m-Y')?></div>
        <div class="blok">Currency : <?=$this->etc[0]['valuta']?></div>
        <div class="blok">Origin of Budget : <?=$this->etc[0]['budgettype']?></div>

	</div>
	<div class="kanan-etc">
		<div class="blok">Project : <?=$this->etc[0]['prj_kode']?> - <?=$this->etc[0]['prj_nama']?></div>
		<div class="blok">Site : <?=$this->etc[0]['sit_kode']?> - <?=$this->etc[0]['sit_nama']?></div>
        <div class="blok">Manager : <?=QDC_User_Ldap::factory(array("uid" => $this->etc[0]['mgr_kode']))->getName()?></div>
        <div class="blok">PIC : <?=QDC_User_Ldap::factory(array("uid" =>$this->etc[0]['pic_kode']))->getName()?></div>
    </div>
</div>


<table id="mytable" cellspacing="0">
        <tr>
        	<th scope="col"><center>No.</center></th>
            <th scope="col"><center>Requester Name</center></th>
            <th scope="col"><center>Budget ID</center></th>
            <th scope="col"><center>Budget Name</center></th>
            <th scope="col"><center>Description</center></th>
            <th scope="col"><center>Remark</center></th>
            <th scope="col"><center>Qty</center></th>
            <th scope="col"><center>UOM</center></th>
            <th scope="col"><center>Unit Price</center></th>
            <th scope="col"><center>Total</center></th>
        </tr>
    	<?php

    		$totals = 0;
    		$pajak=0;
    		$grandtotals=0;

    		$tax = $this->result[0]['tax'];
       		for ($i=0;$i<(count($this->result));$i++)
    		{

   				foreach ($this->result[$i] as $key => $val)
    			{
    				if ($val == '')
    					$this->result[$i][$key] = "&nbsp;";
    			}

                $harga = $this->result[$i]['harga'];
                $total = $this->result[$i]['qty'] * $this->result[$i]['harga'];


    	?>
    		<tr>
    		<th scope="row" class="spec"><?=($i+1)?></th>
            <td><?=$this->result[$i]['requesterName'] ?> </td>
    		<td><?=$this->result[$i]['budgetid'] ?> </td>
            <td><?=$this->result[$i]['budgetname'] ?> </td>
    		<td><?=$this->result[$i]['kode_brg']?> - <?=$this->result[$i]['nama_brg']?></td>
            <td ><?=$this->result[$i]['ket']?></td>
    	 <td align="right"><?= $this->result[$i]['qty']==0 || $this->result[$i]['qty']=='' ? 0 : number_format($this->result[$i]['qty'],4)?></td>
                    		<td ><?=$this->result[$i]['uom']?></td>
            <td align="right"><?= $this->result[$i]['harga']==0 || $this->result[$i]['harga']=='' ? 0 : number_format($this->result[$i]['harga'],2)?></td>


            <td align="right"><?=number_format($total,2)?></td>
    		</tr>

                   <?php
                                   $totals += $total;
                               }

                           ?>
                           <tr>
                               <th scope="row" class="spec" colspan="9">Grand Total</th>
                               <td align="right"><?=number_format($totals,2)?></td>
                               </tr>
                   </table>
    <br />
    <div class="ketin">
    <fieldset>
     <legend>Internal Notes</legend>
        <p>
        <?php echo $this->etc[0]['ketin']; ?>
        </p>
    </fieldset>
    </div>
     <?php
    if ( $this->etc[0]['user_approval'] != '')
    {
    ?>
    <div class="all-approve">
    <b>Approval History</b></br>
    <ul>
    <?php
        foreach ($this->etc[0]['user_approval'] as $key => $val)
        {
    ?>
            <li><?php echo "<b>" . $val['approve'] . "</b> " . date('d-m-Y H:i:s',strtotime($val['date'])) . " : " . $val['displayname'] . " (" . $val['display_name'] . ")<br />Sign : " . $val['signature'] . "<br />Comment : " . $val['comment']; ?></li>
    <?
        }
    ?>
    </ul>
    </div>
    <?php
    }
    ?>
<!--
    <?php
    if ($this->allReject != '')
    {
    ?>
    <div class="all-reject">
    <b>Rejection History</b></br>
    <ul>
    <?php
        foreach ($this->allReject as $key => $val)
        {
    ?>
            <li><?php echo date('d-m-Y H:i:s',strtotime($val['date'])) . " : " . $val['displayname'] . " (" . $val['display_name'] . ")"; ?><br />Comment : <?php echo $val['comment']; ?></li>
    <?
        }
    ?>
    </ul>
    </div>
    <?php
    }
    ?>
-->


	<div style="margin-top:15px;">
        <div id="view-button-sales" style="float:left;"></div>
<?php if (!$this->show) { ?>
		<div id="back-button"  style="margin-left:5px;float: right;"></div>
		<div id="cancel-button"  style="margin-left:5px;float: right;"></div>
		<div id="ok-button"  style="margin-left:5px;float: right;"></div>
		<div id="ask-button"  style="float: right;"></div>
<?php } ?>
	</div>


</div>

