<script type="text/javascript">


    Ext.apply(Ext.form.VTypes, {
    daterange : function(val, field) {
        var date = field.parseDate(val);

        if(!date){
            return false;
        }
        if (field.startDateField && (!this.dateRangeMax || (date.getTime() != this.dateRangeMax.getTime()))) {
            var start = Ext.getCmp(field.startDateField);
            start.setMaxValue(date);
            start.validate();
            this.dateRangeMax = date;
        }
        else if (field.endDateField && (!this.dateRangeMin || (date.getTime() != this.dateRangeMin.getTime()))) {
            var end = Ext.getCmp(field.endDateField);
            end.setMinValue(date);
            end.validate();
            this.dateRangeMin = date;
        }
        /*
         * Always return true since we're only using this vtype to set the
         * min/max allowed values (these are tested for after the vtype test)
         */
        return true;
    },

    numericText: "Only numbers are allowed.",
    numericMask: /[0-9]/,
    numericRe: /(^-?dd*.d*$)|(^-?dd*$)|(^-?.dd*$)/,
    numeric: function(v) {
        return function() { return this.numericRe.test(v)} ;
    }

});


    Ext.onReady(function(){

        Ext.QuickTips.init();

        var i = 1;

        var monthArray = Date.monthNames.map(function (e) { return [e,i++]; });

        var setperiodepanel = new Ext.form.FormPanel ({

            title:'Edit Periode',
            id:'edit-periode',
            renderTo:'edit_periode',
            frame:true,
            width:240,
            items:[{
                xtype:'textfield',
                fieldLabel:'Year',
                width:104,
                readOnly:true,
                id:'year',
                allowBlank:false,
                msgTarget:'side',
                name:'tahun'
            },{
                id:'month',
                xtype:'combo',
                fieldLabel:'Month',
                width:104,
                store: new Ext.data.ArrayStore ({
                    fields:['name','value'],
                    data:monthArray
                }),
                valueField:'value',
                displayField:'name',
                typeAhead: true,
                forceSelection: true,
                editable: false,
                mode: 'local',
                triggerAction: 'all',
                selectOnFocus: true,
                emptyText: 'Select ... ',
                allowBlank:false,
                msgTarget:'side',
                name:'periode'
            },{
                xtype:'datefield',
                fieldLabel: 'Start Date',
                id: 'startdt',
                vtype: 'daterange',
                endDateField: 'enddt', // id of the end date field
                allowBlank:false,
                msgTarget:'side',
                format:'d-m-Y',
                name:'tgl_aw',
                editable:false
            },{
                xtype:'datefield',
                fieldLabel: 'End Date',
                id: 'enddt',
                vtype: 'daterange',
                startDateField: 'startdt',
                allowBlank:false,
                msgTarget:'side',
                format:'d-m-Y',
                name:'tglak',
                editable:false
            },{
                xtype:'textfield',
                fieldLabel:'Hour Per Month',
                vtype:'numeric',
                id:'hour',
                allowBlank:false,
                maxLength:3,
                msgTarget:'side',
                width:104,
                name:'jumlah_jam_bulan'
            },{
                xtype:'hidden',
                name:'id',
                id:'id'
            }
//                {
//                xtype:'radiogroup',
//                fieldLabel:'Periode Action',
//                items:[{
//                    boxLabel:'Active',
//                    name:'action',
//                    inputValue:1,
//                    checked:true
//                },{
//                    boxLabel:'Non Active',
//                    name:'action',
//                    inputValue:0
//                }]
//            }
            ],
            buttons:[{
                text:'Edit',
                handler:function (btn,ev)
                {
//                    var id = Ext.getCmp('id');
//                    console.log(id);false;

                    if(!Ext.getCmp('edit-periode').getForm().isValid())
                    {
                        Ext.Msg.alert('Error','Please cek your field');
                        return false;
                    }

                    Ext.getCmp('edit-periode').getForm().submit({

                        method:'POST',
                        url:'/humanresource/timesheet/edit',
                        success:function(thisForm,response)
                        {
                            Ext.Msg.alert('Message','Success, Timeseheet Periode has been Update');
                            panel = Ext.getCmp('abs-budget-panel');
                            panel.body.load ({
                                url: '/humanresource/timesheet/timesheetperiode',
                                scripts: true
                            })
                        },
                        failure:function(thisForm,response){
                            if (response.failureType == 'server')
                            {
                                var resp = Ext.util.JSON.decode(response.response.responseText);
                                Ext.Msg.alert('Error',resp.pesan);
                            }
                        }

                    })
                }
            },{
                text:'Cancel',
                style:'margin-right:10px',
                handler:function(btn,ev)
                {
                    panel = Ext.getCmp('abs-budget-panel');
                        panel.body.load ({
                        url: '/humanresource/timesheet/viewperiode',
                        scripts: true
                    })
                }
            }]

        })



        var periodeStore = new Ext.data.Store ({

            autoLoad:true,
            url:'/humanresource/timesheet/getviewperiode',
            reader: new Ext.data.JsonReader ({
                root:'data',
                totalProperty:'total',
                fields:[{
                    name:'tahun',type:'String'
                },{
                    name:'periode'
                },{
                    name:'tgl_aw'
                },{
                    name:'tglak'
                },{
                    name:'periode_act'
                },{
                    name:'jumlah_jam_bulan'
                },{
                    name:'id'
                }]
            })

        })

        var periodeGrid = new Ext.grid.GridPanel({

            store:periodeStore,
            renderTo:'view_periode',
            frame:true,
            height:170,
            width:620,
            viewConfig:{

                forceFit:true
            },
            listeners:{
                'rowdblclick':function (gridaktif,rowIndex,e)
                {
                    isDbclick = true;

                    var barisgrid = gridaktif.getStore().getAt(rowIndex);
                    Ext.getCmp('edit-periode').getForm().loadRecord(barisgrid);
                }
            },
            columns:[{
                header:'Year',
                dataIndex:'tahun',
                sortable:true,
                align:'center'
            },{
                header:'Periode',
                dataIndex:'periode',
                sortable:true,
                align:'center'
            },{
                header:'Start Date',
                dataIndex:'tgl_aw',
                sortable:true,
                align:'center'
            },{
                header:'End Date',
                dataIndex:'tglak',
                sortable:true,
                align:'center'
            },{
                header:'Action',
                dataIndex:'periode_act',
                sortable:true,
                align:'center'
            },{
                header:'Hour per month',
                dataIndex:'jumlah_jam_bulan',
                sortable:true,
                align:'center'
            }],
            bbar:new Ext.PagingToolbar ({
                pageSize:5,
                store:periodeStore,
                displayInfo: true,
                displayMsg: 'Displaying data {0} - {1} of {2}',
                emptyMsg: "No data to display"
            })


        })


    })

</script>


    <div id="edit_periode" style="margin-bottom:10px"></div>
    <div id="view_periode"></div> 