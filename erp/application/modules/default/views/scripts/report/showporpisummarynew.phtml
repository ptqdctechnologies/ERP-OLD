<link rel="stylesheet" type="text/css" href="/css/table.css"/>

<script type="text/javascript">

var tranoPopUpHandler = function(button,event) {
        idForm = button.id.toString();
        Ext.getCmp('trano_text').setValue('');
    var aForm =  new Ext.Window({
            id: 'a-form-panel-trano_button',
            layout: 'absolute',
            minWidth: 300,
            minHeight: 200,
    stateful:false,
            modal: true,
            resizable: false,
            width: 400,
            height: 400,
    items : [
                {
                    x: 10,
                    y: 12,
                    xtype: 'label',
                    text: 'Trans No:'
                },
         new txtboks(80,10,120,'tra_no',searchTrano),
                new SampleGrid('trano3_list')
            ]

        });
        aForm.title = 'Choose PO Trano';
        aForm.show();
    };

var projectPopUphandler = function(button,event) {

        idForm = button.id.toString();
    var aForm =  new Ext.Window({
            id: 'a-form-panel-pjr_kode_button',
            layout: 'absolute',
            minWidth: 300,
            minHeight: 200,
    stateful:false,
            modal: true,
            resizable: false,
            width: 400,
            height: 400,
    items : [
                {
                    x: 10,
                    y: 12,
                    xtype: 'label',
                    text: 'Project Code:'
                },
         new txtboks(80,10,80,'project_code',searchPrjKode),
                {
                    x: 170,
                    y: 12,
                    xtype: 'label',
                    text: 'Project Name:'
                },
        new txtboks(240,10,80,'project_name',searchPrjName),
                new SampleGrid('project_listreport')
            ]

        });
        aForm.title = 'Choose Project';
        aForm.show();
    };

var sitePopUpHandler = function(button,event) {

        idForm = button.id.toString();
    var aForm =  new Ext.Window({
            id: 'a-form-panel-site_kode_button',
            layout: 'absolute',
            minWidth: 300,
            minHeight: 200,
            width: 400,
            height: 400,
    items : [
                {
                    x: 10,
                    y: 12,
                    xtype: 'label',
                    text: 'Site Code:'
                },
         new txtboks(80,10,80,'site_code',searchSiteKode),
                {
                    x: 170,
                    y: 12,
                    xtype: 'label',
                    text: 'Site Name:'
                },
        new txtboks(240,10,80,'site_name',searchSiteName),
                new SampleGrid('site_list')
            ]

        });
        aForm.title = 'Choose Site';
        aForm.show();
    };

var supplierPopUpHandler = function(button,event) {

        idForm = button.id.toString();
    var aForm =  new Ext.Window({
            id: 'a-form-panel-sup_kode_button',
            layout: 'absolute',
            minWidth: 300,
            minHeight: 200,
            width: 400,
            height: 400,
    items : [
                {
                    x: 10,
                    y: 12,
                    xtype: 'label',
                    text: 'Supplier Code:'
                },
         new txtboks(80,10,80,'sup_code',searchSupCode),
                {
                    x: 170,
                    y: 12,
                    xtype: 'label',
                    text: 'Supplier Name:'
                },
        new txtboks(240,10,80,'sup_name',searchSupName),
                new SampleGrid('suplier_list')
            ]

        });
        aForm.title = 'Choose Supplier';
        aForm.show();
    };

showPorpi = function(){
        myPanel = Ext.getCmp('abs-budget-panel');
        prjKode = Ext.getCmp('prj_kode_text').getValue();
        sitKode = Ext.getCmp('sit_kode_text').getValue();

        
        
        var supKode = Ext.getCmp('sup_kode_text').getValue(),
            trano = Ext.getCmp('trano_text').getValue();

        if (combo2.getRawValue() == 'With COD') {
            var params = {
                prj_kode: prjKode,
                sit_kode: sitKode,
                sup_kode: supKode,
                trano_kode: trano,
                cod: true,
            };
        } else {
            //urlLoad =  '/jasper/poppn/tgl1/' + stgl1 + '/tgl2/'+ stgl2 + '/type/' + combo.getValue();
            if (prjKode == '' && sitKode == '' && supKode == '' && trano == '')
            {
                Ext.MessageBox.show({
                       title: 'Error',
                       msg: 'Please Select Criteria!',
                       buttons: Ext.MessageBox.OK,
                       icon: Ext.MessageBox.ERROR
                   });
                 return false;
            }
            
            var params = {
                prj_kode: prjKode,
                sit_kode: sitKode,
                sup_kode: supKode,
                trano_kode: trano,
                cod: false,
            };
        }

        myPanel.body.load({
            url: '/report/porpisumdtlnew/' + Ext.util.urlEncodeZend(params),

            scripts: true
        });
    }
//    myPanel = Ext.getCmp('abs-budget-panel');
//    prjKode = Ext.getCmp('prj_kode_text').getValue();
//    sitKode = Ext.getCmp('sit_kode_text').getValue();
//    supKode = Ext.getCmp('sup_kode_text').getValue();
//    trano = Ext.getCmp('trano_text').getValue();
//
//    if (prjKode == '' && sitKode == '' && supKode == '' && trano == '')
//    {
//        Ext.MessageBox.show({
//               title: 'Error',
//               msg: 'Please Select Criteria!',
//               buttons: Ext.MessageBox.OK,
//               icon: Ext.MessageBox.ERROR
//           });
//         return false;
//    }
//      
//		if (prjKode != '' && sitKode != '')
//            urlLoad = '/report/porpisumdtl/prj_kode/' + prjKode + '/sit_kode/' + sitKode + '/param/detail-rpi';
//        if (supKode != '')
//            urlLoad = '/report/porpisumdtl/sup_kode/' + supKode + '/param/detail-rpi';
//        if (trano != '')
//            urlLoad = '/report/porpisumdtl/trano/' + trano + '/param/detail-rpi';
//
//
//	    myPanel.body.load({
//	        url: urlLoad,
//                scripts: true
//
//	});
//	}
//
    var datas = new Ext.data.SimpleStore({
    fields:['type','name']
//            ,data:[['pdf','PDF'],['xls','Excel']]
            ,data:[['xls','Excel']]
    });

var combo=new Ext.form.ComboBox({
        fieldLabel: 'Export'
    ,name:'showReport'
    ,store: datas
    ,valueField:'type'
    ,displayField:'name'
    ,typeAhead: true
    ,mode: 'local'
    ,triggerAction: 'all'
    ,value:'xls'
    ,selectOnFocus:true
    ,anchor:'95%'
    ,hiddenName:'type'
    ,width:70

    });

    var cod = new Ext.data.SimpleStore({
        fields: ['type', 'name']
         , data: [['nocod', 'Without COD'], ['yescod', 'With COD']]
    });

    var combo2 = new Ext.form.ComboBox({
        store: cod,
        valueField: 'type',
        displayField: 'name',
        typeAhead: true,
        mode: 'local',
        triggerAction: 'all',
        value: 'nocod',
        selectOnFocus: true,
        anchor: '95%',
        hiddenName: 'type',
        width: 100

    });

    exportToExcel = function(){
        prjKode = Ext.getCmp('prj_kode_text').getValue();
        sitKode = Ext.getCmp('sit_kode_text').getValue();
        supKode = Ext.getCmp('sup_kode_text').getValue();
        trano = Ext.getCmp('trano_text').getValue();
        
        if (combo2.getRawValue() == 'Without COD' || combo2.getRawValue() == '') {
            codd = false;
        } else {
            codd = true;
        }
        
        location.href = '/report/porpisumdtlnew/prj_kode/' + prjKode + '/sit_kode/' + sitKode + '/sup_kode/' + supKode 
                + '/trano_kode/' + trano + '/cod/' + codd +'/export/true';
    };
    
    exportReport = function () {
        myPanel = Ext.getCmp('abs-budget-panel');
        prjKode = Ext.getCmp('prj_kode_text').getValue();
        sitKode = Ext.getCmp('sit_kode_text').getValue();
        supKode = Ext.getCmp('sup_kode_text').getValue();
        
        if (combo2.getRawValue() == 'Without COD' || combo2.getRawValue() == '') {
            codd = false;
        } else {
            codd = true;
        }
        
        var downloadPrint = function()
        {
            var params = {
            prj_kode : prjKode,
            sit_kode : sitKode,
            sup_kode : supKode,
            export: true,
            cod: codd
            };


            url = '/report/porpisumdtlnew';

        downloadFile(url,params);
        }

        if (sitKode == '')
        {
//		Ext.MessageBox.show({
//	           title: 'Error',
//	           msg: 'Please Insert/Select Site Code!',
//	           buttons: Ext.MessageBox.OK,
//	           icon: Ext.MessageBox.ERROR
//	       });
//		 return false;

        Ext.MessageBox.confirm('Warning','Choosing only Project will be decreasing Server Performance, particularly project with many Sites. Continue?', function(btn){
                if (btn == 'yes')
                {
                downloadPrint(prjKode,sitKode,supKode);
                }
            });
        }
    else
        downloadPrint(prjKode,sitKode,supKode);

//	if (combo.getRawValue() == '')
//	{
//		Ext.MessageBox.show({
//	           title: 'Error',
//	           msg: 'Please Select Format!',
//	           buttons: Ext.MessageBox.OK,
//	           icon: Ext.MessageBox.ERROR
//	       });
//		 return false;
//	}
//	else
//	{
//            urlLoad = '/report/porpisumdtlnew/' + prjKode + '/sit_kode/' + sitKode + '/type/' + combo.getValue() + '/sup_kode/' + supKode;
//	}
//    myPanel.body.load({
//            url: url,
//            scripts: true
//
//        });
    };

var windowForm = ({
        title: 'PO to RPI Report',
        id: 'abs-budget-panel',
        layout: 'fit',
    bodyCfg : { cls:'xpanel-body-table' , style: {'overflow':'auto'}},
        bodyStyle: 'padding:15px;',
        minWidth: 300,
        minHeight: 200,
        loadMask: true,
    tbar:[
            {
                xtype: 'tbtext',
                text: 'Project Code'
            },
            {
            xtype:'textfield',
            id:'prj_kode_text',
            width:70
            },
            {
                xtype: 'button',
                id: 'prj_kode_button',
            cls:"x-btn-icon" ,
            icon:"/images/g_rec_src.png",
            handler:projectPopUphandler
        },'-',
            {
                xtype: 'tbtext',
                text: 'Site Code'
            },
            {
            xtype:'textfield',
            id:'sit_kode_text',
            width:70
            },
            {
                xtype: 'button',
                id: 'site_kode_button',
                cls: "x-btn-icon",
                icon: "/images/g_rec_src.png",
                handler: sitePopUpHandler
            }, '-',
            {
                xtype: 'tbtext',
                text: 'PO No'
            },
            {
            xtype:'textfield',
            id:'trano_text',
            width:100
            },
            {
                xtype: 'button',
                id: 'trano_button',
            cls:"x-btn-icon" ,
            icon:"/images/g_rec_src.png",
            handler:tranoPopUpHandler
        },'-',
            {
                xtype: 'tbtext',
                text: 'Supplier'
            },
            {
                xtype: 'textfield',
                id: 'sup_kode_text',
                width: 100
            },
            {
                xtype: 'button',
                id: 'supp_button',
                cls: "x-btn-icon",
                icon: "/images/g_rec_src.png",
                handler: supplierPopUpHandler
            },
            '-',
            {
                xtype: 'tbtext',
                text: 'COD'
            },
            combo2,
            {
                xtype: 'button',
                text: 'Show',
            width:70,
                id: 'show_budget',
            cls:"x-btn-text-icon" ,
            icon:"/images/icons/fam/control_rewind.png",
            handler:showPorpi
            },
            '-'
                    ,
            {
                xtype: 'button',
                id: 'export_button',
                text: 'Export To Xls',
                cls: "x-btn-text-icon",
                icon: "/images/print.png",
                handler: function ()
                {
                    exportToExcel();
                }
            }
        ]
    });

SampleGrid = function(gridType,yAxis,param){
        //View column header from grid/columnHeaader
        var yAxis = yAxis;
        if (gridType == 'project_listreport')
        {
        <?php echo $this->action('columnHeader','grid',null,array("type" => "project_listreport")); ?>

        urlJson = '<?php echo $this->action('getUrlJson','grid',null,array("type" => "project_listreport")); ?>';
        data =  [<?php echo $this->action('mappingField','grid',null,array("type" => "project_listreport")); ?>];
        primaryKey = '<?php echo $this->action('getPrimaryKey','grid',null,array("type" => "project")); ?>';
            Pk = primaryKey;
            widthGrid = 380;
            heightGrid = 250;
    }
    else if (gridType == 'site_list')
        {
        <?php echo $this->action('columnHeader','grid',null,array("type" => "site_list")); ?>
        if ( Ext.getCmp('prj_kode_text').getValue() == '')
            {urlJson = '<?php echo $this->action('getUrlJson','grid',null,array("type" => "site_list")); ?>';}
            else
            {urlJson = '<?php echo $this->action('getUrlJson','grid',null,array("type" => "site_list_param",'noParam' => '1','columnName'=>'prj_kode')); ?>' + Ext.getCmp('prj_kode_text').getValue();}
        data =  [<?php echo $this->action('mappingField','grid',null,array("type" => "site_list")); ?>];
        primaryKey = '<?php echo $this->action('getPrimaryKey','grid',null,array("type" => "site")); ?>';
            Pk = primaryKey;
            widthGrid = 380;
            heightGrid = 250;
    }
    else if (gridType == 'trano3_list')
        {
        <?php echo $this->action('columnHeader','grid',null,array("type" => "trano3_list")); ?>
        if ( Ext.getCmp('trano_text').getValue() == '')
            {urlJson = '<?php echo $this->action('getUrlJson','grid',null,array("type" => "trano3_list")); ?>';}
            else
            {urlJson = '<?php echo $this->action('getUrlJson','grid',null,array("type" => "trano3_list_param",'noParam' => '1','columnName'=>'trano')); ?>' + Ext.getCmp('trano_text').getValue();}
        data =  [<?php echo $this->action('mappingField','grid',null,array("type" => "trano3_list")); ?>];
        primaryKey = '<?php echo $this->action('getPrimaryKey','grid',null,array("type" => "poh")); ?>';
            Pk = primaryKey;
            widthGrid = 380;
            heightGrid = 250;
    }
    else if (gridType == 'suplier_list')
        {
        <?php echo $this->action('columnHeader','grid',null,array("type" => "suplier_list")); ?>

        urlJson = '<?php echo $this->action('getUrlJson','grid',null,array("type" => "suplier_list")); ?>';
        data =  [<?php echo $this->action('mappingField','grid',null,array("type" => "suplier_list")); ?>];
            primaryKey = 'sup_kode';
            Pk = primaryKey;
            widthGrid = 380;
            heightGrid = 250;
        }
        var stores = new Ext.data.Store({
        proxy:new Ext.data.HttpProxy({
                url: urlJson
            }),
            reader: new Ext.data.JsonReader({
                root: 'posts',
                totalProperty: 'count'
    },data)
        });

        if (yAxis == undefined)
    yAxis=100;
        SampleGrid.superclass.constructor.call(this, {
            store: stores,
            columns: columns,
        x:0,
        y:yAxis,
        id:primaryKey+'_grid',
            loadMask: true,
        bbar:[ new Ext.PagingToolbar({
                    pageSize: 100,
                    store: stores,
                    displayInfo: true,
                    displayMsg: 'Displaying data {0} - {1} of {2}',
                    emptyMsg: "No data to display"
                })],
        height:heightGrid,
        width:widthGrid,
            listeners: {
                    'rowdblclick': function(g, rowIndex, e){
                    closeForm = false;
                    isDblClick = true;
                    if (gridType == 'project_listreport')
                    {
                        objectName = 'Prj_Kode';
                        txtBoxChange = 'prj_kode_text';
                        closeForm = true;
                        formId = 'a-form-panel-pjr_kode_button';
                        var prjKode = g.getStore().getAt(rowIndex).get(objectName);
                        newUrl = '/procurement/listByParamsNew/name/prj_kode/data/' + prjKode;
                        prox = 'trano_proxy';
                        gri = 'trano_grid';
                        var record = g.getStore().getAt(rowIndex).get(objectName);
                        Ext.getCmp('prj_kode_text').setValue(record);
//                        Ext.getCmp('sup_kode_text').setValue('');
                        Ext.getCmp('trano_text').setValue('');
                            }
                            else if (gridType == 'site_list')
                    {
                        objectName = 'sit_kode';
                        txtBoxChange = 'sit_kode_text';
                        closeForm = true;
                        formId = 'a-form-panel-site_kode_button';
                        var prjNama = g.getStore().getAt(rowIndex).get('sit_nama');
                        var prjKode = g.getStore().getAt(rowIndex).get('prj_kode');
                        var sitKode = g.getStore().getAt(rowIndex).get(objectName);
                        newUrl = '/procurement/listByParamsNew/name/sit_kode/joinToPod/true/data/' + sitKode + '/Prj_Kode/' + prjKode;
                        prox = 'trano_proxy';
                        gri = 'trano_grid';
                        var record = g.getStore().getAt(rowIndex).get(objectName);
                        Ext.getCmp('sit_kode_text').setValue(record);
//                        Ext.getCmp('sup_kode_text').setValue('');
                        Ext.getCmp('trano_text').setValue('');
                            }
                            else if (gridType == 'trano3_list')
                    {
                        objectName = 'trano';
                        txtBoxChange = 'trano_text';
                        closeForm = true;
                        formId = 'a-form-panel-trano_button';

                        var noTrans = g.getStore().getAt(rowIndex).get(objectName);
                                newUrl = '/procurement/listByParamsNew/name/trano/poh/true/data/' + noTrans ;
                        prox = 'trano_proxy';
                        gri = 'trano_grid';

                        var record = g.getStore().getAt(rowIndex).get(objectName);
                        Ext.getCmp('trano_text').setValue(record);
                        Ext.getCmp('prj_kode_text').setValue('');
                        Ext.getCmp('sit_kode_text').setValue('');
                        Ext.getCmp('sup_kode_text').setValue('');
                               }
                            else if (gridType == 'suplier_list')
                    {
                        objectName = 'sup_kode';
                        txtBoxChange = 'sup_kode_text';
                        closeForm = true;
                        formId = 'a-form-panel-sup_kode_button';
                        var supKode = g.getStore().getAt(rowIndex).get(objectName);
                        newUrl = '/suplier/listByParamsNew/name/supl_kode/data/' + supKode;
                        prox = 'trano_proxy';
                        gri = 'trano_grid';
                        var record = g.getStore().getAt(rowIndex).get(objectName);
                        var record2 = g.getStore().getAt(rowIndex).get("sup_nama");
                        Ext.getCmp('sup_kode_text').setValue(record);
                        if (Ext.getCmp('sup_nama_text') != undefined)
                            Ext.getCmp('sup_nama_text').setValue(record2);
                        Ext.getCmp('trano_text').setValue('');
//                        Ext.getCmp('prj_kode_text').setValue('');
//                        Ext.getCmp('sit_kode_text').setValue('');
                    }
                    if (closeForm)
                    {
                        Ext.getCmp(formId).close();
                    }

                            window.setTimeout(function(){
                        isDblClick = false;
                    }, 0);
                }
            }
        });
        stores.load();

    }
    Ext.extend(SampleGrid, Ext.grid.GridPanel);

<?php echo $this->action('index','textfield',null); ?>
searchPrjKode = function(field,e){
    newUrl = '/project/listByParamsProject/name/Prj_Kode/data/' + field.getValue();    prox = Pk+'_proxy';
    gri = Pk+'_grid';
        proxies = Ext.getCmp(gri).getStore();
        proxies.proxy = new Ext.data.HttpProxy({
            url: newUrl
        });
        Ext.getCmp(gri).getStore().reload();

    }
searchPrjName = function(field,e){
    newUrl = '/project/listByParamsProject/name/Prj_Nama/data/' + field.getValue();    prox = Pk+'_proxy';
    gri = Pk+'_grid';
        proxies = Ext.getCmp(gri).getStore();
        proxies.proxy = new Ext.data.HttpProxy({
            url: newUrl
        });
        Ext.getCmp(gri).getStore().reload();

    }

searchSiteName = function(field,e){
    newUrl = '/site/listByParamsNew/name/sit_nama/data/' + field.getValue();    prox = Pk+'_proxy';
    gri = Pk+'_grid';
        proxies = Ext.getCmp(gri).getStore();
        proxies.proxy = new Ext.data.HttpProxy({
            url: newUrl
        });
        Ext.getCmp(gri).getStore().reload();

    }
searchSiteKode = function(field,e){
    newUrl = '/site/listByParamsNew/name/sit_kode/data/' + field.getValue();    prox = Pk+'_proxy';
    gri = Pk+'_grid';
        proxies = Ext.getCmp(gri).getStore();
        proxies.proxy = new Ext.data.HttpProxy({
            url: newUrl
        });
        Ext.getCmp(gri).getStore().reload();

    }
searchTrano = function(field,e){
    newUrl = '/poh/listByParamsNew/name/trano/data/' + field.getValue(); prox = Pk+'_proxy';
    gri = Pk+'_grid';
        proxies = Ext.getCmp(gri).getStore();
        proxies.proxy = new Ext.data.HttpProxy({
            url: newUrl
        });
        Ext.getCmp(gri).getStore().reload();

    }
searchSupCode = function(field,e){
        if (field.getValue().toString().length >= 2)
        {
        newUrl = '/suplier/listByParamsNew/name/sup_kode/data/' + field.getValue();    prox = Pk+'_proxy';
        gri = Pk+'_grid';
            proxies = Ext.getCmp(gri).getStore();
            proxies.proxy = new Ext.data.HttpProxy({
                url: newUrl
            });
            Ext.getCmp(gri).getStore().reload();
        }
    }
searchSupName = function(field,e){
        if (field.getValue().toString().length >= 2)
        {
        newUrl = '/suplier/listByParamsNew/name/sup_nama/data/' + field.getValue();    prox = Pk+'_proxy';
        gri = Pk+'_grid';
            proxies = Ext.getCmp(gri).getStore();
            proxies.proxy = new Ext.data.HttpProxy({
                url: newUrl
            });
            Ext.getCmp(gri).getStore().reload();
        }
    }

var aForm =  new Ext.Window({
        id: 'a-form-panel-1',
        layout: 'absolute',
        minWidth: 300,
        minHeight: 200,
    closable:false,
        width: 400,
        height: 400,
        items: [
            {
                x: 10,
                y: 12,
                xtype: 'label',
                text: 'Project Code:'
            },
         new txtboks(80,10,80,'project_code',searchPrjKode),
            {
                xtype: 'panel',
                x: 150,
                y: 11,
                items: {
                    xtype: 'button',
                    id: 'site_kode_button',
                cls:"x-btn-icon" ,
                icon:"/images/g_rec_src.png"
                }
            },
            {
                x: 170,
                y: 12,
                xtype: 'label',
                text: 'Project Name:'
            },
        new txtboks(240,10,80,'project_name',searchPrjName),
            new SampleGrid('project_listreport')
        ]

    });


    viewPort = Ext.getCmp('viewport');

    centerRegionTab = viewPort.getComponent('content-panel');
 centerRegionTab.items.each(function(c){centerRegionTab.remove(c);})
    centerRegionTab.add(windowForm);
    panelBaru = Ext.getCmp('abs-budget-panel');
    centerRegionTab.layout.setActiveItem('abs-budget-panel');
</script>


