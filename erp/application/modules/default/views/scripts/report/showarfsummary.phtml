
<script type="text/javascript" src="/js/layout/base/iconcomboext.js"></script>

<script type="text/javascript">

 showBudget = function(){
    myPanel = Ext.getCmp('abs-budget-panel');
    prjKode = Ext.getCmp('prj_kode_text').getValue();
    sitKode = Ext.getCmp('sit_kode_text').getValue();
    combos = Ext.getCmp('combo-petugas').getValue();
     workid = Ext.getCmp('workid_text').getValue();
     kode_brg = Ext.getCmp('kode_brg').getValue();

     var petugas;
		var urlLoad;
	    if (combos != '' && combos != 'NODATA')
		    petugas = '/requestor/' + combos;
	    else
		    petugas = '';
	    	   
	    if (prjKode == '' && combos == '')
		{
			Ext.MessageBox.show({
		           title: 'Error',
		           msg: 'Please Insert/Select Project Code!',
		           buttons: Ext.MessageBox.OK,
		           icon: Ext.MessageBox.ERROR
		       });
			 return false;	

		}

     urlLoad = '/report/arfsummary';

     if (prjKode != '' || prjKode != undefined)
         urlLoad += '/prj_kode/' + prjKode;

     if (prjKode != '' && (sitKode != '' || sitKode != undefined))
         urlLoad += '/sit_kode/' + sitKode;

     if (kode_brg != '' || kode_brg != undefined)
         urlLoad += '/kode_brg/' + kode_brg;

     if (workid != '' || workid != undefined)
         urlLoad += '/workid/' + workid;
        
	    myPanel.body.load({
	        url: urlLoad,
                scripts: true

	});
}
 
var datas = new Ext.data.SimpleStore({
    fields:['type','name']
            ,data:[['pdf','PDF'],['xls','Excel']]
        });

var combo=new Ext.form.ComboBox({
    fieldLabel: 'Export'
    ,name:'showReport'
    ,store: datas
    ,valueField:'type'
    ,displayField:'name'
    ,typeAhead: true
    ,mode: 'local'
    ,triggerAction: 'all'
    ,value: 'pdf'
    ,emptyText:'Select..'
    ,selectOnFocus:true
    ,anchor:'95%'
    ,hiddenName:'type'
    ,width:70
    
});

exportReport = function(){
	myPanel = Ext.getCmp('abs-budget-panel');
    prjKode = Ext.getCmp('prj_kode_text').getValue();
    sitKode = Ext.getCmp('sit_kode_text').getValue();

    combos = Ext.getCmp('combo-petugas').getValue();
    var petugas;

    if (combos != '' && combos != 'NODATA')
	    petugas = '/requestor/' + combos;
    else
	    petugas = '';
    
    if (prjKode == '' && combos == '')
	{
		Ext.MessageBox.show({
	           title: 'Error',
	           msg: 'Please Insert/Select Project Code/Site Code!',
	           buttons: Ext.MessageBox.OK,
	           icon: Ext.MessageBox.ERROR
	       });
		 return false;	

	}
	if (combo.getRawValue() == '')
	{
		Ext.MessageBox.show({
	           title: 'Error',
	           msg: 'Please Select Format!',
	           buttons: Ext.MessageBox.OK,
	           icon: Ext.MessageBox.ERROR
	       });
		 return false;		
	}
	else
	{
		if (sitKode == '' && prjKode != '')
			urlLoad =  '/jasper/arfsummary/prj_kode/' + prjKode  + '/type/' + combo.getValue() + petugas;
		else if (sitKode != '' && prjKode != '')
			urlLoad =  '/jasper/arfsummary/prj_kode/' + prjKode + '/sit_kode/' + sitKode + '/type/' + combo.getValue() + petugas;
		else if (sitKode == '' && prjKode == '')
			urlLoad =  '/jasper/arfsummary/type/' + combo.getValue() + petugas;
		
	}
    window.open(urlLoad,'mywin',
    'left=20,top=20,width=100,height=20,toolbar=0,resizable=0');
};

var windowForm =  ({

    title: 'ARF Summary Report',
    id: 'abs-budget-panel',
    layout: 'fit',
    bodyCfg : { cls:'xpanel-body-table' , style: {'overflow':'auto'}},
    bodyStyle: 'padding:15px;',
    minWidth: 300,
    minHeight: 200,
    loadMask: true,
    tbar:[
        {
            xtype: 'tbtext',
            text: 'Project Code'
        },
        {
            xtype: 'projectselectorreport',
            anchor: '100%',
            id: 'project-select',
            Selectid: 'prj_kode_text',
            Nameid: 'prj_nama_text',
            ShowName: false,
            ShowAll: true,
            callback: function(params){
                Ext.getCmp('sit_kode_text').setValue('');
            }
        },
        '-',
        {
            xtype: 'tbtext',
            text: 'Site Code'
        },
        {
            fieldLabel:'Site Code ',
            xtype: 'siteselector',
            id: 'site-select',
            ProjectSelectid: 'prj_kode_text',
            SiteSelectid: 'sit_kode_text',
            SiteNameid: 'sit_nama_text',
            ShowName: false,
            noOverhead: false,
            callback: function(params){
            }
        },
        '-',
        {
            xtype: 'tbtext',
            text: 'Work ID'
        },
        {
            xtype: 'workidselector',
            id: 'workid',
            Selectid: 'workid_text',
            width: 100,
            showName: false
        },
        '-',
        {
            xtype: 'tbtext',
            text: 'Product ID'
        },
        {
            xtype: 'itemselector',
            id: 'kode_brg',
            Selectid: 'kode_brg_text',
            width: 100,
            showAll: true,
            nopmeal: false
        },
        '-',
        {
            xtype: 'tbtext',
            text: 'Requestor'
        },
        {
            hiddenName : 'petugas',
            id: 'combo-petugas',
            xtype: 'combo',
            triggerAction: 'all',
            forceSelection:true,
            pageSize:10,
            typeAhead: true,
            mode: 'remote',
            displayField: 'petugas',
            valueField: 'id',
            store: new Ext.data.JsonStore({
                autoLoad: true,
                url: '/default/arfh/listrequestor',
                root: 'posts',
                totalProperty: 'count',
                 fields:[
                     { name: "petugas"},{ name: "id"}
                 ]
            })
            },
        {
            xtype: 'button',
            text: 'Show',
            width:70,
            id: 'show_budget',
            cls:"x-btn-text-icon" ,
            icon:"/images/icons/fam/control_rewind.png",
            handler:showBudget
        },
        '-'
        ,
        combo,
        {
            xtype: 'button',
            id: 'export_button',
            cls:"x-btn-icon" ,
            icon:"/images/print.png",
            handler:exportReport
        }
    ]
});

  viewPort = Ext.getCmp('viewport');

 centerRegionTab = viewPort.getComponent('content-panel');
 centerRegionTab.items.each(function(c){centerRegionTab.remove(c);})
 centerRegionTab.add(windowForm);
 panelBaru = Ext.getCmp('abs-budget-panel');
 centerRegionTab.layout.setActiveItem('abs-budget-panel');

</script>

