<script type="text/javascript">

    function goToPO (trano){
    	    myPanel = Ext.getCmp('abs-budget-panel');
    	    myPanel.body.load({
    	        url: '/projectmanagement/budget/editpraco/trano/' + trano,
    	        scripts : true
            });
    	}

    function viewCO (trano){
    	    myPanel = Ext.getCmp('abs-budget-panel');
    	    myPanel.body.load({
    	        url: '/projectmanagement/budget/apppraco/view/true/approve/true/doc_id/' + trano,
    	        scripts : true
            });
    	}

Ext.onReady(function(){

    var expander = new Ext.ux.grid.RowExpander({
        tpl : new Ext.Template(
            '<div style="margin-left:50px;"><p><b>Customer Name:</b> {cus_nama}</p><br>',
            '<p><b>Project Manager Name:</b> {mgr_nama}</p><br>'
            
        )
    });

    var poolList = Ext.data.Record.create ([
        {name: 'id'},
        {name: 'trano'},
        {name: 'cus_kode'},
        {name: 'mgr_kode'},
        {name: 'cus_nama'},
        {name: 'mgr_nama'},
        {name: 'ket'},
        {name: 'balance_total'},
        {name: 'total_idr'},
        {name: 'total_usd'},
        {name: 'po_cus'},
        {name: 'source'}
    ]);

	var store = new Ext.ux.data.PagingJsonStore({
        idProperty: 'id',
        totalProperty: 'count',
        root : 'posts',
        fields: poolList,
        listeners:
        {
            'load' :function(st,rec,opt) {
                if (st.reader.jsonData != undefined)
                    Ext.getCmp('label-last-upd').setText('Last Updated : <font color="red">' + st.reader.jsonData.time + '</font>',false);
            }
        },
        autoLoad: {params: {start: 0, limit: 50}},
        url: '/pool_praco.json'
    });
//	store.load();
    searchDocument = function(){

        var docs = Ext.getCmp('document-text').getValue();
        store.removeAll();
        Ext.Ajax.request({
            results: 0,
            url: '/default/home/searchpool/pool/pool_praco.json/trano/' + docs,
            method:'POST',
            success: function(result, request){
               var returnData = Ext.util.JSON.decode(result.responseText);
                Ext.each(returnData.posts, function(op) {
                var c = new poolList ({
                    trano : op['trano'],
                    id: op['id'],
                    cus_kode: op['cus_kode'],
                    cus_nama: op['cus_nama'],
                    mgr_kode: op['mgr_kode'],
                    mgr_nama: op['mgr_nama'],
                    ket: op['ket'],
                    total_idr: op['total_idr'],
                    total_usd: op['total_usd'],
                    po_cus: op['po_cus'],
                    source: op['source']
                    
                });
                store.add(c);
            });
            }
        });
//        store.clearFilter();
//        store.filterBy(function(record,id)
//        {
//            reg = new RegExp(docs, "gi");
//            if(reg.test(record.data['trano']))
//            {
//                return true;
//            }
//        });
    	Ext.getCmp('all-pr-grids').getStore().reload();
    	Ext.getCmp('all-pr-grids').getView().refresh();
    };

    refreshGrid = function(){
        store.clearFilter();
        Ext.getCmp('document-text').setValue('');
        Ext.getCmp('paging').doRefresh();
    }


	var grid = new Ext.grid.GridPanel({
        store: store,
        id: 'all-pr-grids',
        stateful: false,
        loadMask: true,
        title: 'Pool Pending Customer PO',
        columns: [
            new Ext.grid.RowNumberer(),
            expander,
            {header: "",width: 30, dataIndex: 'trano',css:'text-align:center;',renderer: function (v,p,r) {
                    return '<a href="#" onclick="goToPO(\'' + v + '\');"><img src="/images/g_rec_upd.png"></a>';
            }},
            {header: "",width: 30, dataIndex: 'trano',css:'text-align:center;',renderer: function (v,p,r) {
                    return '<a href="#" onclick="viewCO(\'' + v + '\');"><img src="/images/list.png"></a>';
            }},
            {header: "Trano", width: 100, sortable: true, dataIndex: 'trano'},
            {header: "Customer Code", width: 80, sortable: true, dataIndex: 'cus_kode'},
            {header: "Assign To", width: 70, sortable: true, dataIndex: 'mgr_kode'},
            {header: "PO Customer", width: 90, sortable: true, dataIndex: 'po_cus'},
            {header: "Total IDR", width: 100, sortable: true, dataIndex: 'total_idr',css:'text-align:right;'},
            {header: "Total USD", width: 100, sortable: true, dataIndex: 'total_usd',css:'text-align:right;'},
            {header: "Description", width: 100, sortable: true, dataIndex: 'ket'},
            {header: "Confirmation From", width: 150, sortable: true, dataIndex: 'source'}
       ],
        frame:true,
        height: 400,
        width: 650,
        plugins: expander,
        layout: 'fit',
        renderTo: 'grids',
        loadMask: true,
        bbar: new Ext.PagingToolbar({
            id: 'paging',
            pageSize: 50,
            store: store,
            displayInfo: true,
            displayMsg: 'Displaying data {0} - {1} of {2}',
            emptyMsg: "No data to display"
        }),
        tbar: [
				{
					text: 'Trano',
					xtype:'label',
				    style: 'margin-right: 5px'
				},
				{
					xtype: 'textfield',
					id: 'document-text'
				},
				{
				    text: 'Search',
				    iconCls: 'search-icon',
				    handler: searchDocument,
				    scope: this
				},
                '-',
                {
				    text: 'refresh',
				    iconCls: 'icon-refresh',
				    handler: refreshGrid,
				    scope: this
				},
                '->',
                {
					text: '',
					xtype:'label',
				    style: 'margin-right: 5px',
                    id:'label-last-upd'
				}
               ]
    });

    Ext.override(Ext.PagingToolbar, {
    doRefresh: function(){
        store.clearFilter();
        Ext.getCmp('document-text').setValue('');
        delete this.store.lastParams;
        this.doLoad(this.cursor);
    }
    });

//
//    Ext.TaskMgr.start({
//    run: function(){
//        var menuTree = Ext.getCmp('tree-panel');
//        if (Ext.getCmp('all-pr-grids') != undefined)
//        {
//            store.clearFilter();
//            Ext.getCmp('document-text').setValue('');
////            store.removeAll();
//            store.load();
//            Ext.getCmp('all-pr-grids').getView().refresh();
//        }
//        else
//        {
//            console.log('stop');
//            Ext.TaskMgr.stop(this);
//        }
//    },
//    interval: 35000
//    });

});

</script>

<div id="grids"></div>