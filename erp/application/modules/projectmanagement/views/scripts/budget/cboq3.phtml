<script type="text/javascript">
    Ext.onReady(function() {
    Ext.QuickTips.init();

    <?php echo $this->action('index','textfield',null); ?>

	function showCboq3Choose(num)
	{
		var bForm =  new Ext.Window({
		    id: 'b-form-panel-trano_button',
		    layout:'fit',
		    width: 350,
		    height: 100,
		    style: 'margin-top: 10px',
		    labelAlign: 'right',
		    stateful: false,
	        modal: true,
	        resizable: false,
		    items: [
					new Ext.form.FormPanel({
						frame: true,
                        labelWidth : 150,
//                        labelPad : 7,
						items: [{
								    fieldLabel : 'CBOQ3 Number',
								    id : 'cboq3_no_text',
								    xtype: 'trigger',
			                        allowBlank: false,
			                        editable : false,
			                        value: num,
								    onTriggerClick:
			                            function ()
			                            {
                            				bForm.close();
											showCboq3List();
			                            },
			                    	scope: this,
			                    	width: 150
						    	}]
						})

				    ],
		    buttons: [
		              {
	 			         text: 'Edit',
	 			         id: 'save',
	 			         iconCls: 'silk-upd',
	 			         handler: function(btn, ev) {
		 			        var cboq3no = Ext.getCmp('pmeal_no_text').getValue();
		 			        if (cboq3no != undefined)
		 			        {
				          	    myPanel = Ext.getCmp('abs-budget-panel');
				          	    myPanel.body.load({
				          	        url: '/projectmanagement/budget/editcboq3/trano/' + cboq3no,
				          	        scripts : true
				                  });
		 			        }
		 			        bForm.close();
			              }

		              },
		              {
	 			         text: 'Cancel',
	 			         id: 'cancel',
	 			         handler: function(btn, ev) {
		 			         bForm.close();
			              }

		              }


			  		    ]
		});

		bForm.show();
	}

    function showCboq3List()
    {
        var columns = [ {header:'No Trans',width:120,sortable:true,dataIndex:'notran'},
                        {header:'Project ID',width:80,sortable:true,dataIndex:'prj_kode'},
                        {header:'Project Name',width:170,sortable:true,dataIndex:'prj_nama'},
                        {header:'Site Code',width:55,sortable:true,dataIndex:'sit_kode'},
                        {header:'Site Name',width:100,sortable:true,dataIndex:'sit_nama'},
                    ];

        urlJson = '/pmeal/list';
        data =  [
                {name: 'notran', mapping: 'notran'},
                {name: 'prj_kode', mapping: 'prj_kode'},
                {name: 'prj_nama', mapping: 'prj_nama'},
                {name: 'sit_kode', mapping: 'sit_kode'},
                {name: 'sit_nama', mapping: 'sit_nama'},
                {name: 'prj_nama', mapping: 'prj_nama'},];
        primaryKey = 'notran';
        Pk = primaryKey;
        widthGrid = 380;
        heightGrid = 250;

        var stores = new Ext.data.Store({
            proxy:new Ext.data.HttpProxy({
            url: urlJson
             }),
            reader: new Ext.data.JsonReader({
            root: 'posts',
            totalProperty: 'count'
        },data)
            });

        yAxis=100;
        grids = function()
        {
            grids.superclass.constructor.call(this, {
            store: stores,
            columns: columns,
            x:0,
            y:yAxis,
            id:primaryKey+'_grid',
            loadMask: true,
            bbar:[ new Ext.PagingToolbar({
                pageSize: 100,
                store: stores,
                displayInfo: true,
                displayMsg: 'Displaying data {0} - {1} of {2}',
                emptyMsg: "No data to display"
            })],
            height:heightGrid,
            width:widthGrid,
            listeners: {
                'rowdblclick': function(g, rowIndex, e){
                                closeForm = false;
                                isDblClick = true;
                                objectName = 'notran';
                                txtBoxChange = 'trano_text';
                                closeForm = true;
                                formId = 'a-form-panel-trano_button';
                                prox = 'trano_proxy';
                                gri = 'trano_grid';
                                var trano = g.getStore().getAt(rowIndex).get(objectName);
                                showPmealChoose(trano);
                                Ext.getCmp('pmeal_no_text').setValue(trano);
                                aForm.close();
								window.setTimeout(function(){
                                        isDblClick = false;
                                }, 0);
                        }
                }
        });
        }
        stores.load();

        Ext.extend(grids, Ext.grid.GridPanel);
        Ext.extend(txtboks,Ext.form.TextField);//PR
        searchTrano = function(field,e){
            newUrl = '/pmeal/listByParams/name/notran/data/' + field.getValue(); prox = Pk+'_proxy';
            gri = Pk+'_grid';
            proxies = Ext.getCmp(gri).getStore();
            proxies.proxy = new Ext.data.HttpProxy( {
                url: newUrl
                 });
            Ext.getCmp(gri).getStore().reload();
        };
        searchPrj_kode = function(field,e){
            newUrl = '/pmeal/listByParams/name/prj_kode/data/' + field.getValue(); prox = Pk+'_proxy';
            gri = Pk+'_grid';
            proxies = Ext.getCmp(gri).getStore();
            proxies.proxy = new Ext.data.HttpProxy( {
                url: newUrl
                 });
            Ext.getCmp(gri).getStore().reload();
    };
        searchSit_kode = function(field,e){
            newUrl = '/pmeal/listByParams/name/sit_kode/data/' + field.getValue(); prox = Pk+'_proxy';
            gri = Pk+'_grid';
            proxies = Ext.getCmp(gri).getStore();
            proxies.proxy = new Ext.data.HttpProxy( {
                url: newUrl
                 });
            Ext.getCmp(gri).getStore().reload();
    };

        var aForm =  new Ext.Window({
        id: 'a-form-panel-trano_button',
        layout: 'absolute',
        minWidth: 300,
        minHeight: 200,
        stateful:false,
        modal: true,
        resizable: false,
        width: 400,
        height: 400,
        items : [
            {
            x: 6,
            y: 12,
            xtype: 'label',
            text: 'No Trans'
            },
           new txtboks(80,10,80,'trans_no',searchTrano),
           {
               x : 6,
               y: 52,
               xtype: 'label',
               text: 'Project Code'
               },
              new txtboks(80,50,80,'prj_kode',searchPrj_kode),
           {
                 x: 165,
                 y: 52,
            	xtype: 'label',
                text: 'Site Code'
                  },
                 new txtboks(240,50,80,'sit_kode',searchSit_kode),
             {
            x: 384,
            y: 12,
            xtype: 'label',
            text: ''
            }
            ,new grids('pr_list')
        ]

      });
      aForm.title = 'Choose No Trans';
      aForm.show();


    }

    showAddCboq3 = function(){
	    myPanel = Ext.getCmp('abs-budget-panel');
	    myPanel.body.load({
	        url: '/projectmanagement/budget/addcboq3',
	        scripts : true
        });
	};

     showAllAFE = function(){
	    myPanel = Ext.getCmp('abs-budget-panel');
	    myPanel.body.load({
	        url: '/projectmanagement/budget/allafe',
	        scripts : true
        });
	};

	showEditCboq3 = function(){
			showCboq3Choose();
	};

	showAppCboq3 = function(){
	    myPanel = Ext.getCmp('abs-budget-panel');
	    myPanel.body.load({
	        url: '/default/home/showprocessdocument/type/CBOQ3',
	        scripts : true
        });
	};


    var windowForm =  ({

    title: 'CBOQ3 Transaction',
    id: 'abs-budget-panel',
    layout: 'fit',
    bodyCfg : { cls:'xpanel-body-table' , style: {'overflow':'auto'}},
    bodyStyle: 'padding:15px;',
    loadMask: true,
    minWidth: 300,
    minHeight: 200,
    tbar: [
			{
			    xtype: 'tbbutton',
			    text: 'Select Action',
			    iconCls: 'menu-drop',
			    menu: {

			    items: [
						{
						    id: 'cboq_add_button',
						    text: 'create new CBOQ3',
						    cls:"x-btn-text-icon" ,
						    icon:"/images/icons/fam/action_paste.gif",
						    handler:showAddCboq3
						},
                        {
						    id: 'cboq_list_button',
						    text: 'List Approved AFE',
						    cls:"x-btn-text-icon" ,
						    icon:"/images/icons/fam/action_paste.gif",
						    handler:showAllAFE
						}
//						,{
//						    id: 'edit_button',
//						    text: 'Edit CBOQ3',
//						    cls:"x-btn-text-icon" ,
//						    icon:"/images/icons/fam/page_edit.gif",
//						    handler:showEditCboq3
//						}
//                        {
//						    id: 'app_button',
//						    text: 'Verify & Approval',
//						    cls:"x-btn-text-icon" ,
//						    icon:"/images/icons/fam/page_script.gif",
//						    handler:showAppCboq3
//						}
						]
				}
			}
         ]
    });


viewPort = Ext.getCmp('viewport');

centerRegionTab = viewPort.getComponent('content-panel');
centerRegionTab.items.each(function(c){centerRegionTab.remove(c);});
centerRegionTab.add(windowForm);
panelBaru = Ext.getCmp('abs-budget-panel');
centerRegionTab.layout.setActiveItem('abs-budget-panel');
        showSubmenu('abs-budget-panel');
});
</script>