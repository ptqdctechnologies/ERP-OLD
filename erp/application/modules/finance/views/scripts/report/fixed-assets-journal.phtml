<script type="text/javascript">

    Ext.onReady(function() {

        Ext.QuickTips.init();

        Ext.apply(Ext.form.VTypes, {
            daterange: function(val, field) {
                var date = field.parseDate(val);

                if (!date) {
                    return false;
                }
                if (field.startDateField && (!this.dateRangeMax || (date.getTime() != this.dateRangeMax.getTime()))) {
                    var start = Ext.getCmp(field.startDateField);
                    start.setMaxValue(date);
                    start.validate();
                    this.dateRangeMax = date;
                }
                else if (field.endDateField && (!this.dateRangeMin || (date.getTime() != this.dateRangeMin.getTime()))) {
                    var end = Ext.getCmp(field.endDateField);
                    end.setMinValue(date);
                    end.validate();
                    this.dateRangeMin = date;
                }
                /*
                 * Always return true since we're only using this vtype to set the
                 * min/max allowed values (these are tested for after the vtype test)
                 */
                return true;
            }
        });

        function showkategori()
        {
            var kategoristore = new Ext.data.Store({
                autoLoad: true,
                url: '/finance/kategoriasset/getkategoriasset',
                reader: new Ext.data.JsonReader({
                    root: 'data',
                    totalProperty: 'total',
                    fields: [{
                            name: 'id'
                        }, {
                            name: 'kode_ktfa'
                        }, {
                            name: 'nama'
                        }, {
                            name: 'coa_debit'
                        }, {
                            name: 'coa_credit'
                        }]
                })

            })

            var kategorigrid = new Ext.grid.GridPanel({
                store: kategoristore,
                viewConfig: {
                    forceFit: true
                },
                height: 300,
                columns: [{
                        header: 'Kode Kategori',
                        dataIndex: 'kode_ktfa',
                        align: 'center',
                        sortable: true
                    }, {
                        header: 'Name',
                        dataIndex: 'nama',
                        align: 'center',
                        sortable: true
                    }],
                bbar: new Ext.PagingToolbar({
                    id: 'paging-coa',
                    pageSize: 20,
                    store: kategoristore,
                    displayInfo: true,
                    displayMsg: 'Displaying data {0} - {1} of {2}',
                    emptyMsg: "No data to display"
                }),
                listeners:
                        {
                            'rowdblclick': function(gridaktif, rowIndex, e)
                            {
                                isDbClick = true;
                                var kategori = gridaktif.getStore().getAt(rowIndex);
                                var kode = kategori.get('kode_ktfa');
                                var nama = kategori.get('nama');
                                //                        var coa_name = coa.get('coa_nama');
                                Ext.getCmp('kode_kategori').setValue(kode);
//                                Ext.getCmp('kode_kategori').setRawValue(nama);
                                //                        Ext.getCmp('coa-name').setValue(coa_name);

                                kategoriwindow.close();

                            }
                        }
            })


            var kategoriwindow = new Ext.Window({
                title: 'Kategori List',
                id: 'kategori-list-window',
                layout: 'absolute',
                minHeight: 200,
                stateful: false,
                modal: true,
                resizable: false,
                closeAction: 'close',
                width: 432,
                height: 330,
                loadMask: true,
                items: [
                    kategorigrid
                ]

            })

            kategoriwindow.show();
        }

        var windowForm = new Ext.Panel({
            title: 'Fixed Assets Journal Report',
            id: 'abs-budget-panel',
            layout: 'fit',
            bodyCfg: {cls: 'xpanel-body-table', style: {'overflow': 'auto'}},
            bodyStyle: 'padding:15px;',
            loadMask: true,
            minWidth: 300,
            minHeight: 200,
            tbar: [
                {
                    xtype: 'label',
                    text: 'Type'
                }, '-',
                new Ext.form.ComboBox({
                    id: 'jurnal_type',
                    store: new Ext.data.SimpleStore({
                        fields: ['type', 'name']
                        , data: [['transaction', 'Transaction'], ['closing', 'Closing']]
                    })
                    , valueField: 'type'
                    , displayField: 'name'
                    , typeAhead: false
                    , editable: false
                    , mode: 'local'
                    , triggerAction: 'all'
                    , value: ''
                    , emptyText: 'Select..'
                    , selectOnFocus: true
                    , anchor: '95%'
                    , hiddenName: 'type'
                    , width: 100
//                    ,allowBlank: false
                    , listeners: {
                        'select': function(combo, record, index)
                        {
                            if (record.data.type == 'transaction') {
                                Ext.getCmp('perkode_text').hide();
                                Ext.getCmp('perkode_text').setValue('');
                                Ext.getCmp('month_label').show();
                                Ext.getCmp('date_label').show();




                            } else {
                                Ext.getCmp('perkode_text').show();
                                Ext.getCmp('month_label').hide();
                                Ext.getCmp('date_label').hide();
                                Ext.getCmp('perkode_text').setValue('');

                            }

                        }
                    }
                }), '-',
//            {
//                xtype:'label',
//                text:'Journal Trano'
//            },'-',
//            {
//                xtype: 'tranoalljurnalselector',
//                width: 120,
//                id: 'trano_jurnal',
//                Selectid: 'trano',
//                jurnalType: ["inventory_in","inventory_out"],
//                addBaseParams: {
//                    order_by: 'ref_number DESC'
//                },
//                url: '/finance/jurnal/get-inventory-journal-trano',
//                callbackFunc: function(trano) {
//
//                }
//            },'-',
                {
                    xtype: 'label',
                    text: 'Category Code'
                }, '-',
                {
                    xtype: 'trigger',
                    fieldLabel: 'Kode Kategori ',
                    id: 'kode_kategori',
                    triggerClass: 'teropong',
                    allowBlank: false,
                    editable: false,
                    width: 100,
                    onTriggerClick: function()
                    {
                        showkategori();
                    }
                }, '-',
                {
                    xtype: 'label',
                    text: 'Periode'
                },
                '-',
                {
                    xtype: 'periodefinanceselector',
                    id: 'perkode_text',
                    Selectid: 'periode_text',
                    inventory: true,
                    width: 150
                },
                '-',
                {
                    text: 'By Month',
                    id: 'month_label',
                    iconCls: 'icon-calendar',
                    style: {
                        overflow: 'visible'     // For the Combo popup
                    },
                    menu: {
                        xtype: 'menu',
                        plain: true,
                        items:
                                [
                                    '<b class="menu-title">Month & Year</b>',
                                    {
                                        xtype: 'datefield',
                                        name: 'month',
                                        id: 'month',
                                        msgTarget: 'side',
                                        format: 'm-Y', // or other format you'd like
                                        plugins: 'monthPickerPlugin',
                                        listeners: {
                                            'select': function(t, newDate) {
                                                Ext.getCmp('startdate').setValue('');
                                                Ext.getCmp('enddate').setValue('');
                                            }
                                        }
                                    },
                                ]
                    }
                },
                {
                    text: 'By Date',
                    id: 'date_label',
                    iconCls: 'icon-calendar',
                    style: {
                        overflow: 'visible'     // For the Combo popup
                    },
                    menu: {
                        xtype: 'menu',
                        plain: true,
                        items:
                                [
                                    '<b class="menu-title">Start Date</b>',
                                    {
                                        xtype: 'datefield',
                                        name: 'startdate',
                                        id: 'startdate',
                                        msgTarget: 'side',
                                        endDateField: 'enddate', // id of the end date field
                                        vtype: 'daterange',
                                        format: 'd-m-Y', // or other format you'd like
                                        listeners: {
                                            'select': function(t, newDate) {
                                                Ext.getCmp('month').setValue('');
                                            }
                                        }
                                    },
                                    '<b class="menu-title">End Date</b>',
                                    {
                                        xtype: 'datefield',
                                        name: 'enddate',
                                        id: 'enddate',
                                        startDateField: 'startdate', // id of the start date field
                                        msgTarget: 'side',
                                        vtype: 'daterange',
                                        format: 'd-m-Y', // or other format you'd like
                                        listeners: {
                                            'select': function(t, newDate) {
                                                Ext.getCmp('month').setValue('');
                                            }
                                        }
                                    },
                                ]
                    }
                },
                '-',
                {
                    xtype: 'button',
                    text: 'Reset',
                    cls: "x-btn-text-icon",
                    icon: "/images/lov_refresh.gif",
                    handler: function() {
//                        Ext.getCmp('trano').setValue('');
//                        Ext.getCmp('tranos').setValue('');
                        Ext.getCmp('month').setValue('');
                        Ext.getCmp('startdate').setValue('');
                        Ext.getCmp('enddate').setValue('');
                        Ext.getCmp('periode_text').setValue('');
                        Ext.getCmp('jurnal_type').setValue('');
                        Ext.getCmp('kode_kategori').setValue('');
                    }
                },
                {
                    xtype: 'button',
                    text: 'Show',
                    width: 70,
                    id: 'show_report',
                    cls: "x-btn-text-icon",
                    icon: "/images/icons/fam/control_rewind.png",
                    handler: function(btn, ev)
                    {
                        detail = false;
                        var month = Ext.getCmp('month').getValue(),
                                start = Ext.getCmp('startdate').getValue(),
                                end = Ext.getCmp('enddate').getValue(),
                                type = Ext.getCmp('jurnal_type').getValue(),
                                kategori = Ext.getCmp('kode_kategori').getValue(),
                                periode = Ext.getCmp('periode_text').getValue();

                        if (type == '') {
                            Ext.MessageBox.show({
                                title: 'Error',
                                msg: 'Please Fill "Type" Field!',
                                buttons: Ext.MessageBox.OK,
                                icon: Ext.MessageBox.ERROR
                            });
                            return false;
                        }
                        if (type == 'closing' && periode=='') {
                            Ext.MessageBox.show({
                                title: 'Error',
                                msg: 'Please Fill "Periode" Field!',
                                buttons: Ext.MessageBox.OK,
                                icon: Ext.MessageBox.ERROR
                            });
                            return false;
                        }

                        var D = Ext.calendar.Date;
                        month = D.formatDate(month, 'yyyy-mm');
                        start = D.formatDate(start, 'yyyy-mm-dd');
                        end = D.formatDate(end, 'yyyy-mm-dd');
                        myPanel = Ext.getCmp('abs-budget-panel');
                        myPanel.body.load({
                            url: '/finance/report/view-fixed-asset-journal',
                            params: {
//                                trano: Ext.getCmp('trano').getValue(),
                                month: month,
                                start_date: start,
                                end_date: end,
                                type: type,
                                kategori: kategori,
                                periode: periode
                            },
                            scripts: true
                        });
                    }
                }, '-',
                {
                    xtype: 'button',
                    id: 'export_button',
                    cls: "x-btn-icon",
                    icon: "/images/print.png",
                    handler: function()
                    {
//                        var trano = Ext.getCmp('trano').getValue();

                        var month = Ext.getCmp('month').getValue(),
                                start = Ext.getCmp('startdate').getValue(),
                                end = Ext.getCmp('enddate').getValue(),
                                type = Ext.getCmp('jurnal_type').getValue();
                        var D = Ext.calendar.Date,
                                myPanel = Ext.getCmp('abs-budget-panel');

                        month = D.formatDate(month, 'yyyy-mm');
                        start = D.formatDate(start, 'yyyy-mm-dd');
                        end = D.formatDate(end, 'yyyy-mm-dd');
                        location.href = '/finance/report/view-fixed-asset-journal/export/true/trano/' + trano + '/month/' + month + '/type/' + type;

                    }
                }
            ]
        });

        viewPort = Ext.getCmp('viewport');

        centerRegionTab = viewPort.getComponent('content-panel');
        centerRegionTab.items.each(function(c) {
            centerRegionTab.remove(c);
        });
        centerRegionTab.add(windowForm);
        panelBaru = Ext.getCmp('abs-budget-panel');
        centerRegionTab.layout.setActiveItem('abs-budget-panel');

    })


</script>
