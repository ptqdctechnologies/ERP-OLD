<script type="text/javascript">

    var BANK_TYPE = '';
    var item_type = '';

    Ext.apply(Ext.form.VTypes, {
        numericText: "Only numbers are allowed.",
        numericMask: /[0-9]/,
        numericRe: /(^-?dd*.d*$)|(^-?dd*$)|(^-?.dd*$)/,
        numeric: function(v) {
            return function() {
                return this.numericRe.test(v)
            };
        }
    });

    var itemTypes = '';

    function showNhideRPCGrid(flag) {
        Ext.each(Ext.getCmp('grid-bankin').colModel, function(col) {
            for (i = 0; i < col.config.length; i++) {
                if (col.config[i].dataIndex == 'status_doc_rpc')
                {
                    Ext.getCmp('grid-bankin').colModel.config[i].hidden = flag;
                }
            }

        });
        Ext.getCmp('grid-bankin').reconfigure(Ext.getCmp('grid-bankin').getStore(), Ext.getCmp('grid-bankin').colModel);
        Ext.getCmp('grid-bankin').getView().refresh();
    }

    var bankinlist = Ext.data.Record.create([
        {name: 'trano'},
        {name: 'ref_number'},
        {name: 'ref_number_2'},
        {name: 'prj_kode'},
        {name: 'sit_kode'},
        {name: 'job_number'},
        {name: 'tgl'},
        {name: 'uid'},
        {name: 'coa_kode'},
        {name: 'coa_nama'},
        {name: 'val_kode'},
        {name: 'debit'},
        {name: 'credit'},
        {name: 'rateidr'},
        {name: 'status_doc_rpc'},
        {name: 'item_type'}


    ])

    var storebankin = new Ext.data.GroupingStore({
        id: 'store-bankin',
        reader: new Ext.data.JsonReader({fields: bankinlist}),
        listeners: {
            'load': function(record) {
                hitungTotal();
            }
        }
    });
    var totDebit = 0;
    var totCredit = 0;
    function hitungTotal()
    {
        totDebit = 0;
        totCredit = 0;
        storebankin.each(function(items) {
            totDebit += (parseFloat(items.data['debit']));
            totCredit += (parseFloat(items.data['credit']));
        });
        Ext.getCmp('debittotal').setText('Total Debit : ' + Ext.util.Format.number(totDebit, '0,00.00'));
        Ext.getCmp('credittotal').setText('Total Credit : ' + Ext.util.Format.number(totCredit, '0,0.00'));
    }

    function edit(r)
    {

        var dat = storebankin.getAt(r);
        Ext.getCmp('acc-number').setValue(dat.data['ref_number']);
        Ext.getCmp('ref-number-2').setValue(dat.data['ref_number_2']);
        Ext.getCmp('coa-kode').setValue(dat.data['coa_kode']);
        Ext.getCmp('prj_kode_text').setValue(dat.data['prj_kode']);
        Ext.getCmp('sit_kode_text').setValue(dat.data['sit_kode']);
        Ext.getCmp('job_number').setValue(dat.data['job_number']);
        Ext.getCmp('coa-nama').setValue(dat.data['coa_nama']);
        //Ext.getCmp('val-kode').setValue(dat.data['val_kode']);
        Ext.getCmp('val_kode_text').setValue(dat.data['val_kode']);
        Ext.getCmp('debit').setValue(dat.data['debit']);
        Ext.getCmp('credit').setValue(dat.data['credit']);

        Ext.getCmp('form-insert-bank-in').stat = 'edit';
        Ext.getCmp('form-insert-bank-in').idEdit = dat.id;


        trano = dat.data['ref_number_2'];
        tranoType = trano.substring(0, 3);
        tranoTypeOH = trano.substring(0, 4);

        if (tranoType == 'ASF' || tranoType == 'BSF' || tranoTypeOH == 'ASFO' || tranoTypeOH == 'ASFP')
        {
            Ext.getCmp('rpc-radio').setVisible(true);
            Ext.getCmp('rpc-radio').setValue(dat.data['status_doc_rpc']);
        } else
            Ext.getCmp('rpc-radio').setVisible(false);

    }

    function deleterowgrid(idItem)
    {
        Ext.MessageBox.confirm('Confirm', 'Are you sure want to delete this?', function(btn) {
            if (btn == 'yes')
            {
                var store = storebankin;
                var dat = store.getById(idItem);
                if (dat)
                {
                    store.remove(dat);
                    Ext.getCmp('form-insert-bank-in').stat = 'new';
                    Ext.getCmp('form-insert-bank-in').idEdit = '';
                    Ext.getCmp('grid-bankin').getView().refresh();
                    hitungTotal();
                }
            }
        });
    }

    Ext.onReady(function() {

        Ext.QuickTips.init();
        Ext.form.Field.prototype.msgTarget = 'side';

        var formpanel = new Ext.form.FormPanel({
            title: 'Edit Bank Receive Money',
            id: 'form-insert-bank-in',
            renderTo: 'insert_bank_in',
            frame: true,
            labelAlign: 'top',
            style: 'margin:10 10 10 10',
            width: 400,
            stat: 'new',
            items: [
                {
                    xtype: 'tranoalljurnalselector',
                    width: 120,
                    id: 'trano_jurnal',
                    Selectid: 'trano',
                    fieldLabel: 'Transaction',
                    jurnalType: ["bank_in"],
                    callbackFunc: function(trano) {
                        Ext.Ajax.request({
                            url: '/finance/banktransaction/get-jurnal-data',
                            method: 'POST',
                            params: {
                                trano: trano,
                                type: 'bank_in'
                            },
                            success: function(result) {
                                obj = Ext.util.JSON.decode(result.responseText);

                                if (obj.success)
                                {
                                    Ext.getCmp('form-insert-bank-in').getForm().reset();
                                    Ext.getCmp('tgl').setValue('');
                                    storebankin.removeAll();
                                    storebankin.loadData(obj.data);

                                    Ext.getCmp('tgl').setValue(obj.tgl);
                                    Ext.getCmp('acc-number').setValue(obj.data[0].ref_number);
                                    Ext.getCmp('ref-number-2').setValue(obj.data[0].ref_number_2);

                                    if (obj.data[0].ref_number_2 != '')
                                        trano = obj.data[0].ref_number_2;
                                    else
                                        trano = obj.data[1].ref_number_2;

                                    //cara sementara cari trano ASF,ASFO,dll

                                    tranoType = trano.substring(0, 3);
                                    tranoTypeOH = trano.substring(0, 4);

                                    if (tranoType == 'ASF' || tranoType == 'BSF' || tranoTypeOH == 'ASFO' || tranoTypeOH == 'ASFP')
                                    {
                                        Ext.getCmp('rpc-radio').setVisible(true);
                                        Ext.getCmp('rpc-radio').setValue(obj.data[0].status_doc_rpc);
                                        showNhideRPCGrid(false);
                                    } else {
                                        Ext.getCmp('rpc-radio').setVisible(false);
                                        showNhideRPCGrid(true);
                                    }
                                    Ext.getCmp('trano_tgl').setVisible(true);

                                    if (obj.data[0].val_kode != 'IDR') {
                                        //Ext.getCmp('rateidr').setVisible(true);
                                        //Ext.getCmp('rateidr').setValue(obj.data[0].rateidr);
                                        //Ext.getCmp('val-kode').setValue(obj.data[0].val_kode);
                                        Ext.getCmp('val_rate_text').setValue(obj.data[0].rateidr);
                                        Ext.getCmp('val_kode_text').setValue(obj.data[0].val_kode);
                                    }
                                }
                                else
                                {
                                    Ext.Msg.alert('Error', obj.msg);
                                }
                            },
                            failure: function(action) {
                                if (action.failureType == 'server') {
                                    obj = Ext.util.JSON.decode(action.response.responseText);
                                    Ext.Msg.alert('Error!', obj.errors.reason);
                                } else {
                                    Ext.Msg.alert('Warning!', 'Server is unreachable : ' + action.response.responseText);
                                }
                            }

                        });
                    }
                },
                {
                    xtype: 'tranodatechanger',
                    anchor: '100%',
                    id: 'trano_tgl',
                    Selectid: 'tgl',
                    fieldLabel: 'Transaction Date',
                    hidden: true
                },
                {
                    xtype: 'textfield',
                    fieldLabel: 'Referrence ',
                    id: 'acc-number',
                    allowBlank: false
                },
                {
                    xtype: 'tbtext',
                    text: '2nd Referrence :'
                }, {
                    xtype: 'tranoselector',
                    id: 'tranos',
                    Selectid: 'ref-number-2',
                    width: 165,
//                    Tranotype: ['ASF', 'ASFO', 'ASFP'],
                    Disabletype: true,
                    style: 'margin-top: -10px;',
                    callbackFunc: function(trano, itemType) {
                        if (itemType == 'ASF' || itemType == 'ASFO' || itemType == 'ASFP' || itemType == 'BSF')
                        {
                            itemTypes = itemType;
                            Ext.Ajax.request({
                                url: '/finance/banktransaction/get-rpc-number-from-journal',
                                params: {trano: trano},
                                method: 'POST',
                                success: function(result) {
                                    obj = Ext.util.JSON.decode(result.responseText);
                                    if (obj.success)
                                    {
                                        Ext.getCmp('acc-number').setValue(obj.rpc);
                                    } else
                                    {
//                                        Ext.Msg.alert('RPC);
                                    }
                                },
                                failure: function(action) {
                                    if (action.failureType == 'server') {
                                        obj = Ext.util.JSON.decode(action.response.responseText);
                                        Ext.Msg.alert('Error!', obj.errors.reason);
                                    } else {
                                        Ext.Msg.alert('Warning!', 'Server is unreachable : ' + action.response.responseText);
                                    }
                                }

                            })

                            Ext.getCmp('rpc-radio').setVisible(true);
                        }
                        else
                            Ext.getCmp('rpc-radio').setVisible(false);
                    }
                },
                {
                    xtype: 'projectselectorreport',
                    anchor: '100%',
                    id: 'project-select',
                    Selectid: 'prj_kode_text',
                    Nameid: 'prj_nama_text',
                    ShowName: true,
                    fieldLabel: 'Project Code',
                    allowBlank: false,
                    showAll: true,
                    callback: function(prj) {
                        prjKode = parseProjectCode(prj.prj_kode);
                        if (prjKode != '')
                            Ext.getCmp('job_number').setValue(prjKode + ".");
                        else
                            Ext.getCmp('job_number').setValue('');
                        Ext.getCmp('site-select').clearAllValue();
                    }
                }, {
                    xtype: 'siteselector',
                    anchor: '100%',
                    independent: false,
                    id: 'site-select',
                    SiteSelectid: 'sit_kode_text',
                    SiteNameid: 'sit_nama_text',
                    ProjectSelectid: 'prj_kode_text',
                    ShowName: true,
                    fieldLabel: 'Site Code',
                    allowBlank: false,
                    showAll: true,
                    callback: function(site) {
                        if (site.sit_kode != '')
                        {
                            sitKode = site.sit_kode;
                            Ext.getCmp('job_number').setValue(prjKode + "." + sitKode + ".");
                        }
                    }
                },
                {
                    xtype: 'coaselector',
                    fieldLabel: 'Chart Of Account',
                    id: 'coa_kode',
                    Selectid: 'coa-kode',
                    Nameid: 'coa-nama',
                    width: 180,
                    ShowName: true,
                    allowBlank: false
                },
                {
                    xtype: 'currencyselector',
                    anchor: '100%',
                    id: 'currency-select',
                    Selectid: 'val_kode_text',
                    Nameid: 'val_nama_text',
                    ShowName: true,
                    fieldLabel: 'Currency Code',
                    allowBlank: false,
                    selectValue: 'IDR'
                },
                new Ext.ux.customRendererField({
                    xtype: 'textfield',
                    fieldLabel: 'IDR Rate',
                    id: 'val_rate_text',
                    name: 'val_rate_text',
                    vtype: 'numeric',
                    style: 'text-align:right',
                    priceDelemiter: ','
                }),
                /*{
                 fieldLabel: 'Valuta ',
                 xtype: 'combo',
                 width: 100,
                 allowBlank: false,
                 store: new Ext.data.SimpleStore({
                 fields: ['name', 'nilai'],
                 data: [
                 ['IDR', 'IDR'],
                 ['USD', 'USD']
                 ]
                 }),
                 valueField: 'nilai',
                 displayField: 'name',
                 typeAhead: true,
                 forceSelection: true,
                 editable: false,
                 mode: 'local',
                 triggerAction: 'all',
                 selectOnFocus: true,
                 id: 'val-kode',
                 listeners: {
                 'select': function(c, store, index) {
                 var data = store.data['nilai'];
                 if (data != 'IDR')
                 Ext.getCmp('rateidr').setVisible(true);
                 else
                 Ext.getCmp('rateidr').setVisible(false);
                 }
                 }
                 }, {
                 xtype: 'textfield',
                 id: 'rateidr',
                 width: 104,
                 fieldLabel: 'Exchange Rate',
                 value: '<?= $this->rateidr ?>',
                 //                    readOnly: false,
                 hidden: true
                 },*/
                new Ext.ux.customRendererField(
                        {
                            xtype: 'textfield',
                            id: 'debit',
                            style: 'text-align:right',
                            priceDelemiter: ',',
                            fieldLabel: 'Debit ',
                            value: '0.00',
                            listeners: {
                                'customfocus': function(t) {
                                    Ext.getCmp('credit').setValue('');
                                }
                            }
                        }),
                new Ext.ux.customRendererField(
                        {
                            xtype: 'textfield',
                            id: 'credit',
                            style: 'text-align:right',
                            priceDelemiter: ',',
                            fieldLabel: 'Credit ',
                            value: '0.00',
                            listeners: {
                                'customfocus': function(t) {
                                    Ext.getCmp('debit').setValue('');
                                }
                            }
                        }), {
                    xtype: 'textfield',
                    id: 'job_number',
                    fieldLabel: 'Job Number ',
                    vtype: 'alphanumericonly'
                }, {
                    xtype: 'radiogroup',
                    fieldLabel: 'Is RPC?',
                    id: 'rpc-radio',
                    allowBlank: false,
                    hidden: true,
                    items: [
                        {
                            boxLabel: 'No',
                            name: 'rpc',
                            inputValue: '1',
                            checked: true
                        },
                        {
                            boxLabel: 'RPC',
                            name: 'rpc',
                            inputValue: '2'
                        }
                    ],
                    listeners: {
                        'change': function(t, ch)
                        {
                            if (ch.getGroupValue() == 'YES')
                            {
//                                hitungtotal();
                            } else
                            {
//                                Ext.getCmp('ppn-value').setValue(0);
//                                hitungtotal();
                            }
                        }
                    }
                }
            ],
            buttons: [{
                    text: 'Add to Grid',
                    iconCls: 'silk-add',
                    handler: function(btn, ev)
                    {
                        if (!Ext.getCmp('form-insert-bank-in').getForm().isValid())
                        {
                            Ext.Msg.alert('Error', 'Form not valid');
                            return false;
                        }

//                    if (Ext.getCmp('debit').getValue().toString().replace(/\$|\,/g,'') == 0 && Ext.getCmp('credit').getValue().toString().replace(/\$|\,/g,'') == 0 )
//                    {
//                        Ext.MessageBox.show({
//                        title: 'Error',
//                        msg: 'Sorry , please insert field debit or credit',
//                        buttons: Ext.MessageBox.OK,
//                        icon: Ext.MessageBox.ERROR
//                        });
//                        return false;
//                    }

//                        if (storebankin.getCount() > 0)
//                        {
//                            var row = storebankin.getAt(storebankin.findExact('val_kode', Ext.getCmp('val-kode').getValue()));
//                            if (row == null)
//                            {
//                                Ext.MessageBox.show({
//                                    title: 'Error',
//                                    msg: 'Sorry this document different valuta',
//                                    buttons: Ext.MessageBox.OK,
//                                    icon: Ext.MessageBox.ERROR
//                                });
//                                return false;
//                            }
//                        }
                        //var rateidr = Ext.getCmp('rateidr').getValue();
                        //var valkode = Ext.getCmp('val-kode').getValue();
                        var rateidr = Ext.getCmp('val_rate_text').getOriginalValue();
                        var valkode = Ext.getCmp('val_kode_text').getValue();

                        if (valkode != 'IDR' && rateidr == 0) {
                            Ext.MessageBox.show({
                                title: 'Error',
                                msg: 'Exchange Rate is empty!',
                                buttons: Ext.MessageBox.OK,
                                icon: Ext.MessageBox.ERROR
                            });
                            return false;
                        }
                        //Cek job number sesuai dengan patter Qxxx.yyy (xxx == kode project, yyy == cfs kode)
                        var testJob = Ext.getCmp('job_number').getValue();
                        if (!regexJobNumber.test(testJob.toString()))
                        {
                            Ext.MessageBox.show({
                                title: 'Error',
                                msg: 'Job Number not valid, please use format ( Qxxxxxx.yyy.zzz ), ex : Q000101.254.123<br>xxxxxx = Project Code, yyy = Site Code, zzz = CFS Code',
                                buttons: Ext.MessageBox.OK,
                                icon: Ext.MessageBox.ERROR
                            });
                            return false;
                        }

                        if (Ext.getCmp('form-insert-bank-in').stat == 'new')
                        {
                            var e = new bankinlist({
                                ref_number: Ext.getCmp('acc-number').getValue(),
                                ref_number_2: Ext.getCmp('ref-number-2').getValue(),
                                prj_kode: Ext.getCmp('prj_kode_text').getValue(),
                                sit_kode: Ext.getCmp('sit_kode_text').getValue(),
                                job_number: Ext.getCmp('job_number').getValue(),
                                coa_kode: Ext.getCmp('coa-kode').getValue(),
                                coa_nama: Ext.getCmp('coa-nama').getValue(),
                                //val_kode: Ext.getCmp('val-kode').getValue(),
                                val_kode: Ext.getCmp('val_kode_text').getValue(),
                                debit: Ext.getCmp('debit').getValue().toString().replace(/\$|\,/g, ''),
                                credit: Ext.getCmp('credit').getValue().toString().replace(/\$|\,/g, ''),
                                //rateidr: Ext.getCmp('rateidr').getValue().toString().replace(/\$|\,/g, '')
                                rateidr: Ext.getCmp('val_rate_text').getOriginalValue().toString().replace(/\$|\,/g, ''),
                                status_doc_rpc: Ext.getCmp('rpc-radio').getValue().getGroupValue()
                            })

                            storebankin.add(e);
//                        Ext.MessageBox.alert('Status', 'Changes saved successfully.');

                        } else
                        {
                            if (Ext.getCmp('form-insert-bank-in').stat == 'edit')
                            {
                                var row = storebankin.getById(Ext.getCmp('form-insert-bank-in').idEdit);
                                row.data['ref_number'] = Ext.getCmp('acc-number').getValue();
                                row.data['ref_number_2'] = Ext.getCmp('ref-number-2').getValue();
                                row.data['coa_kode'] = Ext.getCmp('coa-kode').getValue();
                                row.data['coa_nama'] = Ext.getCmp('coa-nama').getValue();
                                //row.data['val_kode'] = Ext.getCmp('val-kode').getValue();
                                row.data['val_kode'] = Ext.getCmp('val_kode_text').getValue();
                                row.data['prj_kode'] = Ext.getCmp('prj_kode_text').getValue();
                                row.data['sit_kode'] = Ext.getCmp('sit_kode_text').getValue();
                                row.data['job_number'] = Ext.getCmp('job_number').getValue();
                                row.data['debit'] = Ext.getCmp('debit').getValue().toString().replace(/\$|\,/g, '');
                                row.data['credit'] = Ext.getCmp('credit').getValue().toString().replace(/\$|\,/g, '');
                                //row.data['rateidr'] = Ext.getCmp('rateidr').getValue().toString().replace(/\$|\,/g, '');
                                row.data['rateidr'] = Ext.getCmp('val_rate_text').getOriginalValue().toString().replace(/\$|\,/g, '');

                                Ext.MessageBox.alert('Status', 'Update Data successfully.');
                                row.data['status_doc_rpc'] = Ext.getCmp('rpc-radio').getValue().getGroupValue()

//                                if (itemTypes == 'ASF' || itemTypes == 'ASFO' || itemTypes == 'ASFP')
//                                {
////}
//                                    storebankin.each(function(store) {
//                                        store.data['ref_number'] = Ext.getCmp('acc-number').getValue();
//                                        store.data['ref_number_2'] = Ext.getCmp('ref-number-2').getValue();
//                                    })
//                                }
                            }
                        }

                        Ext.getCmp('form-insert-bank-in').stat = 'new';
                        Ext.getCmp('form-insert-bank-in').idEdit = '';
                        Ext.getCmp('grid-bankin').getView().refresh();

                        var ref_number = Ext.getCmp('acc-number').getValue();
                        var ref_number_2 = Ext.getCmp('ref-number-2').getValue();
                        //var valuta = Ext.getCmp('val-kode').getValue();
                        //var rateidr = Ext.getCmp('rateidr').getValue();
                        var valuta = Ext.getCmp('val_kode_text').getValue();
                        var rateidr = Ext.getCmp('val_rate_text').getOriginalValue();

                        Ext.getCmp('form-insert-bank-in').getForm().reset();
                        Ext.getCmp('acc-number').setValue(ref_number);
                        Ext.getCmp('ref-number-2').setValue(ref_number_2);
                        //Ext.getCmp('val-kode').setValue(valuta);
                        //Ext.getCmp('rateidr').setValue(rateidr);
                        Ext.getCmp('val_kode_text').setValue(valuta);
                        Ext.getCmp('val_rate_text').setValue(rateidr);
                        hitungTotal();
                        Ext.getCmp('rpc-radio').setValue(1);

                    }
                }, {
                    text: 'Reset',
                    style: 'margin-right:26px;',
                    handler: function(btn, ev)
                    {
                        Ext.getCmp('form-insert-bank-in').getForm().reset();
                        Ext.getCmp('ref-number-2').setValue('');
                        Ext.getCmp('rpc-radio').setValue(1);
                        Ext.getCmp('rpc-radio').setVisible(false);
                    }
                }]

        })

        var gridpanel = new Ext.grid.GridPanel({
            store: storebankin,
            renderTo: 'grid_bankin',
            id: 'grid-bankin',
            frame: true,
            width: 900,
            height: 200,
            style: 'margin:10 10 10 10',
            viewConfig: {
//                forceFit: true
            },
            columns: [new Ext.grid.RowNumberer(), {
                    header: "Action",
                    width: 60,
                    dataIndex: 'id',
                    css: 'text-align:center;',
                    renderer: function(v, p, r) {
                        return '<a href="#" onclick="deleterowgrid(\'' + r.id + '\')"><img src="/images/g_rec_del.png"></a>';
                    }
                }, {
                    header: 'Referrence',
                    dataIndex: 'ref_number',
                    sortable: true
                }, {
                    header: '2nd Referrence',
                    dataIndex: 'ref_number_2',
                    sortable: true
                }, {
                    header: 'COA Code',
                    dataIndex: 'coa_kode',
                    sortable: true
                }, {
                    header: 'COA Name',
                    dataIndex: 'coa_nama',
                    sortable: true
                }, {
                    header: 'Valuta',
                    dataIndex: 'val_kode'
                }, {
                    header: 'Debit',
                    dataIndex: 'debit',
                    sortable: true,
                    align: 'right',
                    renderer: function(v) {
                        return v ? Ext.util.Format.number(v, '0,0.00') : '';
                    }
                }, {
                    header: 'Credit',
                    dataIndex: 'credit',
                    sortable: true,
                    align: 'right',
                    renderer: function(v) {
                        return v ? Ext.util.Format.number(v, '0,0.00') : '';
                    }
                }, {
                    header: 'Is RPC ?',
                    dataIndex: 'status_doc_rpc',
                    sortable: true,
                    hidden: true,
                    sortable: true,
                            renderer: function(v) {
                                return v == '1' ? 'No' : 'RPC';
                            }
                }],
            buttons: [{
                    text: 'Submit',
                    iconCls: 'icon-save',
                    handler: function(btn, ev)
                    {
                        if (Ext.getCmp('trano').getValue() == '')
                        {
                            Ext.MessageBox.show({
                                title: 'Error',
                                msg: 'Please select Trano first',
                                buttons: Ext.MessageBox.OK,
                                icon: Ext.MessageBox.ERROR
                            });
                            return false;
                        }
                        var totdebit = parseFloat(totDebit.toString().replace(/\$|\,/g, ''));
                        var totcredit = parseFloat(totCredit.toString().replace(/\$|\,/g, ''));

                        if (!moneycomp(totdebit, '==', totcredit))
                        {
                            Ext.MessageBox.show({
                                title: 'Error',
                                msg: 'Sorry, Debit and Credit Total Must be Balance',
                                buttons: Ext.MessageBox.OK,
                                icon: Ext.MessageBox.ERROR
                            });
                            return false;
                        }

                        var count = storebankin.getCount();
                        if (count == 0)
                        {
                            return false;
                        }

                        Ext.MessageBox.confirm('Confirm', 'Are you sure want this action ?', function(btn) {

                            if (btn == 'yes')
                            {
                                var bankindata = '';
                                var totaldata = 0;
                                storebankin.each(function(store) {
                                    bankindata += Ext.util.JSON.encode(store.data) + ',';
                                })

                                bankindata = '[' + bankindata.substring(0, bankindata.length - 1) + ']';
                                var tgl = '';
                                if (Ext.getCmp('tgl').getValue() != '')
                                    tgl = Ext.util.Format.date(Ext.getCmp('tgl').getValue(), 'Y-m-d');

                                var trano = Ext.getCmp('trano').getValue();

                                var params = {
                                    bankindata: bankindata,
                                    trano: trano,
                                    tgl: tgl
                                }
                                Ext.getBody().mask('Loading..','x-mask-loading',false);       
                                Ext.Ajax.request({
                                    url: '/finance/banktransaction/do-update-bankin',
                                    method: 'POST',
                                    params: params,
                                    success: function(result) {
                                        Ext.getBody().unmask();
                                        obj = Ext.util.JSON.decode(result.responseText);
                                        if (obj.success)
                                        {
                                            Ext.MessageBox.confirm(
                                                    'Success',
                                                    'Data has been saved' +
                                                    '<br>Do You want to Print the Journal?',
                                                    function(btn) {
                                                        if (btn == 'yes')
                                                        {
                                                            var tranoprint = obj.trano.replace("/", "_");
                                                            location.href = '/jasper/bank-receive-money/trano/' + tranoprint;
                                                        }
                                                    }
                                            );
//                                            Ext.getCmp('form-insert-bank-in').getForm().reset();
                                            Ext.getCmp('rpc-radio').setValue(1);
                                            Ext.getCmp('rpc-radio').setVisible(false);
                                        } else
                                        {
                                            Ext.Msg.alert('Error', obj.msg);
                                        }
                                    },
                                    failure: function(action) {
                                        Ext.getBody().unmask();
                                        if (action.failureType == 'server') {
                                            obj = Ext.util.JSON.decode(action.response.responseText);
                                            Ext.Msg.alert('Error!', obj.errors.reason);
                                        } else {
                                            Ext.Msg.alert('Warning!', 'Server is unreachable : ' + action.response.responseText);
                                        }
                                    }

                                })
                            }

                        })

                    }
                }], bbar: new Ext.Toolbar({
                id: 'total-bbar',
                style: "text-align:right",
                items: [{
                        xtype: 'label',
                        id: 'debittotal',
                        style: 'color:red;font-weight:bold;margin-right:20px;font-size:12'
                    },
                    {
                        xtype: 'label',
                        id: 'credittotal',
                        style: 'color:red;font-weight:bold;font-size:12;margin-right:10px'
                    }],
                layout: 'fit'
            }),
            listeners: {
                'rowdblclick': function(g, r, e)
                {
                    edit(r);
//                    var dat = storebankin.getAt(r);
//                    Ext.getCmp('acc-number').setValue(dat.data['ref_number']);
//                    Ext.getCmp('coa-kode').setValue(dat.data['coa_kode']);
//                    Ext.getCmp('coa-nama').setValue(dat.data['coa_nama']);
//                    Ext.getCmp('val-kode').setValue(dat.data['val_kode']);
//                    Ext.getCmp('debit').setValue(dat.data['debit']);
//                    Ext.getCmp('credit').setValue(dat.data['credit']);
//
//                    Ext.getCmp('form-insert-bank-in').stat = 'edit';
//                    Ext.getCmp('form-insert-bank-in').idEdit = dat.id;
                },
                'afterrender': function(t)
                {
                    hitungTotal();
                }
            }

        })




    })

</script>

<div id="insert_bank_in"></div>
<div id="grid_bankin"></div>