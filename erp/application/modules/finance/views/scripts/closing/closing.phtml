<script type="text/javascript">
    Ext.onReady(function(){

        Ext.QuickTips.init();

        var summary = new Ext.grid.GroupSummary();

        var perKode = '<?=$this->perkode?>',
            perTahun = '<?=$this->year?>',
            perBulan = '<?=$this->month?>';

        var store = new Ext.ux.MultiGroupingStore({
            url : '/finance/closing/getcoaforclosing',
            baseParams: {
                perkode: perKode,
                tahun: perTahun,
                bulan: perBulan
            }
           ,reader: new Ext.data.JsonReader({
               totalProperty: 'count',
               root : 'data'},
                [
                    {name: 'id'},
                    {name: 'coa_kode', type: 'string'},
                    {name: 'coa_nama', type: 'string'},
                    {name: 'tgl', type: 'date', dateFormat: 'Y-m-d'},
                    {name: 'tglpost', type: 'date', dateFormat: 'Y-m-d'},
                    {name: 'debit'},
                    {name: 'credit'},
                    {name: 'trano'},
                    {name: 'ref_number'},
                    {name: 'prj_kode'},
                    {name: 'sit_kode'},
                    {name: 'type'}
                   ]
               )
           ,sortInfo: {field: 'id', direction: 'ASC'}
           ,groupField: ['trano','ref_number']
         });

        var groupView = new Ext.ux.MultiGroupingView({
            hideGroupedColumn :true
           ,enableRowBody:true
           ,getRowClass:function(record, rowIndex, p, store) {
            }
           ,startCollapsed: true
           ,emptyGroupText: 'NULL'
           ,displayEmptyFields: true //you can choose to show the group fields, even when they have no values
           ,groupTextTpl: '{text} {gvalue} ({[values.rs.length]} {[values.rs.length == 1 ? "Journal" : "Journals"]})'
           ,displayFieldSeperator: ', ' //you can control how the display fields are seperated
           });

        store.load();

        var grid = new Ext.ux.MultiGroupingPanel({
            stateful: false,
            store: store,
            frame: true,
            columns: [
                {
                    header: 'Trans. No.',
                    width: 120,
                    sortable: true,
                    dataIndex: 'trano'
                },
                {
                    header: 'Ref Number',
                    width: 120,
                    sortable: true,
                    dataIndex: 'ref_number'
                },
                {
                    header: 'Coa Kode',
                    width: 100,
                    sortable: true,
                    dataIndex: 'coa_kode'
                },
                {
                    header: 'Coa Name',
                    width: 220,
                    sortable: true,
                    dataIndex: 'coa_nama'
                },
                {
                    header: 'Debit',
                    width: 120,
                    sortable: true,
                    dataIndex: 'debit',
                    align: 'right',
                    renderer: function(v,p,r){
                        return Ext.util.Format.number(v,'?0,000.00');
                    },
                    summaryType: 'sum'
                },
                {
                    header: 'Credit',
                    width: 120,
                    sortable: true,
                    dataIndex: 'credit',
                    align: 'right',
                    renderer: function(v,p,r){
                        return Ext.util.Format.number(v,'?0,000.00');
                    },
                    summaryType: 'sum'
                }

            ],
            view : groupView,
            plugins: summary,
            loadMask: true,
            height: 450,
            bbar: [
                new Ext.PagingToolbar({
                    pageSize: 100,
                    store: store,
                    displayInfo: true,
                    displayMsg: 'Displaying data {0} - {1} of {2}',
                    emptyMsg: "No data to display"
                })
            ]
        });


        var periodepanel = new Ext.form.FormPanel ({
            title:'Closing Periode',
            id:'periode-closing',
            renderTo:'periode',
            frame:true,
//            width:240,
            items:[

            new Ext.form.FieldSet({
                title: 'Current Periode',
                items: [
                {
                    xtype:'textfield',
                    fieldLabel:'Periode Code',
                    width:104,
                    id:'perkode',
                    name: 'perkode',
                    readOnly: true,
                    value: '<?=$this->perkode?>',
                },{
                    xtype:'textfield',
                    fieldLabel:'year',
                    width:104,
                    value: '<?=$this->year?>',
                    readOnly: true,
                    id:'year'
                },{
                    id:'month',
                    xtype:'textfield',
                    fieldLabel:'Month',
                    width:104,
                    value: '<?=$this->month?>',
                    readOnly: true
                },{
                    xtype:'textfield',
                    fieldLabel: 'Start Date',
                    id: 'startdt',
                    value: '<?=$this->tgl_awal?>',
                    width:104,
                    readOnly: true
                },{
                    xtype:'textfield',
                    fieldLabel: 'End Date',
                    id: 'enddt',
                    value: '<?=$this->tgl_akhir?>',
                    width:104,
                    readOnly: true
                }, {
                    xtype: 'textfield',
                    id: 'rateidr',
                    width: 104,
                    fieldLabel: 'Exchange Rate',
                    value: '<?= $this->rateidr ?>'
//                    readOnly: false,
//                    hidden:
                },
                ]
            }),
            new Ext.Panel({
                title: 'Journal For Closing',
                style: 'padding-right:15px',
                tbar:
                [
                    new Ext.Toolbar({
                        items:
                        [
                            {
                                xtype: 'tbtext',
                                text: 'Search By'
                            },
                            {
                                xtype: 'combo'
                                ,hideLabel: true
                                ,id: 'combo-search'
                                ,name:'search'
                                ,store: new Ext.data.SimpleStore({
                                    fields:['type','name']
                                    ,data:[
                                        ['trano', 'Trans. No.'],
                                        ['ref_number','Ref Number']
                                    ]
                                })
                                ,valueField:'type'
                                ,displayField:'name'
                                ,typeAhead: true
                                ,mode: 'local'
                                ,triggerAction: 'all'
                                ,value: 'trano'
                                ,emptyText:'Select..'
                                ,selectOnFocus:true
                                ,anchor:'95%'
                                ,width:100

                            },
                            {
                                xtype: 'textfield',
                                width: 120,
                                id: 'search_text'
                            },
                            {
                                xtype: 'button',
                                text: 'Show',
                                width:70,
                                id: 'show_budget',
                                cls:"x-btn-text-icon" ,
                                icon:"/images/icons/fam/control_rewind.png",
                                handler:function(){
                                    store.load({
                                        params: {
                                            type: Ext.getCmp('combo-search').getValue(),
                                            search: Ext.getCmp('search_text').getValue()
                                        }
                                    });
                                    grid.getView().refresh();
                                }
                            }
                        ]
                    })
                ],
                items: [
                    grid
                ]
            })
            ],
            buttons:[{
                text:'Close this Periode',
                handler:function (btn,ev)
                {
                    if (Ext.getCmp('perkode').getValue() == '')
                    {
                        Ext.Msg.alert('Error','Current Periode not exist or has been closed!');
                        return false;
                    }
                    if (Ext.getCmp('rateidr').getValue() == '' || Ext.getCmp('rateidr').getValue() == 0)
                    {
                        Ext.Msg.alert('Error','Please fill Exchange Rate field!');
                        return false;
                    }
                    Ext.getBody().mask('Please wait while system closing periode... Do not REFRESH THIS PAGE!');
                    Ext.Ajax.request({
                        url:'/finance/closing/doclosing',
                        method:'POST',
                        params:{
                            perkode: '<?=$this->perkode?>',
                            rateidr: Ext.getCmp('rateidr').getValue(),
                            year: Ext.getCmp('year').getValue(),
                            startdate: Ext.getCmp('startdt').getValue(),
                            enddate: Ext.getCmp('enddt').getValue()
                        },
                        success:function(result){
                            obj = Ext.util.JSON.decode(result.responseText);
                            Ext.getBody().unmask();
                            if (obj.success)
                            {
                                Ext.Msg.alert ('Message','Success, Periode has been closed!');
                                myPanel = Ext.getCmp('abs-budget-panel');
                                myPanel.body.load({
                                url: '/finance/postingvalidate/createvalidate',
                                scripts : true
                                });
                            }else
                            {
                                Ext.Msg.alert('Error', obj.msg);
                            }
                        },
                        failure:function( action){
                            Ext.getBody().unmask();
                            if(action.failureType == 'server'){
                              obj = Ext.util.JSON.decode(action.response.responseText);
                              Ext.Msg.alert('Error!', obj.errors.reason);
                            }else{
                              Ext.Msg.alert('Warning!', 'Server is unreachable : ' + action.response.responseText);
                            }
                        }
                    })
                }
            },{
                text:'Reset',
                style:'marginRight:10px',
                handler:function (btn,ev)
                {
                    Ext.getCmp('periode-closing').getForm().reset();
                }
            }]
        })
    })
</script>

    <div id="periode"></div>
