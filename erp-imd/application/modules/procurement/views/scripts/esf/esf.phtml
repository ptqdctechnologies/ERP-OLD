<script type="text/javascript">
    Ext.onReady(function() {
        Ext.QuickTips.init();

<?php echo $this->action('index', 'textfield', null); ?>

            function showEsf(esfNum)
            {
                var bForm = new Ext.Window ({
                    id: 'b-form-panel-trano_button',
                    layout:'fit',
                    width: 300,
                    height: 100,
                    style: 'margin-top: 10px',
                    labelAlign: 'right',
                    stateful: false,
                    modal : true,
                    items : [
                        new Ext.form.FormPanel({
                            frame: true,
                            items: [{
                                    fieldLabel : 'ESF Number',
                                    id : 'esf_no_text',
                                    xtype: 'trigger',
                                    allowBlank: false,
                                    editable : false,
                                    
                                    value: esfNum,
                                    onTriggerClick:
                                        function ()
                                    {
                                        bForm.close();
                                        showEsfList();
                                    },
                                    scope: this,
                                    width: 150
                                }]
                        })
                    ],
                    buttons: [
                        {
                            text: 'Edit',
                            id: 'save-to-pr',
                            iconCls: 'silk-upd',
                            handler: function(btn, ev) {
                                var esfnum = Ext.getCmp('esf_no_text').getValue();
                                if (esfnum != undefined && esfnum != "")
                                {
                                    Ext.Ajax.request({
                                        url: '/default/home/cekpayment/type/ESF/trano/' + esfnum,
                                        method:'POST',
                                        success: function(resp){
                                            var returnData = Ext.util.JSON.decode(resp.responseText);
                                            if (returnData.success)
                                            {
                                                myPanel = Ext.getCmp('abs-budget-panel');
                                                myPanel.body.load({
                                                    url: '/procurement/esf/editesf/trano/' + esfnum,
                                                    scripts : true
                                                });
                                            }
                                            else
                                            {
                                                Ext.Msg.alert('Error', returnData.msg);
                                            }
                                        },
                                        failure:function( action){
                                            if(action.failureType == 'server'){
                                                obj = Ext.util.JSON.decode(action.responseText);
                                                Ext.Msg.alert('Error!', obj.errors.reason);
                                            }else{
                                                Ext.Msg.alert('Warning!', 'Server is unreachable : ' + action.responseText);
                                            }
                                        }
                                    });
                                    bForm.close();
                                }
                                else
                                {
                                    Ext.Msg.alert('Error!', 'Please select transaction number!');
                                }
                            }
                        },
                        {
                            text: 'Cancel',
                            id: 'cancel',
                            handler: function(btn, ev) {
                                bForm.close();
                            }

                        }


                    ]
                });

                bForm.show();
            }

            function showEsfList()
            {
                var columns = [ {header:'Trano',width:110,sortable:true,dataIndex:'trano'},
                    {header:'ERF number',width:100,sortable:true,dataIndex:'erf_no'},
                    {header:'Project ID',width:85,sortable:true,dataIndex:'prj_kode'},
                    {header:'Project Name',width:150,sortable:true,dataIndex:'prj_nama'},
                    {header:'Site Code',width:45,sortable:true,dataIndex:'sit_kode'},
                    {header:'Site Name',width:100,sortable:true,dataIndex:'sit_nama'},
                ];

                urlJson = '/esfh/list/type/P';
                data =  [
                    {name: 'trano', mapping: 'trano'},
                    {name: 'erf_no', mapping: 'erf_no'},
                    {name: 'prj_kode', mapping: 'prj_kode'},
                    {name: 'prj_nama', mapping: 'prj_nama'},
                    {name: 'sit_kode', mapping: 'sit_kode'},
                    {name: 'sit_nama', mapping: 'sit_nama'},
                    {name: 'prj_nama', mapping: 'prj_nama'},];
                primaryKey = 'trano';
                Pk = primaryKey;
                widthGrid = 380;
                heightGrid = 250;

                var stores = new Ext.data.Store({
                    proxy:new Ext.data.HttpProxy({
                        url: urlJson
                    }),
                    reader: new Ext.data.JsonReader({
                        root: 'posts',
                        totalProperty: 'count'
                    },data)
                });

                yAxis=100;
                grids = function()
                {
                    grids.superclass.constructor.call(this, {
                        store: stores,
                        columns: columns,
                        x:0,
                        y:yAxis,
                        id:primaryKey+'_grid',
                        loadMask: true,
                        bbar:[ new Ext.PagingToolbar({
                                pageSize: 100,
                                store: stores,
                                displayInfo: true,
                                displayMsg: 'Displaying data {0} - {1} of {2}',
                                emptyMsg: "No data to display"
                            })],
                        height:heightGrid,
                        width:widthGrid,
                        listeners: {
                            'rowdblclick': function(g, rowIndex, e){
                                closeForm = false;
                                isDblClick = true;
                                objectName = 'trano';
                                txtBoxChange = 'trano_text';
                                closeForm = true;
                                formId = 'a-form-panel-trano_button';
                                prox = 'trano_proxy';
                                gri = 'trano_grid';
                                var trano = g.getStore().getAt(rowIndex).get(objectName);
                                showEsf(trano);
                                Ext.getCmp('esf_no_text').setValue(trano);
                                aForm.close();
                                window.setTimeout(function(){
                                    isDblClick = false;
                                }, 0);
                            }
                        }
                    });
                }
                stores.load();
                Ext.extend(grids, Ext.grid.GridPanel);
                Ext.extend(txtboks,Ext.form.TextField);//PR
                searchTrano = function(field,e){
                    newUrl = '/esfh/listByParams/type/P/name/trano/data/' + field.getValue(); prox = Pk+'_proxy';
                    gri = Pk+'_grid';
                    proxies = Ext.getCmp(gri).getStore();
                    proxies.proxy = new Ext.data.HttpProxy( {
                        url: newUrl
                    });
                    Ext.getCmp(gri).getStore().reload();
                };
                searchErfno = function(field,e){
                    newUrl = '/esfh/listByParams/type/P/name/arf_no/data/' + field.getValue(); prox = Pk+'_proxy';
                    gri = Pk+'_grid';
                    proxies = Ext.getCmp(gri).getStore();
                    proxies.proxy = new Ext.data.HttpProxy( {
                        url: newUrl
                    });
                    Ext.getCmp(gri).getStore().reload();
                };
                searchPrj_kode = function(field,e){
                    newUrl = '/esfh/listByParams/type/P/groupby/true/name/prj_kode/data/' + field.getValue(); prox = Pk+'_proxy';
                    gri = Pk+'_grid';
                    proxies = Ext.getCmp(gri).getStore();
                    proxies.proxy = new Ext.data.HttpProxy( {
                        url: newUrl
                    });
                    Ext.getCmp(gri).getStore().reload();
                };
                searchSit_kode = function(field,e){
                    newUrl = '/esfh/listByParams/type/P/site/true/name/sit_kode/data/' + field.getValue(); prox = Pk+'_proxy';
                    gri = Pk+'_grid';
                    proxies = Ext.getCmp(gri).getStore();
                    proxies.proxy = new Ext.data.HttpProxy( {
                        url: newUrl
                    });
                    Ext.getCmp(gri).getStore().reload();
                };

                var aForm =  new Ext.Window({
                    id: 'a-form-panel-trano_button',
                    layout: 'absolute',
                    minWidth: 300,
                    minHeight: 200,
                    stateful:false,
                    width: 400,
                    height: 400,
                    items : [
                        {
                            x: 6,
                            y: 12,
                            xtype: 'label',
                            text: 'ESF Number'
                        },
                        new txtboks(80,10,80,'trans_no',searchTrano),
                        {
                            x: 165,
                            y: 12,
                            xtype: 'label',
                            text: 'ERF Number'
                        },
                        new txtboks(240,10,80,'pr_no',searchErfno),
                        {
                            x : 6,
                            y: 52,
                            xtype: 'label',
                            text: 'Project Code'
                        },
                        new txtboks(80,50,80,'prj_kode',searchPrj_kode),
                        {
                            x: 165,
                            y: 52,
                            xtype: 'label',
                            text: 'Site Code'
                        },
                        new txtboks(240,50,80,'sit_kode',searchSit_kode),
                        {
                            x: 384,
                            y: 12,
                            xtype: 'label',
                            text: ''
                        }
                        ,new grids('pr_list')
                    ]

                });
                aForm.title = 'Choose No Trans';
                aForm.show();

            }

            function showEsfOverhead(esfNum)
            {
                var bForm = new Ext.Window ({
                    id: 'b-form-panel-trano_button',
                    layout:'fit',
                    width: 340,
                    height: 100,
                    style: 'margin-top: 10px',
                    labelAlign: 'right',
                    stateful: false,
                    modal : true,
                    items : [
                        new Ext.form.FormPanel({
                            frame: true,
                            labelWidth: 150,
                            items: [{
                                    fieldLabel : 'ESF Number (Overhead)',
                                    id : 'esf_no_text',
                                    xtype: 'trigger',
                                    allowBlank: false,
                                    editable : false,

                                    value: esfNum,
                                    onTriggerClick:
                                        function ()
                                    {
                                        bForm.close();
                                        showEsfOverheadList();
                                    },
                                    scope: this,
                                    width: 150
                                }]
                        })
                    ],
                    buttons: [
                        {
                            text: 'Edit',
                            id: 'save-to-pr',
                            iconCls: 'silk-upd',
                            handler: function(btn, ev) {
                                var esfnum = Ext.getCmp('esf_no_text').getValue();
                                if (esfnum != undefined && esfnum != "")
                                {
                                    Ext.Ajax.request({
                                        url: '/default/home/cekpayment/type/ESF/trano/' + esfnum,
                                        method:'POST',
                                        success: function(resp){
                                            var returnData = Ext.util.JSON.decode(resp.responseText);
                                            if (returnData.success)
                                            {
                                                myPanel = Ext.getCmp('abs-budget-panel');
                                                myPanel.body.load({
                                                    url: '/procurement/esf/editesf/mode/budget/trano/' + esfnum,
                                                    scripts : true
                                                });
                                            }
                                            else
                                            {
                                                Ext.Msg.alert('Error', returnData.msg);
                                            }
                                        },
                                        failure:function( action){
                                            if(action.failureType == 'server'){
                                                obj = Ext.util.JSON.decode(action.responseText);
                                                Ext.Msg.alert('Error!', obj.errors.reason);
                                            }else{
                                                Ext.Msg.alert('Warning!', 'Server is unreachable : ' + action.responseText);
                                            }
                                        }
                                    });
                                    bForm.close();
                                }
                                else
                                {
                                    Ext.Msg.alert('Error!', 'Please select transaction number!');
                                }
                            }
                        },
                        {
                            text: 'Cancel',
                            id: 'cancel',
                            handler: function(btn, ev) {
                                bForm.close();
                            }

                        }


                    ]
                });

                bForm.show();
            }

            function showEsfOverheadList()
            {
                var columns = [ {header:'Trano',width:110,sortable:true,dataIndex:'trano'},
                    {header:'ERF number',width:100,sortable:true,dataIndex:'erf_no'},
                    {header:'Project ID',width:85,sortable:true,dataIndex:'prj_kode'},
                    {header:'Project Name',width:150,sortable:true,dataIndex:'prj_nama'},
                    {header:'Site Code',width:45,sortable:true,dataIndex:'sit_kode'},
                    {header:'Site Name',width:100,sortable:true,dataIndex:'sit_nama'},
                ];

                urlJson = '/esfh/list/type/O';
                data =  [
                    {name: 'trano', mapping: 'trano'},
                    {name: 'erf_no', mapping: 'erf_no'},
                    {name: 'prj_kode', mapping: 'prj_kode'},
                    {name: 'prj_nama', mapping: 'prj_nama'},
                    {name: 'sit_kode', mapping: 'sit_kode'},
                    {name: 'sit_nama', mapping: 'sit_nama'},
                    {name: 'prj_nama', mapping: 'prj_nama'},];
                primaryKey = 'trano';
                Pk = primaryKey;
                widthGrid = 380;
                heightGrid = 250;

                var stores = new Ext.data.Store({
                    proxy:new Ext.data.HttpProxy({
                        url: urlJson
                    }),
                    reader: new Ext.data.JsonReader({
                        root: 'posts',
                        totalProperty: 'count'
                    },data)
                });

                yAxis=100;
                grids = function()
                {
                    grids.superclass.constructor.call(this, {
                        store: stores,
                        columns: columns,
                        x:0,
                        y:yAxis,
                        id:primaryKey+'_grid',
                        loadMask: true,
                        bbar:[ new Ext.PagingToolbar({
                                pageSize: 100,
                                store: stores,
                                displayInfo: true,
                                displayMsg: 'Displaying data {0} - {1} of {2}',
                                emptyMsg: "No data to display"
                            })],
                        height:heightGrid,
                        width:widthGrid,
                        listeners: {
                            'rowdblclick': function(g, rowIndex, e){
                                closeForm = false;
                                isDblClick = true;
                                objectName = 'trano';
                                txtBoxChange = 'trano_text';
                                closeForm = true;
                                formId = 'a-form-panel-trano_button';
                                prox = 'trano_proxy';
                                gri = 'trano_grid';
                                var trano = g.getStore().getAt(rowIndex).get(objectName);
                                showEsfOverhead(trano);
                                Ext.getCmp('esf_no_text').setValue(trano);
                                aForm.close();
                                window.setTimeout(function(){
                                    isDblClick = false;
                                }, 0);
                            }
                        }
                    });
                }
                stores.load();
                Ext.extend(grids, Ext.grid.GridPanel);
                Ext.extend(txtboks,Ext.form.TextField);//PR
                searchTrano = function(field,e){
                    newUrl = '/esfh/listByParams/type/O/name/trano/data/' + field.getValue(); prox = Pk+'_proxy';
                    gri = Pk+'_grid';
                    proxies = Ext.getCmp(gri).getStore();
                    proxies.proxy = new Ext.data.HttpProxy( {
                        url: newUrl
                    });
                    Ext.getCmp(gri).getStore().reload();
                };
                searchErfno = function(field,e){
                    newUrl = '/esfh/listByParams/type/O/name/arf_no/data/' + field.getValue(); prox = Pk+'_proxy';
                    gri = Pk+'_grid';
                    proxies = Ext.getCmp(gri).getStore();
                    proxies.proxy = new Ext.data.HttpProxy( {
                        url: newUrl
                    });
                    Ext.getCmp(gri).getStore().reload();
                };
                searchPrj_kode = function(field,e){
                    newUrl = '/esfh/listByParams/groupby/true/type/O/name/prj_kode/data/' + field.getValue(); prox = Pk+'_proxy';
                    gri = Pk+'_grid';
                    proxies = Ext.getCmp(gri).getStore();
                    proxies.proxy = new Ext.data.HttpProxy( {
                        url: newUrl
                    });
                    Ext.getCmp(gri).getStore().reload();
                };
                searchSit_kode = function(field,e){
                    newUrl = '/esfh/listByParams/site/true/type/O/name/sit_kode/data/' + field.getValue(); prox = Pk+'_proxy';
                    gri = Pk+'_grid';
                    proxies = Ext.getCmp(gri).getStore();
                    proxies.proxy = new Ext.data.HttpProxy( {
                        url: newUrl
                    });
                    Ext.getCmp(gri).getStore().reload();
                };

                var aForm =  new Ext.Window({
                    id: 'a-form-panel-trano_button',
                    layout: 'absolute',
                    minWidth: 300,
                    minHeight: 200,
                    stateful:false,
                    width: 400,
                    height: 400,
                    items : [
                        {
                            x: 6,
                            y: 12,
                            xtype: 'label',
                            text: 'ESF Number'
                        },
                        new txtboks(80,10,80,'trans_no',searchTrano),
                        {
                            x: 165,
                            y: 12,
                            xtype: 'label',
                            text: 'ERF Number'
                        },
                        new txtboks(240,10,80,'pr_no',searchErfno),
                        {
                            x : 6,
                            y: 52,
                            xtype: 'label',
                            text: 'Project Code'
                        },
                        new txtboks(80,50,80,'prj_kode',searchPrj_kode),
                        {
                            x: 165,
                            y: 52,
                            xtype: 'label',
                            text: 'Site Code'
                        },
                        new txtboks(240,50,80,'sit_kode',searchSit_kode),
                        {
                            x: 384,
                            y: 12,
                            xtype: 'label',
                            text: ''
                        }
                        ,new grids('pr_list')
                    ]

                });
                aForm.title = 'Choose No Trans';
                aForm.show();

            }

            function showEsfSales(esfNum)
            {
                var bForm = new Ext.Window ({
                    id: 'b-form-panel-trano_button',
                    layout:'fit',
                    width: 340,
                    height: 100,
                    style: 'margin-top: 10px',
                    labelAlign: 'right',
                    stateful: false,
                    modal : true,
                    items : [
                        new Ext.form.FormPanel({
                            frame: true,
                            labelWidth: 150,
                            items: [{
                                    fieldLabel : 'ESF Number (Sales)',
                                    id : 'esf_no_text',
                                    xtype: 'trigger',
                                    allowBlank: false,
                                    editable : false,

                                    value: esfNum,
                                    onTriggerClick:
                                        function ()
                                    {
                                        bForm.close();
                                        showEsfSalesList();
                                    },
                                    scope: this,
                                    width: 150
                                }]
                        })
                    ],
                    buttons: [
                        {
                            text: 'Edit',
                            id: 'save-to-pr',
                            iconCls: 'silk-upd',
                            handler: function(btn, ev) {
                                var esfnum = Ext.getCmp('esf_no_text').getValue();
                                if (esfnum != undefined && esfnum != "")
                                {
                                    Ext.Ajax.request({
                                        url: '/default/home/cekpayment/type/ESF/trano/' + esfnum,
                                        method:'POST',
                                        success: function(resp){
                                            var returnData = Ext.util.JSON.decode(resp.responseText);
                                            if (returnData.success)
                                            {
                                                myPanel = Ext.getCmp('abs-budget-panel');
                                                myPanel.body.load({
                                                    url: '/procurement/esf/editesf/mode/sales/trano/' + esfnum,
                                                    scripts : true
                                                });
                                            }
                                            else
                                            {
                                                Ext.Msg.alert('Error', returnData.msg);
                                            }
                                        },
                                        failure:function( action){
                                            if(action.failureType == 'server'){
                                                obj = Ext.util.JSON.decode(action.responseText);
                                                Ext.Msg.alert('Error!', obj.errors.reason);
                                            }else{
                                                Ext.Msg.alert('Warning!', 'Server is unreachable : ' + action.responseText);
                                            }
                                        }
                                    });
                                    bForm.close();
                                }
                                else
                                {
                                    Ext.Msg.alert('Error!', 'Please select transaction number!');
                                }
                            }
                        },
                        {
                            text: 'Cancel',
                            id: 'cancel',
                            handler: function(btn, ev) {
                                bForm.close();
                            }

                        }


                    ]
                });

                bForm.show();
            }

            function showEsfSalesList()
            {
                var columns = [ {header:'Trano',width:110,sortable:true,dataIndex:'trano'},
                    {header:'ERF number',width:100,sortable:true,dataIndex:'erf_no'},
                    {header:'Project ID',width:85,sortable:true,dataIndex:'prj_kode'},
                    {header:'Project Name',width:150,sortable:true,dataIndex:'prj_nama'},
                    {header:'Site Code',width:45,sortable:true,dataIndex:'sit_kode'},
                    {header:'Site Name',width:100,sortable:true,dataIndex:'sit_nama'},
                ];

                urlJson = '/esfh/list/type/S';
                data =  [
                    {name: 'trano', mapping: 'trano'},
                    {name: 'erf_no', mapping: 'erf_no'},
                    {name: 'prj_kode', mapping: 'prj_kode'},
                    {name: 'prj_nama', mapping: 'prj_nama'},
                    {name: 'sit_kode', mapping: 'sit_kode'},
                    {name: 'sit_nama', mapping: 'sit_nama'},
                    {name: 'prj_nama', mapping: 'prj_nama'},];
                primaryKey = 'trano';
                Pk = primaryKey;
                widthGrid = 380;
                heightGrid = 250;

                var stores = new Ext.data.Store({
                    proxy:new Ext.data.HttpProxy({
                        url: urlJson
                    }),
                    reader: new Ext.data.JsonReader({
                        root: 'posts',
                        totalProperty: 'count'
                    },data)
                });

                yAxis=100;
                grids = function()
                {
                    grids.superclass.constructor.call(this, {
                        store: stores,
                        columns: columns,
                        x:0,
                        y:yAxis,
                        id:primaryKey+'_grid',
                        loadMask: true,
                        bbar:[ new Ext.PagingToolbar({
                                pageSize: 100,
                                store: stores,
                                displayInfo: true,
                                displayMsg: 'Displaying data {0} - {1} of {2}',
                                emptyMsg: "No data to display"
                            })],
                        height:heightGrid,
                        width:widthGrid,
                        listeners: {
                            'rowdblclick': function(g, rowIndex, e){
                                closeForm = false;
                                isDblClick = true;
                                objectName = 'trano';
                                txtBoxChange = 'trano_text';
                                closeForm = true;
                                formId = 'a-form-panel-trano_button';
                                prox = 'trano_proxy';
                                gri = 'trano_grid';
                                var trano = g.getStore().getAt(rowIndex).get(objectName);
                                showEsfSales(trano);
                                Ext.getCmp('esf_no_text').setValue(trano);
                                aForm.close();
                                window.setTimeout(function(){
                                    isDblClick = false;
                                }, 0);
                            }
                        }
                    });
                }
                stores.load();
                Ext.extend(grids, Ext.grid.GridPanel);
                Ext.extend(txtboks,Ext.form.TextField);//PR
                searchTrano = function(field,e){
                    newUrl = '/esfh/listByParams/type/S/name/trano/data/' + field.getValue(); prox = Pk+'_proxy';
                    gri = Pk+'_grid';
                    proxies = Ext.getCmp(gri).getStore();
                    proxies.proxy = new Ext.data.HttpProxy( {
                        url: newUrl
                    });
                    Ext.getCmp(gri).getStore().reload();
                };
                searchErfno = function(field,e){
                    newUrl = '/esfh/listByParams/type/S/name/arf_no/data/' + field.getValue(); prox = Pk+'_proxy';
                    gri = Pk+'_grid';
                    proxies = Ext.getCmp(gri).getStore();
                    proxies.proxy = new Ext.data.HttpProxy( {
                        url: newUrl
                    });
                    Ext.getCmp(gri).getStore().reload();
                };
                searchPrj_kode = function(field,e){
                    newUrl = '/esfh/listByParams/groupby/true/type/S/name/prj_kode/data/' + field.getValue(); prox = Pk+'_proxy';
                    gri = Pk+'_grid';
                    proxies = Ext.getCmp(gri).getStore();
                    proxies.proxy = new Ext.data.HttpProxy( {
                        url: newUrl
                    });
                    Ext.getCmp(gri).getStore().reload();
                };
                searchSit_kode = function(field,e){
                    newUrl = '/esfh/listByParams/site/true/type/S/name/sit_kode/data/' + field.getValue(); prox = Pk+'_proxy';
                    gri = Pk+'_grid';
                    proxies = Ext.getCmp(gri).getStore();
                    proxies.proxy = new Ext.data.HttpProxy( {
                        url: newUrl
                    });
                    Ext.getCmp(gri).getStore().reload();
                };

                var aForm =  new Ext.Window({
                    id: 'a-form-panel-trano_button',
                    layout: 'absolute',
                    minWidth: 300,
                    minHeight: 200,
                    stateful:false,
                    width: 400,
                    height: 400,
                    items : [
                        {
                            x: 6,
                            y: 12,
                            xtype: 'label',
                            text: 'ESF Number'
                        },
                        new txtboks(80,10,80,'trans_no',searchTrano),
                        {
                            x: 165,
                            y: 12,
                            xtype: 'label',
                            text: 'ERF Number'
                        },
                        new txtboks(240,10,80,'pr_no',searchErfno),
                        {
                            x : 6,
                            y: 52,
                            xtype: 'label',
                            text: 'Project Code'
                        },
                        new txtboks(80,50,80,'prj_kode',searchPrj_kode),
                        {
                            x: 165,
                            y: 52,
                            xtype: 'label',
                            text: 'Site Code'
                        },
                        new txtboks(240,50,80,'sit_kode',searchSit_kode),
                        {
                            x: 384,
                            y: 12,
                            xtype: 'label',
                            text: ''
                        }
                        ,new grids('pr_list')
                    ]

                });
                aForm.title = 'Choose No Trans';
                aForm.show();

            }

            function showSettlementChoose(prNum)
            {
                var bForm =  new Ext.Window({
                    id: 'b-form-panel-trano_button',
                    layout:'fit',
                    width: 320,
                    height: 100,
                    style: 'margin-top: 10px',
                    labelAlign: 'right',
                    stateful: false,
                    modal: true,
                    resizable: false,
                    items: [
                        new Ext.form.FormPanel({
                            frame: true,
                            labelWidth:130,
                            items: [{
                                    fieldLabel : 'Settlement Number',
                                    id : 'payment_no_text',
                                    xtype: 'trigger',
                                    allowBlank: false,
                                    editable : false,
                                    value: prNum,
                                    onTriggerClick:
                                        function ()
                                    {
                                        bForm.close();
                                        showSettlementList();
                                    },
                                    scope: this,
                                    width: 150
                                }]
                        })

                    ],
                    buttons: [
                        {
                            text: 'Edit',
                            id: 'save-to-pr',
                            iconCls: 'silk-upd',
                            handler: function(btn, ev) {
                                var payno = Ext.getCmp('payment_no_text').getValue();
                                if (payno != undefined)
                                {

                                    myPanel = Ext.getCmp('abs-budget-panel');
                                    myPanel.body.load({
                                        url: '/finance/payment/editsettledesf',
                                        scripts : true,
                                        paramsa:{trano:payno}
                                    });

                                }
                                bForm.close();
                            }

                        },
                        {
                            text: 'Cancel',
                            id: 'cancel',
                            handler: function(btn, ev) {
                                bForm.close();
                            }

                        }


                    ]
                });

                bForm.show();
            }

            function showSettlementList()
            {
                var columns = [ {header:'Settlement Number',width:100,sortable:true,dataIndex:'trano'},
                    {header:'Document Number',width:100,sortable:true,dataIndex:'doc_trano'},
                    {header:'Project ID',width:100,sortable:true,dataIndex:'prj_kode'},
                    {header:'Project Name',width:150,sortable:true,dataIndex:'prj_nama'},
                    {header:'Site Code',width:100,sortable:true,dataIndex:'sit_kode'},
                    {header:'Site Name',width:100,sortable:true,dataIndex:'sit_nama'},
                ];

                urlJson = '/finance/payment/settledesflist';
                data =  [
                    {name: 'trano', mapping: 'trano'},
                    {name: 'doc_trano', mapping: 'doc_trano'},
                    {name: 'prj_kode', mapping: 'prj_kode'},
                    {name: 'prj_nama', mapping: 'prj_nama'},
                    {name: 'sit_kode', mapping: 'sit_kode'},
                    {name: 'sit_nama', mapping: 'sit_nama'},
                    {name: 'prj_nama', mapping: 'prj_nama'},];
                primaryKey = 'trano';
                Pk = primaryKey;
                widthGrid = 380;
                heightGrid = 250;

                var stores = new Ext.data.Store({
                    proxy:new Ext.data.HttpProxy({
                        url: urlJson
                    }),
                    reader: new Ext.data.JsonReader({
                        root: 'posts',
                        totalProperty: 'count'
                    },data)
                });

                yAxis=100;
                grids = function()
                {
                    grids.superclass.constructor.call(this, {
                        store: stores,
                        columns: columns,
                        x:0,
                        y:yAxis,
                        id:primaryKey+'_grid',
                        loadMask: true,
                        bbar:[ new Ext.PagingToolbar({
                                pageSize: 100,
                                store: stores,
                                displayInfo: true,
                                displayMsg: 'Displaying data {0} - {1} of {2}',
                                emptyMsg: "No data to display"
                            })],
                        height:heightGrid,
                        width:widthGrid,
                        listeners: {
                            'rowdblclick': function(g, rowIndex, e){
                                closeForm = false;
                                isDblClick = true;
                                objectName = 'trano';
                                txtBoxChange = 'trano_text';
                                closeForm = true;
                                formId = 'a-form-panel-trano_button';
                                prox = 'trano_proxy';
                                gri = 'trano_grid';
                                var trano = g.getStore().getAt(rowIndex).get(objectName);
                                showSettlementChoose(trano);
                                Ext.getCmp('payment_no_text').setValue(trano);
                                aForm.close();
                                window.setTimeout(function(){
                                    isDblClick = false;
                                }, 0);
                            }
                        }
                    });
                }
                stores.load();

                Ext.extend(grids, Ext.grid.GridPanel);
                Ext.extend(txtboks,Ext.form.TextField);//PR
                searchTrano = function(field,e){
                    newUrl = '/finance/payment/settledesflistbyparam/name/trano/nilai/' + field.getValue(); prox = Pk+'_proxy';
                    gri = Pk+'_grid';
                    proxies = Ext.getCmp(gri).getStore();
                    proxies.proxy = new Ext.data.HttpProxy( {
                        url: newUrl
                    });
                    Ext.getCmp(gri).getStore().reload();
                };
                searchDocNo = function(field,e){
                    newUrl = '/finance/payment/settledesflistbyparam/name/doc_trano/nilai/' + field.getValue(); prox = Pk+'_proxy';
                    gri = Pk+'_grid';
                    proxies = Ext.getCmp(gri).getStore();
                    proxies.proxy = new Ext.data.HttpProxy( {
                        url: newUrl
                    });
                    Ext.getCmp(gri).getStore().reload();
                };
                searchPrj_kode = function(field,e){
                    newUrl = '/finance/payment/settledesflistbyparam/name/prj_kode/nilai/' + field.getValue(); prox = Pk+'_proxy';
                    gri = Pk+'_grid';
                    proxies = Ext.getCmp(gri).getStore();
                    proxies.proxy = new Ext.data.HttpProxy( {
                        url: newUrl
                    });
                    Ext.getCmp(gri).getStore().reload();
                };
                searchSit_kode = function(field,e){
                    newUrl = '/finance/payment/settledesflistbyparam/name/sit_kode/nilai/' + field.getValue(); prox = Pk+'_proxy';
                    gri = Pk+'_grid';
                    proxies = Ext.getCmp(gri).getStore();
                    proxies.proxy = new Ext.data.HttpProxy( {
                        url: newUrl
                    });
                    Ext.getCmp(gri).getStore().reload();
                };

                var aForm =  new Ext.Window({
                    id: 'a-form-panel-trano_button',
                    layout: 'absolute',
                    minWidth: 300,
                    minHeight: 200,
                    stateful:false,
                    modal: true,
                    resizable: false,
                    width: 400,
                    height: 400,
                    items : [
                        {
                            x: 6,
                            y: 12,
                            xtype: 'label',
                            text: 'No Trans'
                        },
                        new txtboks(80,10,80,'trans_no',searchTrano),
                        {
                            x: 165,
                            y: 12,
                            xtype: 'label',
                            text: 'No Document'
                        },
                        new txtboks(240,10,80,'doc_trano',searchDocNo),
                        {
                            x : 6,
                            y: 52,
                            xtype: 'label',
                            text: 'Project Code'
                        },
                        new txtboks(80,50,80,'prj_kode',searchPrj_kode),
                        {
                            x: 165,
                            y: 52,
                            xtype: 'label',
                            text: 'Site Code'
                        },
                        new txtboks(240,50,80,'sit_kode',searchSit_kode),
                        {
                            x: 384,
                            y: 12,
                            xtype: 'label',
                            text: ''
                        }
                        ,new grids('pr_list')
                    ]

                });
                aForm.title = 'Choose No Trans';
                aForm.show();


            }

            function showCancelSettlementChoose(prNum)
            {
                var bForm =  new Ext.Window({
                    id: 'b-form-panel-trano_button',
                    layout:'fit',
                    width: 320,
                    height: 100,
                    style: 'margin-top: 10px',
                    labelAlign: 'right',
                    stateful: false,
                    modal: true,
                    resizable: false,
                    items: [
                        new Ext.form.FormPanel({
                            frame: true,
                            labelWidth:130,
                            items: [{
                                    fieldLabel : 'Settlement Number',
                                    id : 'payment_no_text',
                                    xtype: 'trigger',
                                    allowBlank: false,
                                    editable : false,
                                    value: prNum,
                                    onTriggerClick:
                                        function ()
                                    {
                                        bForm.close();
                                        showCancelSettlementList();
                                    },
                                    scope: this,
                                    width: 150
                                }]
                        })

                    ],
                    buttons: [
                        {
                            text: 'Edit',
                            id: 'save-to-pr',
                            iconCls: 'silk-upd',
                            handler: function(btn, ev) {
                                var payno = Ext.getCmp('payment_no_text').getValue();
                                if (payno != undefined)
                                {

                                    myPanel = Ext.getCmp('abs-budget-panel');
                                    myPanel.body.load({
                                        url: '/finance/payment/editsettledesf/cancel/true',
                                        scripts : true,
                                        params:{trano:payno}
                                    });

                                }
                                bForm.close();
                            }

                        },
                        {
                            text: 'Cancel',
                            id: 'cancel',
                            handler: function(btn, ev) {
                                bForm.close();
                            }

                        }


                    ]
                });

                bForm.show();
            }

            function showCancelSettlementList()
            {
                var columns = [ {header:'Settlement Number',width:100,sortable:true,dataIndex:'trano'},
                    {header:'Document Number',width:100,sortable:true,dataIndex:'doc_trano'},
                    {header:'Project ID',width:100,sortable:true,dataIndex:'prj_kode'},
                    {header:'Project Name',width:150,sortable:true,dataIndex:'prj_nama'},
                    {header:'Site Code',width:100,sortable:true,dataIndex:'sit_kode'},
                    {header:'Site Name',width:100,sortable:true,dataIndex:'sit_nama'},
                ];

                urlJson = '/finance/payment/settledesfcancellist';
                data =  [
                    {name: 'trano', mapping: 'trano'},
                    {name: 'doc_trano', mapping: 'doc_trano'},
                    {name: 'prj_kode', mapping: 'prj_kode'},
                    {name: 'prj_nama', mapping: 'prj_nama'},
                    {name: 'sit_kode', mapping: 'sit_kode'},
                    {name: 'sit_nama', mapping: 'sit_nama'},
                    {name: 'prj_nama', mapping: 'prj_nama'},];
                primaryKey = 'trano';
                Pk = primaryKey;
                widthGrid = 380;
                heightGrid = 250;

                var stores = new Ext.data.Store({
                    proxy:new Ext.data.HttpProxy({
                        url: urlJson
                    }),
                    reader: new Ext.data.JsonReader({
                        root: 'posts',
                        totalProperty: 'count'
                    },data)
                });

                yAxis=100;
                grids = function()
                {
                    grids.superclass.constructor.call(this, {
                        store: stores,
                        columns: columns,
                        x:0,
                        y:yAxis,
                        id:primaryKey+'_grid',
                        loadMask: true,
                        bbar:[ new Ext.PagingToolbar({
                                pageSize: 100,
                                store: stores,
                                displayInfo: true,
                                displayMsg: 'Displaying data {0} - {1} of {2}',
                                emptyMsg: "No data to display"
                            })],
                        height:heightGrid,
                        width:widthGrid,
                        listeners: {
                            'rowdblclick': function(g, rowIndex, e){
                                closeForm = false;
                                isDblClick = true;
                                objectName = 'trano';
                                txtBoxChange = 'trano_text';
                                closeForm = true;
                                formId = 'a-form-panel-trano_button';
                                prox = 'trano_proxy';
                                gri = 'trano_grid';
                                var trano = g.getStore().getAt(rowIndex).get(objectName);
                                showCancelSettlementChoose(trano);
                                Ext.getCmp('payment_no_text').setValue(trano);
                                aForm.close();
                                window.setTimeout(function(){
                                    isDblClick = false;
                                }, 0);
                            }
                        }
                    });
                }
                stores.load();

                Ext.extend(grids, Ext.grid.GridPanel);
                Ext.extend(txtboks,Ext.form.TextField);//PR
                searchTrano = function(field,e){
                    newUrl = '/finance/payment/settledesfcancellistbyparam/name/trano/nilai/' + field.getValue(); prox = Pk+'_proxy';
                    gri = Pk+'_grid';
                    proxies = Ext.getCmp(gri).getStore();
                    proxies.proxy = new Ext.data.HttpProxy( {
                        url: newUrl
                    });
                    Ext.getCmp(gri).getStore().reload();
                };
                searchDocNo = function(field,e){
                    newUrl = '/finance/payment/settledesfcancellistbyparam/name/doc_trano/nilai/' + field.getValue(); prox = Pk+'_proxy';
                    gri = Pk+'_grid';
                    proxies = Ext.getCmp(gri).getStore();
                    proxies.proxy = new Ext.data.HttpProxy( {
                        url: newUrl
                    });
                    Ext.getCmp(gri).getStore().reload();
                };
                searchPrj_kode = function(field,e){
                    newUrl = '/finance/payment/settledesfcancellistbyparam/name/prj_kode/nilai/' + field.getValue(); prox = Pk+'_proxy';
                    gri = Pk+'_grid';
                    proxies = Ext.getCmp(gri).getStore();
                    proxies.proxy = new Ext.data.HttpProxy( {
                        url: newUrl
                    });
                    Ext.getCmp(gri).getStore().reload();
                };
                searchSit_kode = function(field,e){
                    newUrl = '/finance/payment/settledesfcancellistbyparam/name/sit_kode/nilai/' + field.getValue(); prox = Pk+'_proxy';
                    gri = Pk+'_grid';
                    proxies = Ext.getCmp(gri).getStore();
                    proxies.proxy = new Ext.data.HttpProxy( {
                        url: newUrl
                    });
                    Ext.getCmp(gri).getStore().reload();
                };

                var aForm =  new Ext.Window({
                    id: 'a-form-panel-trano_button',
                    layout: 'absolute',
                    minWidth: 300,
                    minHeight: 200,
                    stateful:false,
                    modal: true,
                    resizable: false,
                    width: 400,
                    height: 400,
                    items : [
                        {
                            x: 6,
                            y: 12,
                            xtype: 'label',
                            text: 'No Trans'
                        },
                        new txtboks(80,10,80,'trans_no',searchTrano),
                        {
                            x: 165,
                            y: 12,
                            xtype: 'label',
                            text: 'No Document'
                        },
                        new txtboks(240,10,80,'doc_trano',searchDocNo),
                        {
                            x : 6,
                            y: 52,
                            xtype: 'label',
                            text: 'Project Code'
                        },
                        new txtboks(80,50,80,'prj_kode',searchPrj_kode),
                        {
                            x: 165,
                            y: 52,
                            xtype: 'label',
                            text: 'Site Code'
                        },
                        new txtboks(240,50,80,'sit_kode',searchSit_kode),
                        {
                            x: 384,
                            y: 12,
                            xtype: 'label',
                            text: ''
                        }
                        ,new grids('pr_list')
                    ]

                });
                aForm.title = 'Choose No Trans';
                aForm.show();


            }


            showAddESF = function(){
                myPanel = Ext.getCmp('abs-budget-panel');
                myPanel.body.load({
                    url: '/procurement/esf/addesf',
                    scripts : true
                });
            };

            showAddESFBudget = function (){
                myPanel = Ext.getCmp('abs-budget-panel');
                myPanel.body.load({
                    url: '/procurement/esf/addesf/mode/budget',
                    scripts: true
                });
            };

            showAddESFSales = function (){
                myPanel = Ext.getCmp('abs-budget-panel');
                myPanel.body.load({
                    url: '/procurement/esf/addesf/mode/sales',
                    scripts: true
                });
            };

            showEditESF = function(){
                showEsf();
       
            };

            showEditESFOverhead = function(){
                showEsfOverhead();

            };

            showEditESFSales = function(){
                showEsfSales();
            };

            showAppESF = function(){
                myPanel = Ext.getCmp('abs-budget-panel');
                myPanel.body.load({
                    url: '/default/home/showprocessdocument/type/ESF',
                    scripts : true
                });
            };

            showAllERF = function (){
                myPanel = Ext.getCmp('abs-budget-panel');
                myPanel.body.load({
                    url: '/procurement/esf/allerf',
                    scripts: true
                });
            };

            showSettledESF = function(){
                myPanel = Ext.getCmp('abs-budget-panel');
                myPanel.body.load({
                    url: '/finance/payment/settledesf',
                    scripts : true
                });
            };

            showEditSettlementESF = function(){
                showSettlementChoose();
            };

            showSettledCancelESF = function(){
                myPanel = Ext.getCmp('abs-budget-panel');
                myPanel.body.load({
                    url: '/finance/payment/settledesf/cancel/true',
                    scripts : true
                });
            };

            showEditSettlementCancelESF = function(){
                showCancelSettlementChoose();
            };


            showAddESFPulsa = function(){
                myPanel = Ext.getCmp('abs-budget-panel');
                myPanel.body.load({
                    url: '/procurement/esf-pulsa/add',
                    scripts : true
                });
            };
            var windowForm =  ({

                title: 'Entertainment Settlement Form Transaction',
                id: 'abs-budget-panel',
                layout: 'fit',
                bodyCfg : { cls:'xpanel-body-table' , style: {'overflow':'auto'}},
                bodyStyle: 'padding:15px;',
                loadMask: true,
                minWidth: 300,
                minHeight: 200,
                tbar: [
                    {
                        xtype: 'tbbutton',
                        text: 'Select Action',
                        iconCls: 'menu-drop',
                        menu: {
			
                            items: [
                                //        {
                                //          id:'esf_pool_button',
                                //        text:'Pool ERF',
                                //      cls:'x-btn-text-icon',
                                //    icon:"/images/list.png",
                                //  handler:showAllERF
                                // },
                                {
                                    id: 'esf_add_button',
                                    text: 'Create ESF',
                                    cls:"x-btn-text-icon" ,
                                    icon:"/images/icons/fam/action_paste.gif",
                                    handler:showAddESF
                                }
                                ,
                                {
                                    id:'esf_add_overhead_button',
                                    text:'Create New ESF (Overhead)',
                                    cls:'x-btn-text-icon',
                                    icon:"/images/icons/fam/action_paste.gif",
                                    handler:showAddESFBudget
                                },
                                {
                                    id:'esf_add_sales_button',
                                    text:'Create New ESF (Sales)',
                                    cls:'x-btn-text-icon',
                                    icon:"/images/icons/fam/action_paste.gif",
                                    handler:showAddESFSales
                                },
                                {
                                    id: 'esf_edit_button',
                                    text: 'Edit Existing ESF',
                                    cls:"x-btn-text-icon" ,
                                    icon:"/images/icons/fam/page_edit.gif",
                                    handler:showEditESF
                                },
                                {
                                    id: 'esf_edit_overhead_button',
                                    text: 'Edit Existing ESF (Overhead)',
                                    cls:"x-btn-text-icon" ,
                                    icon:"/images/icons/fam/page_edit.gif",
                                    handler:showEditESFOverhead
                                },
                                {
                                    id: 'esf_edit_sales_button',
                                    text: 'Edit Existing ESF (Sales)',
                                    cls:"x-btn-text-icon" ,
                                    icon:"/images/icons/fam/page_edit.gif",
                                    handler:showEditESFSales
                                },
                                '-',
//                                {
//                                    id: 'esf_pulsa_button',
//                                    text: 'Create New ESF Pulsa/Voucher',
//                                    cls:"x-btn-text-icon" ,
//                                    icon:"/images/icons/fam/action_paste.gif",
//                                    handler:showAddESFPulsa
//                                },
//                                '-',
                                {
                                    id: 'esf_app_button',
                                    text: 'Verify & Approval',
                                    cls:"x-btn-text-icon" ,
                                    icon:"/images/icons/fam/page_script.gif",
                                    handler:showAppESF
                                },{
                                    id: 'esf_settled_button',
                                    text: 'Close Settlement',
                                    cls:"x-btn-text-icon" ,
                                    icon:"/images/money.png",
                                    handler:showSettledESF
                                },{
                                    id: 'esf_edit_settled_button',
                                    text: 'Edit Close Settlement',
                                    cls:"x-btn-text-icon" ,
                                    icon:"/images/money.png",
                                    handler:showEditSettlementESF
                                },{
                                    id: 'esf_settledcancel_button',
                                    text: 'Return Settlement',
                                    cls:"x-btn-text-icon" ,
                                    icon:"/images/money.png",
                                    handler:showSettledCancelESF
                                },{
                                    id: 'esf_edit_settledcancel_button',
                                    text: 'Edit Return Settlement',
                                    cls:"x-btn-text-icon" ,
                                    icon:"/images/money.png",
                                    handler:showEditSettlementCancelESF
                                }

                            ]
                        }
                    }
                ]
            });


            viewPort = Ext.getCmp('viewport');

            centerRegionTab = viewPort.getComponent('content-panel');
            centerRegionTab.items.each(function(c){centerRegionTab.remove(c);});
            centerRegionTab.add(windowForm);
            panelBaru = Ext.getCmp('abs-budget-panel');
            centerRegionTab.layout.setActiveItem('abs-budget-panel');
            myPanel = Ext.getCmp('abs-budget-panel');
            //panel default di blank in dulu
            //myPanel.body.load({
            //   url: '/procurement/esf/allerf',
            //  scripts: true
            //});
            showSubmenu('abs-budget-panel');
        });
</script>