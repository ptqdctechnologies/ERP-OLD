
<script type="text/javascript" src="/js/layout/base/iconcomboext.js"></script>

<script type="text/javascript">

    var projectPopUphandler = function(button, event) {

        idForm = button.id.toString();
        var aForm = new Ext.Window({
            id: 'a-form-panel-pjr_kode_button',
            layout: 'absolute',
            minWidth: 300,
            minHeight: 200,
            stateful: false,
            modal: true,
            resizable: false,
            width: 400,
            height: 400,
            items: [
                {
                    x: 10,
                    y: 12,
                    xtype: 'label',
                    text: 'Project Code:'
                },
                new txtboks(80, 10, 80, 'project_code', searchPrjKode),
                {
                    x: 170,
                    y: 12,
                    xtype: 'label',
                    text: 'Project Name:'
                },
                new txtboks(240, 10, 80, 'project_name', searchPrjName),
                new SampleGrid('project_list')
            ]

        });
        aForm.title = 'Choose Project';
        aForm.show();
    };

    var sitePopUpHandler = function(button, event) {

        idForm = button.id.toString();
        var aForm = new Ext.Window({
            id: 'a-form-panel-site_kode_button',
            layout: 'absolute',
            minWidth: 300,
            minHeight: 200,
            width: 400,
            height: 400,
            items: [
                {
                    x: 10,
                    y: 12,
                    xtype: 'label',
                    text: 'Site Code:'
                },
                new txtboks(80, 10, 80, 'site_code', searchSiteKode),
                {
                    x: 170,
                    y: 12,
                    xtype: 'label',
                    text: 'Site Name:'
                },
                new txtboks(240, 10, 80, 'site_name', searchSiteName),
                new SampleGrid('site_list')
            ]

        });
        aForm.title = 'Pop Up Window';
        aForm.show();
    };

    var supplierPopUphandler = function(button, event) {
        var aForm = new Ext.Window({
            id: 'a-form-panel-sup_kode_button',
            layout: 'absolute',
            minWidth: 300,
            minHeight: 200,
            stateful: false,
            modal: true,
            resizable: false,
            width: 400,
            height: 400,
            items: [
                {
                    x: 6,
                    y: 12,
                    xtype: 'label',
                    text: 'Supplier Code'
                },
                new txtboks(80, 10, 80, 'suplier_code', searchSupCode),
                {
                    x: 184,
                    y: 12,
                    xtype: 'label',
                    text: 'Supplier Name'
                },
                new txtboks(260, 10, 80, 'suplier_name', searchSupName),
                new SampleGrid('suplier_list')
            ]

        });
        aForm.title = 'Choose Supplier';
        aForm.show();
    };

    showBudget = function() {
        myPanel = Ext.getCmp('abs-budget-panel');
        prjKode = Ext.getCmp('prj_kode_text').getValue();
        sitKode = Ext.getCmp('sit_kode_text').getValue();
        supKode = Ext.getCmp('sup_kode_text').getValue();
        ppn_ref_number = Ext.getCmp('ppn_ref_number').getValue();
        ppn_ref_number = ppn_ref_number.replace("/", "_");

        urlLoad = '/report/rpisummary';

        if (prjKode == '' && ppn_ref_number == '')
        {
            Ext.MessageBox.show({
                title: 'Error',
                msg: 'Please Insert/Select Project Code!',
                buttons: Ext.MessageBox.OK,
                icon: Ext.MessageBox.ERROR
            });
            return false;

        }

        if (prjKode != '')
            urlLoad += '/prj_kode/' + prjKode;
        if (sitKode != '')
            urlLoad += '/sit_kode/' + sitKode;
        if (supKode != '')
            urlLoad += '/sup_kode/' + supKode;
        if (ppn_ref_number != '')
            urlLoad += '/ppn_ref_number/' + ppn_ref_number;

//	    {
//	    	Ext.MessageBox.show({
//		           title: 'Error',
//		           msg: 'Please Insert/Select Site Code!',
//		           buttons: Ext.MessageBox.OK,
//		           icon: Ext.MessageBox.ERROR
//		       });
//			 return false;	
//	    }
//	        urlLoad = '/report/rpisummary/prj_kode/' + prjKode;
//	    else
//	        urlLoad = '/report/rpisummary/prj_kode/' + prjKode + '/sit_kode/' + sitKode;

        myPanel.body.load({
            url: urlLoad,
            scripts: true

        });
    }

    var datas = new Ext.data.SimpleStore({
        fields: ['type', 'name']
        , data: [['pdf', 'PDF'], ['xls', 'Excel']]
    });

    var combo = new Ext.form.ComboBox({
        fieldLabel: 'Export'
        , name: 'showReport'
        , store: datas
        , valueField: 'type'
        , displayField: 'name'
        , typeAhead: true
        , mode: 'local'
        , triggerAction: 'all'
        , value: 'pdf'
        , emptyText: 'Select..'
        , selectOnFocus: true
        , anchor: '95%'
        , hiddenName: 'type'
        , width: 70

    });

    exportReport = function() {
        prjKode = Ext.getCmp('prj_kode_text').getValue();
        sitKode = Ext.getCmp('sit_kode_text').getValue();
        supKode = Ext.getCmp('sup_kode_text').getValue();
        ppn_ref_number = Ext.getCmp('ppn_ref_number').getValue();
        ppn_ref_number = ppn_ref_number.replace("/", "_");

        urlLoad = '/report/rpisummary/export/true';

        if (prjKode == '' && ppn_ref_number == '')
        {
            Ext.MessageBox.show({
                title: 'Error',
                msg: 'Please Insert/Select Project Code!',
                buttons: Ext.MessageBox.OK,
                icon: Ext.MessageBox.ERROR
            });
            return false;

        }

        if (prjKode != '')
            urlLoad += '/prj_kode/' + prjKode;
        if (sitKode != '')
            urlLoad += '/sit_kode/' + sitKode;
        if (supKode != '')
            urlLoad += '/sup_kode/' + supKode;
        if (ppn_ref_number != '')
            urlLoad += '/ppn_ref_number/' + ppn_ref_number;


        location.href = urlLoad;
    };

    var windowForm = ({
        title: 'RPI Summary Report',
        id: 'abs-budget-panel',
        layout: 'fit',
        bodyCfg: {cls: 'xpanel-body-table', style: {'overflow': 'auto'}},
        bodyStyle: 'padding:15px;',
        minWidth: 300,
        minHeight: 200,
        loadMask: true,
        tbar: [
            {
                xtype: 'tbtext',
                text: 'Project Code'
            },
//        {
//            xtype:'textfield',
//            id:'prj_kode_text',
//            width:70
//        },
//        {
//            xtype: 'button',
//            id: 'prj_kode_button',
//            cls:"x-btn-icon" ,
//            icon:"/images/g_rec_src.png",
//            handler:projectPopUphandler
//        },
            {
                xtype: 'projectselectorreport',
                anchor: '100%',
                id: 'project-select',
                Selectid: 'prj_kode_text',
                Nameid: 'prj_nama_text',
                ShowName: false,
                showAll: true,
                callback: function(params) {
                    Ext.getCmp('sit_kode_text').setValue('');
                }
            },
            '-',
            {
                xtype: 'tbtext',
                text: 'Site Code'
            },
//        {
//            xtype:'textfield',
//            id:'sit_kode_text',
//            width:70
//        },
//        {
//            xtype: 'button',
//            id: 'site_kode_button',
//            cls:"x-btn-icon" ,
//            icon:"/images/g_rec_src.png",
//            handler:sitePopUpHandler
//        },

            {
                xtype: 'siteselector',
                id: 'siteselect_search',
                ProjectSelectid: 'prj_kode_text',
                SiteSelectid: 'sit_kode_text',
                ShowName: false,
                showAll: true,
                width: 150
            },
            {
                xtype: 'tbtext',
                text: 'Supplier Code'
            },
            {
                xtype: 'textfield',
                id: 'sup_kode_text',
                width: 70
            },
            {
                xtype: 'button',
                id: 'sup_kode_button',
                cls: "x-btn-icon",
                icon: "/images/g_rec_src.png",
                handler: supplierPopUphandler
            }, '-',
            {
                xtype: 'tbtext',
                text: 'Tax Invoice'
            },
            {
                xtype: 'textfield',
                id: 'ppn_ref_number',
                width: 90,
                label: 'Tax Invoice'
            }, '-',
            {
                xtype: 'button',
                text: 'Show',
                width: 70,
                id: 'show_budget',
                cls: "x-btn-text-icon",
                icon: "/images/icons/fam/control_rewind.png",
                handler: showBudget
            },
            '-'
                    ,
//            combo,
            {
                xtype: 'button',
                id: 'export_button',
                cls: "x-btn-icon",
                icon: "/images/print.png",
                handler: exportReport
            }, '-',
            {
                xtype: 'button',
                text: 'Reset',
                width: 50,
                id: 'reset_button',
                cls: "x-btn-icon",
                handler: function() {
                    Ext.getCmp('prj_kode_text').setValue('');
                    Ext.getCmp('sit_kode_text').setValue('');
                    Ext.getCmp('sup_kode_text').setValue('');
                    Ext.getCmp('ppn_ref_number').setValue('');
                }

            }
        ]
    });

    SampleGrid = function(gridType, yAxis, param) {
        //View column header from grid/columnHeaader
        var yAxis = yAxis;
        if (gridType == 'project_list')
        {
<?php echo $this->action('columnHeader', 'grid', null, array("type" => "project_list")); ?>

            urlJson = '<?php echo $this->action('getUrlJson', 'grid', null, array("type" => "project_list")); ?>';
            data = [<?php echo $this->action('mappingField', 'grid', null, array("type" => "project_list")); ?>];
            primaryKey = '<?php echo $this->action('getPrimaryKey', 'grid', null, array("type" => "project")); ?>';
            Pk = primaryKey;
            widthGrid = 380;
            heightGrid = 250;
        }
        else if (gridType == 'site_list')
        {
<?php echo $this->action('columnHeader', 'grid', null, array("type" => "site_list")); ?>
            if (Ext.getCmp('prj_kode_text').getValue() == '')
            {
                urlJson = '<?php echo $this->action('getUrlJson', 'grid', null, array("type" => "site_list")); ?>';
            }
            else
            {
                urlJson = '<?php echo $this->action('getUrlJson', 'grid', null, array("type" => "site_list_param", 'noParam' => '1', 'columnName' => 'prj_kode')); ?>' + Ext.getCmp('prj_kode_text').getValue();
            }
            data = [<?php echo $this->action('mappingField', 'grid', null, array("type" => "site_list")); ?>];
            primaryKey = '<?php echo $this->action('getPrimaryKey', 'grid', null, array("type" => "site")); ?>';
            Pk = primaryKey;
            widthGrid = 380;
            heightGrid = 250;
        }
        else if (gridType == 'suplier_list')
        {
<?php echo $this->action('columnHeader', 'grid', null, array("type" => "suplier_list")); ?>

            urlJson = '<?php echo $this->action('getUrlJson', 'grid', null, array("type" => "suplier_list")); ?>';
            data = [<?php echo $this->action('mappingField', 'grid', null, array("type" => "suplier_list")); ?>];
            primaryKey = 'sup_kode';
            Pk = primaryKey;
            widthGrid = 380;
            heightGrid = 250;
        }
        var stores = new Ext.data.Store({
            proxy: new Ext.data.HttpProxy({
                url: urlJson
            }),
            reader: new Ext.data.JsonReader({
                root: 'posts',
                totalProperty: 'count'
            }, data)
        });

        if (yAxis == undefined)
            yAxis = 100;
        SampleGrid.superclass.constructor.call(this, {
            store: stores,
            columns: columns,
            x: 0,
            y: yAxis,
            id: primaryKey + '_grid',
            loadMask: true,
            bbar: [new Ext.PagingToolbar({
                    pageSize: 100,
                    store: stores,
                    displayInfo: true,
                    displayMsg: 'Displaying data {0} - {1} of {2}',
                    emptyMsg: "No data to display"
                })],
            height: heightGrid,
            width: widthGrid,
            listeners: {
                'rowdblclick': function(g, rowIndex, e) {
                    closeForm = false;
                    isDblClick = true;
                    if (gridType == 'project_list')
                    {
                        objectName = 'Prj_Kode';
                        txtBoxChange = 'prj_kode_text';
                        closeForm = true;
                        formId = 'a-form-panel-pjr_kode_button';
                        var prjKode = g.getStore().getAt(rowIndex).get(objectName);
                        newUrl = '/procurement/listByParams/name/prj_kode/data/' + prjKode;
                        prox = 'trano_proxy';
                        gri = 'trano_grid';
//                                proxies = Ext.getCmp(gri).getStore();
//                                proxies.proxy = new Ext.data.HttpProxy({
//                                    url: newUrl
//                                     });
//                                Ext.getCmp(gri).getStore().reload();
                        var record = g.getStore().getAt(rowIndex).get(objectName);
                        Ext.getCmp('prj_kode_text').setValue(record);
                    }
                    else if (gridType == 'site_list')
                    {
                        objectName = 'sit_kode';
                        txtBoxChange = 'sit_kode_text';
                        closeForm = true;
                        formId = 'a-form-panel-site_kode_button';
                        var prjNama = g.getStore().getAt(rowIndex).get('sit_nama');
                        var prjKode = g.getStore().getAt(rowIndex).get('prj_kode');
                        var sitKode = g.getStore().getAt(rowIndex).get(objectName);
                        newUrl = '/procurement/listByParams/name/sit_kode/joinToPod/true/data/' + sitKode + '/Prj_Kode/' + prjKode;
                        prox = 'trano_proxy';
                        gri = 'trano_grid';
//                                proxies = Ext.getCmp(gri).getStore();
//                                proxies.proxy = new Ext.data.HttpProxy({
//                                    url: newUrl
//                                     });
//                                Ext.getCmp(gri).getStore().reload();
                        var record = g.getStore().getAt(rowIndex).get(objectName);
                        Ext.getCmp('sit_kode_text').setValue(record);
                    } else if (gridType == 'suplier_list')
                    {
                        objectName = 'sup_kode';
                        txtBoxChange = 'sup_kode_text';
                        closeForm = true;
                        formId = 'a-form-panel-sup_kode_button';
                        var supKode = g.getStore().getAt(rowIndex).get(objectName);
                        newUrl = '/suplier/listByParams/name/supl_kode/data/' + supKode;
                        prox = 'trano_proxy';
                        gri = 'trano_grid';
                        var record = g.getStore().getAt(rowIndex).get(objectName);
                        var record2 = g.getStore().getAt(rowIndex).get("sup_nama");
                        Ext.getCmp('sup_kode_text').setValue(record);
                        if (Ext.getCmp('sup_nama_text') != undefined)
                            Ext.getCmp('sup_nama_text').setValue(record2);
                    }
                    if (closeForm)
                    {
                        Ext.getCmp(formId).close();
                    }
                    //Ext.getCmp('project_code').setValue(record[0].get('Prj_Kode'));
                    //Ext.Msg.alert('you clicked', 'id of row: ' + record.json);

                    window.setTimeout(function() {
                        isDblClick = false;
                    }, 0);
                }
            }
        });
        stores.load();

    }
    Ext.extend(SampleGrid, Ext.grid.GridPanel);

<?php echo $this->action('index', 'textfield', null); ?>
    searchPrjKode = function(field, e) {
        newUrl = '/project/listByParams/name/Prj_Kode/all/true/data/' + field.getValue();
        prox = Pk + '_proxy';
        gri = Pk + '_grid';
        proxies = Ext.getCmp(gri).getStore();
        proxies.proxy = new Ext.data.HttpProxy({
            url: newUrl
        });
        Ext.getCmp(gri).getStore().reload();

    }
    searchPrjName = function(field, e) {
        newUrl = '/project/listByParams/name/Prj_Nama/all/true/data/' + field.getValue();
        prox = Pk + '_proxy';
        gri = Pk + '_grid';
        proxies = Ext.getCmp(gri).getStore();
        proxies.proxy = new Ext.data.HttpProxy({
            url: newUrl
        });
        Ext.getCmp(gri).getStore().reload();

    }

    searchSiteName = function(field, e) {
        newUrl = '/default/site/listbyproject/all/true/sit_nama/' + field.getValue() + '/prj_kode/' + Ext.getCmp('prj_kode_text').getValue();
        prox = Pk + '_proxy';
        gri = Pk + '_grid';
        proxies = Ext.getCmp(gri).getStore();
        proxies.proxy = new Ext.data.HttpProxy({
            url: newUrl
        });
        Ext.getCmp(gri).getStore().reload();

    }
    searchSiteKode = function(field, e) {
        newUrl = '/default/site/listbyproject/all/true/sit_kode/' + field.getValue() + '/prj_kode/' + Ext.getCmp('prj_kode_text').getValue();
        prox = Pk + '_proxy';
        gri = Pk + '_grid';
        proxies = Ext.getCmp(gri).getStore();
        proxies.proxy = new Ext.data.HttpProxy({
            url: newUrl
        });
        Ext.getCmp(gri).getStore().reload();

    }

    searchSupCode = function(field, e) {
        if (field.getValue().toString().length >= 2)
        {
            newUrl = '/suplier/listByParams/name/sup_kode/data/' + field.getValue();
            prox = Pk + '_proxy';
            gri = Pk + '_grid';
            proxies = Ext.getCmp(gri).getStore();
            proxies.proxy = new Ext.data.HttpProxy({
                url: newUrl
            });
            Ext.getCmp(gri).getStore().reload();
        }
    }
    searchSupName = function(field, e) {
        if (field.getValue().toString().length >= 2)
        {
            newUrl = '/suplier/listByParams/name/sup_nama/data/' + field.getValue();
            prox = Pk + '_proxy';
            gri = Pk + '_grid';
            proxies = Ext.getCmp(gri).getStore();
            proxies.proxy = new Ext.data.HttpProxy({
                url: newUrl
            });
            Ext.getCmp(gri).getStore().reload();
        }
    }



    var aForm = new Ext.Window({
        id: 'a-form-panel-1',
        layout: 'absolute',
        minWidth: 300,
        minHeight: 200,
        closable: false,
        width: 400,
        height: 400,
        items: [
            {
                x: 10,
                y: 12,
                xtype: 'label',
                text: 'Project Code:'
            },
            new txtboks(80, 10, 80, 'project_code', searchPrjKode),
            {
                xtype: 'panel',
                x: 150,
                y: 11,
                items: {
                    xtype: 'button',
                    id: 'site_kode_button',
                    cls: "x-btn-icon",
                    icon: "/images/g_rec_src.png"
                }
            },
            {
                x: 170,
                y: 12,
                xtype: 'label',
                text: 'Project Name:'
            },
            new txtboks(240, 10, 80, 'project_name', searchPrjName),
            new SampleGrid('project_list')
        ]

    });


    viewPort = Ext.getCmp('viewport');

    centerRegionTab = viewPort.getComponent('content-panel');
    centerRegionTab.items.each(function(c) {
        centerRegionTab.remove(c);
    })
    centerRegionTab.add(windowForm);
    panelBaru = Ext.getCmp('abs-budget-panel');
    centerRegionTab.layout.setActiveItem('abs-budget-panel');

</script>

