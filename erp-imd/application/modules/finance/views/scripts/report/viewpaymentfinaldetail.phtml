<script type="text/javascript">


    var type = '<?=$this->type?>';
    var trano = '<?=$this->trano?>';
    var prj_kode = '<?=$this->prj_kode?>';
    var sit_kode = '<?=$this->sit_kode?>';
    var supplier = '<?=$this->supplier?>';
    var year = '<?=$this->year?>';

//    console.log(type);

    Ext.onReady(function(){

        Ext.QuickTips.init();

        
        var storepayment = new Ext.data.Store({

        url:'/finance/report/getstorepaymentfinaldetail/type/' + type + '/trano/' + trano + '/prj_kode/' + prj_kode + '/sit_kode/' + sit_kode +
                '/supplier/' + supplier + '/year/'+year,
        autoLoad:true,
            reader:new Ext.data.JsonReader ({
                root:'data',
                totalProperty:'total',
                fields:[
                    {name:'ref_number'},
                    {name:'prj_kode'},
                    {name:'prj_nama'},
                    {name:'ket'},
                    {name:'approve'},
                    {name:'requester'},
                    {name:'total_bpv'},
                    {name:'payment_status'},
                    {name:'total_payment'},
                ]
            })

        })

        var gridpaymentreportAction = new Ext.grid.GridPanel ({

            store:storepayment,
            viewConfig:{
                forceFit:true
            },
            frame:true,
            renderTo:'grid-payment-report',
            height:300,
            columns:[
            new Ext.grid.RowNumberer({width: 30}),
            {
                header:'Project Code',
                dataIndex:'prj_kode',
                align:'center',
                sortable:true
            },
            {
                header:'Project Name',
                dataIndex:'prj_nama',
                align:'center',
                sortable:true
            },{
                header:'Project Category',
                dataIndex:'prj_category',
                align:'center',
                sortable:true
            },{
                header:'Document Number',
                dataIndex:'ref_number',
                align:'center',
                sortable:true
            },{
                header:'Requester',
                dataIndex:'requester',
                align:'center',
                sortable:true
            },{
                header:'Status',
                dataIndex:'approve',
                align:'right',
                sortable:true
            },
            {
                header:'Description',
                dataIndex:'ket',
                align:'center',
                sortable:true
            },          
            {
                header:'Amount',
                dataIndex:'total_bpv',
                align:'right',
                sortable:true,
                renderer: function(v){
                    return v ? Ext.util.Format.number(v, '0,0') : '0';
                }
            },          
            {
                header:'Total Paid',
                dataIndex:'total_payment',
                align:'right',
                sortable:true,
                renderer: function(v){
                    return v ? Ext.util.Format.number(v, '0,0') : '';
                }
            },{
                header:'Payment',
                dataIndex:'payment_status',
                align:'right',
                sortable:true
            }],
            bbar:new Ext.PagingToolbar ({
                id: 'paging-report',
                pageSize: 5000,
                store: storepayment,
                displayInfo: true,
                displayMsg: 'Displaying data {0} - {1} of {2}',
                emptyMsg: "No data to display"
            }),
            tbar: [
                {
                    xtype: 'button',
                    iconCls: 'silk-printer',
                    text: 'Print This Table',
                    handler: function(){
                        Ext.ux.Printer.print({
                            component: gridpaymentreportAction,
                            printTitle: 'Payment Report Detail'
                        });
                    }
                }
            ],
            listeners: {
                'beforerender': function(grid) {
                    store = grid.getStore();
                    if (type != 'BRFP') {
                        cm = grid.getColumnModel();
                        cm.setHidden(3, true);
                    }

                }
            }

        })


    })


</script>

    <div id="grid-payment-report"></div>
