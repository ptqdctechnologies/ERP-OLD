<script type="text/javascript">

    var month = '<?=$this->month?>';
    var startdate = '<?=$this->startdate?>';
    var enddate = '<?=$this->enddate?>';
    var ref_number = '<?=$this->ref_number?>';

    Ext.onReady(function(){

        Ext.QuickTips.init();

        var summary = new Ext.grid.GroupSummary();

        var store = new Ext.ux.MultiGroupingStore({

//            url:'/finance/adjustingjournal/getgeneraljurnal/type/' + type + '/startdate/' + startdate + '/enddate/' + enddate + '/ref_number/' + ref_number,
//            autoLoad:true,
//            paramNames: {
//                dir: 'DESC',
//                sort: 'tgl'
//            },
                reader:new Ext.data.JsonReader ({
                    root:'data',
                    totalProperty:'total',
                    fields:[{
                        name:'id',type:'String'
                    },{
                        name:'item_type',type:'String'
                    },{
                        name:'trano',type:'String'
                    },{
                        name:'payment_trano',type:'String'
                    },{
                        name:'coa_kode',type:'String'
                    },{
                        name:'coa_nama',type:'String'
                    },{
                        name:'debit'
                    },{
                        name:'credit'
                    },{
                        name:'tgl',type:'date',dateFormat : 'Y-m-d H:i:s'
                    },{
                        name:'payment_tgl',type:'date',dateFormat : 'Y-m-d H:i:s'
                    },,{
                        name:'val_kode'
                    },{
                        name:'rateidr'
                    }]
                })
            ,sortInfo: {field: 'payment_tgl', direction: 'ASC'}
            ,groupField: ['item_type','payment_trano']
            });

        store.loadData(<?=$this->json?>);

        var groupView = new Ext.ux.MultiGroupingView({
            hideGroupedColumn :true
            ,enableRowBody:true
            ,getRowClass:function(record, rowIndex, p, store) {
            }
            ,startCollapsed: true
            ,forceFit: true
            ,emptyGroupText: 'NULL'
            ,displayEmptyFields: true //you can choose to show the group fields, even when they have no values
            ,groupTextTpl:
                '{text} <span style=\'color: red;\'>{gvalue}</span> ({[values.rs.length]} {[values.rs.length == 1 ? "Journal" : "Journals"]})'
//                    '{[values.group == "ref_number" ? "&nbsp;&nbsp;<span style=\'color: black;\'>" + values.rs[0].data["ket"] + "</span>" : "" ]} '
            ,displayFieldSeperator: ', ' //you can control how the display fields are seperated
        });

        var grid = new Ext.ux.MultiGroupingPanel({
            stateful: false,
            store: store,
            frame: true,
            renderTo: 'grid-jurnal',
            columns: [
                {
                    header: 'Type',
                    width: 50,
                    sortable: true,
                    dataIndex: 'item_type'
                },{
                    header: 'Payment Trano',
                    width: 120,
                    sortable: true,
                    dataIndex: 'payment_trano'
                },{
                    header: 'BPV Trano',
                    width: 120,
                    sortable: true,
                    dataIndex: 'trano'
                },{
                    header:'Payment Date',
                    sortable:true,
                    dataIndex: 'payment_tgl',
                    renderer: Ext.util.Format.dateRenderer('d M Y')
                },{
                    header:'Coa code',
                    width: 80,
                    sortable: true,
                    dataIndex:'coa_kode'
                },{
                    header:'Coa name',
                    sortable: true,
                    dataIndex:'coa_nama'
                },{
                    header:'Debit',
                    sortable:true,
                    dataIndex:'debit',
                    summaryType: 'sum',
                    align: 'right',
                    renderer: function(v,p,r){
                        if (v < 0)
                            var value = '(' + Ext.util.Format.number((-1 * v),'?0,000.00') + ')';
                        else
                            var value = Ext.util.Format.number(v,'?0,000.00');
                        return value;
                    }
                },{
                    header:'Credit',
                    sortable:true,
                    dataIndex:'credit',
                    summaryType: 'sum',
                    align: 'right',
                    renderer: function(v,p,r){
                        if (v < 0)
                            var value = '(' + Ext.util.Format.number((-1 * v),'?0,000.00') + ')';
                        else
                            var value = Ext.util.Format.number(v,'?0,000.00');
                        return value;
                    }
                }
            ],
            view : groupView,
            plugins: summary,
            loadMask: true,
            height: 450
//            bbar:new Ext.PagingToolbar ({
//                id: 'paging-jurnal',
//                pageSize: 10,
//                store: storegeneraljurnal,
//                displayInfo: true,
//                displayMsg: 'Displaying data {0} - {1} of {2}',
//                emptyMsg: "No data to display"
//            })
        });

    })

</script>

    <div id="grid-jurnal"></div>