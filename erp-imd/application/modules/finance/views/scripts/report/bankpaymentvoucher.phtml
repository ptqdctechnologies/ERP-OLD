<script type="text/javascript">

    Ext.onReady(function() {

        Ext.QuickTips.init();

        var ref_number = '';
        var type = '';
        showBPV = function() {
            myPanel = Ext.getCmp('abs-budget-panel');
            noTrans = Ext.getCmp('voucher-number').getValue();

            myPanel.body.load({
                url: '/finance/report/gridbpv/trano/' + noTrans,
                scripts: true
            });
        };


        printdocument = function()
        {
            noTrans = Ext.getCmp('voucher-number').getValue();
//            type = Ext.getCmp('type').getValue();
            type_doc = 'pdf';

            if (noTrans == '')
            {
                Ext.MessageBox.show({
                    title: 'Error',
                    msg: 'Please Insert/Select Trans No!',
                    buttons: Ext.MessageBox.OK,
                    icon: Ext.MessageBox.ERROR
                });
                return false;

            }

            urlLoad = '/jasper/paymentvoucherreport/trano/' + noTrans + '/type_doc/' + type_doc;
            params = {trano: noTrans};

            Ext.Ajax.request({
                url: '/default/home/cekprint',
                method: 'POST',
                params: params,
                success: function(resp) {
                    var returnData = Ext.util.JSON.decode(resp.responseText);
                    if (returnData.success)
                    {
                        window.open(urlLoad, 'mywin',
                                'left=20, top=20, width=100, height=20, toolbar=0, resizable=0');
                    }
                    else
                    {
                        Ext.Msg.alert('Error', returnData.msg);
                    }
                },
                failure: function(action) {
                    if (action.failureType == 'server') {
                        obj = Ext.util.JSON.decode(action.responseText);
                        Ext.Msg.alert('Error!', obj.errors.reason);
                    } else {
                        Ext.Msg.alert('Warning!', 'Server is unreachable : ' + action.responseText);
                    }
                }
            })
        }



        function showrpivoucherpayment()
        {
            var filterBPV = function(searchTxt) {
                var option = Ext.getCmp('option').getValue(),
                        option_type = Ext.getCmp('option_type').getValue(),
                        search = Ext.getCmp('search').getValue();
                var type = 'RPI';
                storevoucher.proxy.url = '/finance/report/getvoucher/search/' + search + '/option/' + option + '/type/' + option_type;
                storevoucher.proxy.setUrl('/finance/report/getvoucher/search/' + search + '/option/' + option + '/type/' + option_type);
                storevoucher.proxy.api.read['url'] = '/finance/report/getvoucher/search/' + search + '/option/' + option + '/type/' + option_type;
                storevoucher.reload();
                gridvoucher.getView().refresh();


            };
            var storevoucher = new Ext.data.Store({
                url: '/finance/report/getvoucher',
                autoLoad: true,
                reader: new Ext.data.JsonReader({
                    root: 'data',
                    totalProperty: 'total',
                    fields: [{
                            name: 'trano'
                        }, {
                            name: 'tgl'
                        }, {
                            name: 'item_type'
                        }, {
                            name: 'prj_kode'
                        }, {
                            name: 'ref_number'
                        }, {
                            name: 'valuta'
                        }, {
                            name: 'bpv_type'
                        }]
                })
            })

            var gridvoucher = new Ext.grid.GridPanel({
                store: storevoucher,
                height: 300,
                width: 600,
                viewConfig: {
                    forceFit: true
                },
                columns: [{
                        header: 'Trano',
                        dataIndex: 'trano',
                        sortable: true
                    }, {
                        header: 'Date',
                        dataIndex: 'tgl',
                        width: 120,
                        sortable: true
                    }, {
                        header: 'Type',
                        dataIndex: 'item_type',
                        sortable: true
                    },
                    {
                        header: 'Ref Number',
                        dataIndex: 'ref_number',
                        sortable: true
                    }, {
                        header: 'Project Code',
                        dataIndex: 'prj_kode',
                        sortable: true
                    },
//                    {
//                        header: 'Type',
//                        dataIndex: 'bpv_type',
//                        sortable: true
//                    }
                ],
                bbar: new Ext.PagingToolbar({
                    id: 'paging-rpi',
                    pageSize: 20,
                    store: storevoucher,
                    displayInfo: true,
                    displayMsg: 'Displaying data {0} - {1} of {2}',
                    emptyMsg: "No data to display"
                }), tbar: [
                    {
                        text: 'Type',
                        xtype: 'label',
                        style: 'margin-left:5px'
                    },
                    '-',
                    {
                        xtype: 'combo',
                        id: 'option_type',
                        width: 100,
                        store: new Ext.data.SimpleStore({
                            fields: ['nilai', 'name'],
                            data: [
                                ['', 'ALL'],
                                ['ARF', 'ARF'],
                                ['PPNREM', 'PPNREM'],
                                ['REM', 'REM'],
                                ['RPI', 'RPI']
                            ]
                        }),
                        valueField: 'nilai',
                        displayField: 'name',
                        typeAhead: true,
                        forceSelection: true,
                        editable: false,
                        mode: 'local',
                        triggerAction: 'all',
                        selectOnFocus: true,
                        value: 'ALL',
                        listeners: {
                            'select': function() {
                                filterBPV();
                            }
                        }
                    }, '-',
                    {
                        text: 'Search By',
                        xtype: 'label',
                        style: 'margin-left:5px'
                    }, '-',
                    {
                        xtype: 'combo',
                        id: 'option',
                        width: 120,
                        store: new Ext.data.SimpleStore({
                            fields: ['nilai', 'name'],
                            data: [
                                [1, 'BPV Trano'],
                                [3, 'Ref Number'],
                                [4, 'Project Code']
                            ]
                        }),
                        valueField: 'nilai',
                        displayField: 'name',
                        typeAhead: true,
                        forceSelection: true,
                        editable: false,
                        mode: 'local',
                        triggerAction: 'all',
                        selectOnFocus: true,
                        value: '1',
                        listeners: {
                            'select': function() {
                                filterBPV();
                            }
                        }
                    }, '-', {
                        xtype: 'textfield',
                        id: 'search',
                        enableKeyEvents: true,
                        listeners: {
                            'keyup': function(txttext, event)
                            {
                                var txttext = txttext.getValue();
                                if (txttext != "" && txttext.toString().length >= 3)
                                {
                                    filterBPV();
                                }
                            }
                        }
                    }
                ],
                listeners: {
                    'rowdblclick': function(gridaktif, rowIndex, e)
                    {
                        isDbClick = true;
                        var voucher = gridaktif.getStore().getAt(rowIndex);
                        var trano = voucher.get('trano');
                        type = voucher.get('item_type');
                        ref_number = voucher.get('ref_number');
                        Ext.getCmp('voucher-number').setValue(trano);
                        if (type == 'RPI') {
                            Ext.Ajax.request({
                                url: '/finance/jurnal/cek-jurnal-ap',
                                params: {
                                    trano: trano
                                },
                                method: 'POST',
                                success: function(result, request) {
                                    var returnData = Ext.util.JSON.decode(result.responseText);
                                    if (returnData.success) {
                                        Ext.getCmp('button_print_jurnal').enable(true);
                                    }
                                    else
                                    {
                                        Ext.MessageBox.show({
                                            title: 'Information',
                                            msg: 'AP Journal not found',
                                            buttons: Ext.MessageBox.OK,
                                            icon: Ext.MessageBox.INFO
                                        });
                                        Ext.getCmp('button_print_jurnal').disable(true);
                                    }
                                },
                                failure: function(action) {
                                    if (action.failureType == 'server') {
                                        obj = Ext.util.JSON.decode(action.response.responseText);
                                        Ext.Msg.alert('Error!', obj.errors.reason);
                                    }
                                }
                            });
                        }
                        windowvoucher.close();
                    }
                }

            })

            var windowvoucher = new Ext.Window({
                title: 'Choose Bank Payment Voucher',
                id: 'choose-bank-payment-voucher',
                layout: 'absolute',
                minHeight: 200,
                stateful: false,
                modal: true,
                resizable: false,
                closeAction: 'close',
                width: 612,
                height: 330,
                loadMask: true,
                items: [
                    gridvoucher
                ]
            })

            windowvoucher.show();
        }

        function printJurnal() {
            noTrans = Ext.getCmp('voucher-number').getValue();

            type_doc = 'pdf';

            var useBank = '';
            if (Ext.getCmp('cek-box').getValue() == true)
            {
                useBank = '/jurnal_bank/true';
            }
            if (noTrans == '')
            {
                Ext.MessageBox.show({
                    title: 'Error',
                    msg: 'Please Insert/Select Trans No!',
                    buttons: Ext.MessageBox.OK,
                    icon: Ext.MessageBox.ERROR
                });
                return false;

            }
            
            if (type == 'RPI') {
                Ext.Ajax.request({
                    url: '/finance/jurnal/cek-refnumber-ap',
                    params: {
                        trano: noTrans
                    },
                    method: 'POST',
                    success: function(result, request) {
                        var returnData = Ext.util.JSON.decode(result.responseText);
                        if (returnData.success) {
                            location.href = '/finance/jurnal/print-ap/trano/' + noTrans + useBank;
                        }
                        else
                        {
                            var callback = function() {
                                location.href = '/finance/jurnal/print-ap/trano/' + noTrans + useBank;
                            }
                            var d = {
                                trano_print: noTrans,
                                trano: ref_number
                            };
                            updateRefNumberAP(d, callback, true);
                        }
                    },
                    failure: function(action) {
                        if (action.failureType == 'server') {
                            obj = Ext.util.JSON.decode(action.response.responseText);
                            Ext.Msg.alert('Error!', obj.errors.reason);
                        }
                    }
                });
            } else {
                Ext.Ajax.request({
                    url: '/finance/jurnal/getjurnalbank',
                    params: {
                        trano: noTrans
                    },
                    method: 'POST',
                    success: function(result, request) {
                        var returnData = Ext.util.JSON.decode(result.responseText);
                        
                        if (returnData.data != '') {                           
                            location.href = '/finance/jurnal/print-ap/trano/' + noTrans + useBank;                            
                        }
                        else
                        {
                            Ext.MessageBox.show({
                                title: 'Information',
                                msg: 'Journal not found',
                                buttons: Ext.MessageBox.OK,
                                icon: Ext.MessageBox.INFO
                            });
                           
                        }
                    },
                    failure: function(action) {
                        if (action.failureType == 'server') {
                            obj = Ext.util.JSON.decode(action.response.responseText);
                            Ext.Msg.alert('Error!', obj.errors.reason);
                        }
                    }
                });
            }
            
        }
        ;

        var windowForm = ({
            title: 'Bank Payment Voucher',
            id: 'abs-budget-panel',
            layout: 'fit',
            bodyCfg: {cls: 'xpanel-body-table', style: {'overflow': 'auto'}},
            bodyStyle: 'padding:15px;',
            loadMask: true,
            minWidth: 300,
            minHeight: 200,
            tbar: ['-', {
                    xtype: 'trigger',
                    triggerClass: 'teropong',
                    allowBlank: false,
                    editable: false,
                    id: 'voucher-number',
                    onTriggerClick: function()
                    {
                        showrpivoucherpayment();
                    }
                },
                {
                    xtype: 'button',
                    text: 'Show',
                    width: 70,
                    id: 'show_budget',
                    cls: "x-btn-text-icon",
                    icon: "/images/icons/fam/control_rewind.png",
                    handler: showBPV
                }, '-', {
                    xtype: 'button',
                    id: 'export_button',
                    text: 'Print BPV',
                    cls: "x-btn-text-icon",
                    icon: "/images/print.png",
                    handler: printdocument
                }, {
                    xtype: 'hidden',
                    id: 'type_doc',
                    value: 'pdf'
                }, '-',
                {
                    xtype: 'checkbox',
                    id: 'cek-box',
                    boxLabel: 'Include Bank Journal'
                },
                {xtype: 'button',
                    text: 'Print Jurnal',
                    id: 'button_print_jurnal',
                    cls: "x-btn-text-icon",
                    icon: "/images/print.png",
                    handler: function() {
                        printJurnal();
                    }
                }
            ]

        });



        viewPort = Ext.getCmp('viewport');

        centerRegionTab = viewPort.getComponent('content-panel');
        centerRegionTab.items.each(function(c) {
            centerRegionTab.remove(c);
        });
        centerRegionTab.add(windowForm);
        panelBaru = Ext.getCmp('abs-budget-panel');
        centerRegionTab.layout.setActiveItem('abs-budget-panel');

<?php
if ($this->trano != '') {
    ?>
            myPanel = Ext.getCmp('abs-budget-panel');
            Ext.getCmp('voucher-number').setValue('<?= $this->trano ?>');

            myPanel.body.load({
                url: '/finance/report/gridbpv/trano/<?= $this->trano ?>',
                scripts: true
            });
    <?php
}
?>

    })

</script>

<div id="grid-bpv"></div>