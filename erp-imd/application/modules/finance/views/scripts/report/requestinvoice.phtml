<script type="text/javascript">

    Ext.apply(Ext.form.VTypes, {
        daterange: function(val, field) {
            var date = field.parseDate(val);
            if (!date) {
                return false;
            }
            if (field.startDateField && (!this.dateRangeMax || (date.getTime() != this.dateRangeMax.getTime()))) {
                var start = Ext.getCmp(field.startDateField);
                start.setMaxValue(date);
                start.validate();
                this.dateRangeMax = date;
            }
            else if (field.endDateField && (!this.dateRangeMin || (date.getTime() != this.dateRangeMin.getTime()))) {
                var end = Ext.getCmp(field.endDateField);
                end.setMinValue(date);
                end.validate();
                this.dateRangeMin = date;
            }
            /*
             * Always return true since we're only using this vtype to set the
             * min/max allowed values (these are tested for after the vtype test)
             */
            return true;
        }
    });

    showRinv = function(showAll) {

        myPanel = Ext.getCmp('abs-budget-panel');
        trano = Ext.getCmp('trano_text').getValue();

        prjKode = Ext.getCmp('prj_kode_text').getValue();
        sitKode = Ext.getCmp('sit_kode_text').getValue();


        var start = Ext.getCmp('startdate').getValue(),
                end = Ext.getCmp('enddate').getValue(),
                cus = Ext.getCmp('customer').getValue();

        var show = '';
        if (showAll != undefined)
            show = true;

        var params = {
            trano: trano,
            prj_kode: prjKode,
            sit_kode: sitKode,
            all: show,
            start_date: start,
            end_date: end,
            cus_kode: cus
        };

        myPanel.body.load({
            url: '/finance/report/request-invoice-to-invoice/' + Ext.util.urlEncodeZend(params),
            scripts: true
        });
    };

    printdocument = function(showAll) {

        trano = Ext.getCmp('trano_text').getValue();
        prjKode = Ext.getCmp('prj_kode_text').getValue();
        sitKode = Ext.getCmp('sit_kode_text').getValue();

        var D = Ext.calendar.Date;

        var start = D.formatDate(Ext.getCmp('startdate').getValue(), 'yyyy-mm-dd'),
                end = D.formatDate(Ext.getCmp('enddate').getValue(), 'yyyy-mm-dd'),
                cus = Ext.getCmp('customer').getValue();

        var show = '';
        if (showAll != undefined)
            show = true;

        var params = {
            trano: trano,
            prj_kode: prjKode,
            sit_kode: sitKode,
            start_date: start,
            all: true,
            end_date: end,
            print: true,
            cus_kode: cus
        };

        downloadFile('/finance/report/request-invoice-to-invoice', params);

    };

    var windowForm = ({
        title: 'Request Invoice to Invoice',
        id: 'abs-budget-panel',
        layout: 'fit',
        bodyCfg: {cls: 'xpanel-body-table', style: {'overflow': 'auto'}},
        bodyStyle: 'padding:15px;',
        minWidth: 300,
        minHeight: 200,
        loadMask: true,
        tbar: {// configured using the anchor layout
            xtype: 'container',
            layout: 'anchor',
            height: 27 * 3,
            defaults: {height: 27, anchor: '100%'},
            items: [
                new Ext.Toolbar({
                    id: 'main_toolbar',
                    autoWidth: true,
                    items: [
                        {
                            xtype: 'label',
                            text: 'RINV Number'
                        }, '-',
                        {
                            xtype: 'tranoselector',
                            id: 'tranos',
                            Selectid: 'trano_text',
                            width: 120,
                            Tranotype: ['RINV'],
                            Disabletype: true
                        },
                        {
                            xtype: 'tbtext',
                            text: 'Project'
                        },
                        {
                            xtype: 'projectselectorreport',
                            fieldLabel: 'Project Code',
                            anchor: '100%',
                            id: 'project-select',
                            Selectid: 'prj_kode_text',
                            Nameid: 'prj_nama_text',
                            ShowName: false,
                            showAll: true
                        }
                        , '-',
                        {
                            xtype: 'tbtext',
                            text: 'Site'
                        },
                        {
                            xtype: 'siteselector',
                            anchor: '100%',
                            independent: false,
                            id: 'site-select',
                            SiteSelectid: 'sit_kode_text',
                            SiteNameid: 'sit_nama_text',
                            ProjectSelectid: 'prj_kode_text',
                            ShowName: false,
                            showAll: true
                        },
                        '-',
                        {
                            xtype: 'tbtext',
                            text: 'Cust.'
                        },
                        {
                            xtype: 'customerselector',
                            id: 'cust',
                            ShowName: false,
                            Selectid: 'customer'
                        },
                        '-',
                        {
                            xtype: 'button',
                            text: 'Reset',
                            cls: "x-btn-text-icon",
                            icon: "/images/lov_refresh.gif",
                            handler: function() {
                                Ext.getCmp('prj_kode_text').setValue('');
                                Ext.getCmp('sit_kode_text').setValue('');
                                Ext.getCmp('startdate').setValue('');
                                Ext.getCmp('trano_text').setValue('');
                                Ext.getCmp('enddate').setValue('');
                            }
                        }, '-',
                        {
                            xtype: 'button',
                            text: 'Show',
                            width: 70,
                            id: 'show_budget',
                            cls: "x-btn-text-icon",
                            icon: "/images/icons/fam/control_rewind.png",
                            handler: function() {
                                showRinv();

                            }
                        }, '-',
                        {
                            xtype: 'button',
                            text: 'Show All',
                            width: 70,
                            id: 'show_budget_all',
                            cls: "x-btn-text-icon",
                            icon: "/images/icons/fam/control_rewind.png",
                            handler: function() {
                                showRinv(true);
                            }
                        }, '-', {
                            xtype: 'button',
                            id: 'export_button',
                            cls: "x-btn-icon",
                            icon: "/images/print.png",
                            handler: printdocument
                        }
                    ]
                }),
                new Ext.Toolbar({
                    id: 'main_toolbar2',
                    autoWidth: true,
                    items: [
                        {
                            xtype: 'tbtext',
                            text: 'Start Date'
                        },
                        {
                            xtype: 'datefield',
                            name: 'startdate',
                            id: 'startdate',
                            msgTarget: 'side',
                            endDateField: 'enddate', // id of the end date field
                            vtype: 'daterange',
                            format: 'd-m-Y', // or other format you'd like
                            listeners: {
                                'select': function(t, newDate) {
                                    Ext.getCmp('enddate').setValue('');
                                }
                            }
                        },
                        {
                            xtype: 'tbtext',
                            text: 'End Date'
                        },
                        {
                            xtype: 'datefield',
                            fieldLabel: 'End Date',
                            name: 'enddate',
                            id: 'enddate',
                            startDateField: 'startdate', // id of the start date field
                            msgTarget: 'side',
                            vtype: 'daterange',
                            format: 'd-m-Y',
                        }

                    ]
                })
            ]
        }
    });


    viewPort = Ext.getCmp('viewport');

    centerRegionTab = viewPort.getComponent('content-panel');
    centerRegionTab.items.each(function(c) {
        centerRegionTab.remove(c);
    })
    centerRegionTab.add(windowForm);
    panelBaru = Ext.getCmp('abs-budget-panel');
    centerRegionTab.layout.setActiveItem('abs-budget-panel');
</script>