<script type="text/javascript">

    var prjKode = '', sitKode = '';
    var rpc = false;
    var firstRow = true;
    var rpcnumber = 0;
    var jurnal_type = '';
    function getExchangeRate()
    {
        Ext.Ajax.request({
            url: '/default/valuta/getexchangerate',
            method: 'POST',
            success: function(result, request) {
                var returnData = Ext.util.JSON.decode(result.responseText);
                if (returnData.success) {
                    Ext.getCmp('val_rate_text').setValue(returnData.rate);
                }
            }
            , failure: function(action) {
                if (action.failureType == 'server') {
                    obj = Ext.util.JSON.decode(action.response.responseText);
                    Ext.Msg.alert('Error!', obj.errors.reason);
                }
            }
        });
    }

    function showNhideCipGrid(flag) {
        jurnal.showStatusDocCip = !flag;
        Ext.each(jurnal.colModel, function(col) {
            for (i = 0; i < col.config.length; i++) {
                if (col.config[i].dataIndex == 'status_doc_cip')
                {
                    jurnal.colModel.config[i].hidden = flag;
                }
            }
        });
        jurnal.render();
        jurnal.getView().refresh();
    }

    var jurnal = new Ext.ux.grid.gridJurnal({
        height: 300,
        width: 800,
        id: 'grid-jurnal',
        hideRefNumber: false,
        disableNewJournal: true,
        showJobNumber: true,
        showStatusDocCip: false
    });

    Ext.apply(Ext.form.VTypes, {
        numericText: "Only numbers are allowed.",
        numericMask: /[0-9]/,
        numericRe: /(^-?dd*.d*$)|(^-?dd*$)|(^-?.dd*$)/,
        numeric: function(v) {
            return function() {
                return this.numericRe.test(v)
            };
        }
    });


    Ext.onReady(function() {

        Ext.QuickTips.init();

        Ext.form.Field.prototype.msgTarget = 'side';

        var formpanel = new Ext.form.FormPanel({
            title: 'General Journal Entries',
            id: 'form-insert-adjustingjournal',
            renderTo: 'insert_adjustingjournal',
            frame: true,
            labelAlign: 'leftLabelField',
            style: 'margin:10 10 10 10',
            width: 400,
            items: [
                {
                    xtype: 'combo',
                    fieldLabel: 'Type Journal',
                    width: 150,
                    store: new Ext.data.SimpleStore({
                        fields: ['name', 'nilai'],
                        data: [
                            ['Adjusting Journal', 'ADJ'],
                            ['Voucher Journal', 'JV'],
                            ['Sales Journal', 'SJ'],
                            ['Settlement Journal', 'JS'],
                            ['PPN Settlement Journal', 'PJS'],
                            ['Accrual Journal', 'ACJ']
                        ]
                    }),
                    valueField: 'nilai',
                    displayField: 'name',
                    typeAhead: true,
                    forceSelection: true,
                    editable: false,
                    mode: 'local',
                    triggerAction: 'all',
                    selectOnFocus: true,
                    allowBlank: false,
                    id: 'type-journal',
                    listeners: {
                        'select': {fn:
                                    function(c, row, index)
                                    {
                                        jurnal.printTitle = row.get("name");

                                        if (row.get("nilai") == "JS")
                                        {
                                            Ext.getCmp('acc-numbers').Tranotype = ['ASF', 'ASFO', 'BSF', 'ARF', 'ARFO'];
                                            Ext.getCmp('poh-radio').setVisible(true);
                                            jurnal.showStatusDocCip = true;
                                            showNhideCipGrid(false);

                                        }
                                        else if (row.get("nilai") == "PJS")
                                        {
                                            Ext.getCmp('acc-numbers').Tranotype = ['PPNSET'];
                                            Ext.getCmp('poh-radio').setVisible(false);
                                            showNhideCipGrid(true);
                                        } else if (row.get("nilai") == "ADJ")
                                        {
                                            Ext.getCmp('acc-numbers').Tranotype = ['ASF', 'ASFO', 'BSF', 'ARF', 'ARFO'];
                                            Ext.getCmp('poh-radio').setVisible(false);
                                            showNhideCipGrid(false);
                                        }
                                        else
                                        {
                                            Ext.getCmp('acc-numbers').Tranotype = '';
                                            Ext.getCmp('poh-radio').setVisible(false);
                                            showNhideCipGrid(true);
                                        }

                                        jurnal_type = row.get("nilai");
                                    }
                        }
                    }
                },
                {
                    xtype: 'tranodatechanger',
                    anchor: '100%',
                    id: 'trano_tgl',
                    Selectid: 'tgl',
                    fieldLabel: 'Transaction Date',
                    selectValue: '<?= date("d M Y") ?>'
                },
                {
                    xtype: 'projectselectorreport',
                    anchor: '100%',
                    id: 'project-select',
                    Selectid: 'prj_kode_text',
                    Nameid: 'prj_nama_text',
                    ShowName: true,
                    fieldLabel: 'Project Code',
                    allowBlank: false,
                    showAll: true,
                    callback: function(prj) {
                        prjKode = parseProjectCode(prj.prj_kode);
                        if (prjKode != '')
                            Ext.getCmp('job_number').setValue(prjKode + ".");

                        Ext.getCmp('site-select').clearAllValue();
                    }
                }, {
                    xtype: 'siteselector',
                    anchor: '100%',
                    independent: false,
                    id: 'site-select',
                    SiteSelectid: 'sit_kode_text',
                    SiteNameid: 'sit_nama_text',
                    ProjectSelectid: 'prj_kode_text',
                    ShowName: true,
                    fieldLabel: 'Site Code',
                    allowBlank: false,
                    showAll: true,
                    callback: function(site) {
                        if (site.sit_kode != '')
                        {
                            sitKode = site.sit_kode;
                            Ext.getCmp('job_number').setValue(prjKode + "." + sitKode + ".");
                        }
                    }
                },
                {
                    xtype: 'tranoselectorJournal',
                    fieldLabel: 'Referrence Number',
                    id: 'acc-numbers',
                    Selectid: 'acc-number',
                    width: 150,
                    callbackFunc: function(trano, itemType) {
                        if (jurnal_type == 'JS')
                            if (itemType == 'ASF' || itemType == 'ASFO' || itemType == 'ASFP' || itemType == 'BSF')
                            {
                                Ext.Ajax.request({
                                    url: '/finance/banktransaction/check-rpc-from-asf',
                                    params: {trano: trano},
                                    method: 'POST',
                                    success: function(result) {
                                        obj = Ext.util.JSON.decode(result.responseText);
                                        if (obj.success)
                                        {
                                            rpc = true;
                                            Ext.MessageBox.show({
                                                title: 'Information',
                                                msg: 'This transaction will cause "RPC" ',
                                                buttons: Ext.MessageBox.OK,
                                                icon: Ext.MessageBox.INFO
                                            });
                                        } else
                                        {
                                            rpc = false;
                                        }
                                    },
                                    failure: function(action) {
                                        if (action.failureType == 'server') {
                                            obj = Ext.util.JSON.decode(action.response.responseText);
                                            Ext.Msg.alert('Error!', obj.errors.reason);
                                        } else {
                                            Ext.Msg.alert('Warning!', 'Server is unreachable : ' + action.response.responseText);
                                        }
                                    }

                                })

                            }
                    }
                }, {
                    xtype: 'textfield',
                    fieldLabel: '2nd Reference Number',
                    id: 'acc-number2',
                    width: 150
                }, {
                    xtype: 'textfield',
                    fieldLabel: 'MYOB Reference Number',
                    id: 'acc-number3',
                    width: 150
                },
                {
                    xtype: 'textarea',
                    fieldLabel: 'Description ',
                    id: 'desc',
                    width: 200,
                    allowBlank: false
                }, 
                {
                    xtype: 'currencyselector',
                    anchor: '100%',
                    id: 'currency-select',
                    Selectid: 'val_kode_text',
                    Nameid: 'val_nama_text',
                    ShowName: true,
                    fieldLabel: 'Currency Code',
                    allowBlank: false,
                    selectValue: 'IDR'
                },
                new Ext.ux.customRendererField({
                    xtype: 'textfield',
                    fieldLabel: 'IDR Rate',
                    id: 'val_rate_text',
                    name: 'val_rate_text',
                    vtype: 'numeric',
                    style: 'text-align:right',
                    priceDelemiter: ','
                }),
                {
                    xtype: 'coaselector',
                    fieldLabel: 'Chart Of Account',
                    id: 'coa_kodes',
                    Selectid: 'coa_kode',
                    Nameid: 'coa_nama',
                    width: 180,
                    ShowName: true,
                    allowBlank: false
                },
                new Ext.ux.customRendererField(
                        {
                            xtype: 'textfield',
                            id: 'debit_form',
                            style: 'text-align:right',
                            priceDelemiter: ',',
                            fieldLabel: 'Debit ',
                            value: '0.00',
                            listeners: {
                                'customfocus': function(t) {
                                    Ext.getCmp('credit_form').setValue('');
                                }
                            }
                        }),
                new Ext.ux.customRendererField(
                        {
                            xtype: 'textfield',
                            id: 'credit_form',
                            style: 'text-align:right',
                            priceDelemiter: ',',
                            fieldLabel: 'Credit ',
                            value: '0.00',
                            listeners: {
                                'customfocus': function(t) {
                                    Ext.getCmp('debit_form').setValue('');
                                }
                            }
                        }), {
                    xtype: 'textfield',
                    id: 'job_number',
                    fieldLabel: 'Job Number ',
                    vtype: 'alphanumericonly'
                },
                {
                    xtype: 'radiogroup',
                    fieldLabel: 'Is CIP?',
                    id: 'poh-radio',
                    allowBlank: false,
                    hidden: true,
                    items: [
                        {
                            boxLabel: 'No',
                            name: 'poh',
                            inputValue: '1',
                            checked: true
                        },
                        {
                            boxLabel: 'CIP',
                            name: 'poh',
                            inputValue: '2'
                        }
                    ],
                    listeners: {
                        'change': function(t, ch)
                        {
                            if (ch.getGroupValue() == 'YES')
                            {
//                                hitungtotal();
                            } else
                            {
//                                Ext.getCmp('ppn-value').setValue(0);
//                                hitungtotal();
                            }
                        }
                    }
                }
            ],
            buttons: [{
                    text: 'Add to Grid',
                    iconCls: 'silk-add',
                    handler: function(btn, ev)
                    {

                        if (!Ext.getCmp('form-insert-adjustingjournal').getForm().isValid())
                        {
                            Ext.Msg.alert('Error', 'Form not valid');
                            return false;
                        }

                        if (Ext.getCmp('acc-number').getValue() == '' &&
                                Ext.getCmp('type-journal').getValue() != 'ADJ' &&
                                Ext.getCmp('type-journal').getValue() != 'ACJ' &&
                                Ext.getCmp('type-journal').getValue() != 'SJ' &&
                                Ext.getCmp('type-journal').getValue() != 'JV')
                        {
                            Ext.MessageBox.show({
                                title: 'Error',
                                msg: 'Sorry , please insert Reference Number',
                                buttons: Ext.MessageBox.OK,
                                icon: Ext.MessageBox.ERROR
                            });
                            return false;
                        }

                        if (Ext.getCmp('coa_kode').getValue() == '')
                        {
                            Ext.MessageBox.show({
                                title: 'Error',
                                msg: 'Sorry , please insert COA',
                                buttons: Ext.MessageBox.OK,
                                icon: Ext.MessageBox.ERROR
                            });
                            return false;
                        }

                        if (Ext.getCmp('prj_kode_text').getValue() == '')
                        {
                            Ext.MessageBox.show({
                                title: 'Error',
                                msg: 'Sorry , please insert Project Code',
                                buttons: Ext.MessageBox.OK,
                                icon: Ext.MessageBox.ERROR
                            });
                            return false;
                        }

                        if (Ext.getCmp('sit_kode_text').getValue() == '')
                        {
                            Ext.MessageBox.show({
                                title: 'Error',
                                msg: 'Sorry , please insert Site Code',
                                buttons: Ext.MessageBox.OK,
                                icon: Ext.MessageBox.ERROR
                            });
                            return false;
                        }

                        if (parseFloat(Ext.getCmp('debit_form').getOriginalValue()) == 0 && parseFloat(Ext.getCmp('credit_form').getOriginalValue()) == 0)
                        {
                            Ext.MessageBox.show({
                                title: 'Error',
                                msg: 'Sorry , please insert field debit or credit',
                                buttons: Ext.MessageBox.OK,
                                icon: Ext.MessageBox.ERROR
                            });
                            return false;
                        }

                        //Cek job number sesuai dengan patter Qxxx.yyy (xxx == kode project, yyy == cfs kode)
                        var testJob = Ext.getCmp('job_number').getValue();

                        if (!regexJobNumber.test(testJob.toString()))
                        {
                            Ext.MessageBox.show({
                                title: 'Error',
                                msg: 'Job Number not valid, please use format ( Qxxxxxx.yyy.zzz ), ex : Q000101.254.123<br>xxxxxx = Project Code, yyy = Site Code, zzz = CFS Code',
                                buttons: Ext.MessageBox.OK,
                                icon: Ext.MessageBox.ERROR
                            });
                            return false;
                        }

                        if (jurnal.getCount() > 0)
                        {
                            var row = jurnal.getStore().getAt(jurnal.getStore().findExact('val_kode', Ext.getCmp('val_kode_text').getValue()));

                            if (row == null)
                            {
                                Ext.MessageBox.show({
                                    title: 'Error',
                                    msg: 'Sorry this document different valuta',
                                    buttons: Ext.MessageBox.OK,
                                    icon: Ext.MessageBox.ERROR
                                });
                                return false;
                            }
                        }

                        var sit_kode = Ext.getCmp('sit_kode_text').getValue();
                        var prj_kode = Ext.getCmp('prj_kode_text').getValue();
                        var type = Ext.getCmp('type-journal').getValue();
                        var ref_number = Ext.getCmp('acc-number').getValue();
                        var ref_number2 = Ext.getCmp('acc-number2').getValue();
                        var ref_number3 = Ext.getCmp('acc-number3').getValue();
                        var coa_kode = Ext.getCmp('coa_kode').getValue();
                        var coa_nama = Ext.getCmp('coa_nama').getValue();
                        var val_kode = Ext.getCmp('val_kode_text').getValue();
                        var ket = Ext.getCmp('desc').getValue();
                        var debit = parseFloat(Ext.getCmp('debit_form').getOriginalValue());
                        var credit = parseFloat(Ext.getCmp('credit_form').getOriginalValue());
                        var rate = parseFloat(Ext.getCmp('val_rate_text').getOriginalValue().toString().replace(/\$|\,/g, ''));
                        var job_number = Ext.getCmp('job_number').getValue();
                        var status_doc_cip = Ext.getCmp('poh-radio').getValue().getGroupValue();

                        var coas = '';

                        var addInfo = {
                            prj_kode: prj_kode,
                            sit_kode: sit_kode,
                            job_number: job_number,
                            val_kode: val_kode,
                            trano: '',
                            ket: ket,
                            ref_number: ref_number,
                            ref_number2: ref_number2,
                            ref_number3: ref_number3,
                            rateidr: rate,
                            tipe_jurnal: type,
                            status_doc_cip: status_doc_cip
                        };


                        if (debit == 0)
                        {
                            coas = [{
                                    coa_kode: coa_kode,
                                    value: parseFloat(Ext.getCmp('credit_form').getOriginalValue()),
                                    side: 'credit',
                                    tipe: ''
                                }]
                        }

                        if (credit == 0)
                        {
                            coas = [{
                                    coa_kode: coa_kode,
                                    value: parseFloat(Ext.getCmp('debit_form').getOriginalValue()),
                                    side: 'debit',
                                    tipe: ''
                                }]
                        }

                        jurnal.getCoa(coas, addInfo);

                        Ext.getCmp('coa_kode').setValue('');
                        Ext.getCmp('coa_nama').setValue('');
                        Ext.getCmp('debit_form').setValue(0);
                        Ext.getCmp('credit_form').setValue(0);
                        Ext.getCmp('coa_nama').setValue('');
                        Ext.getCmp('type-journal').disable();
                        Ext.getCmp('poh-radio').setValue(1);

                    }
                }, {
                    text: 'Reset',
                    style: 'margin-right:26px;',
                    handler: function(btn, ev)
                    {
                        var type = Ext.getCmp('type-journal').getValue();
                        Ext.getCmp('form-insert-adjustingjournal').getForm().reset();
                        Ext.getCmp('type-journal').setValue(type);
                        Ext.getCmp('debit_form').setValue(0);
                        Ext.getCmp('credit_form').setValue(0);
                        Ext.getCmp('prj_kode_text').setValue('');
                        Ext.getCmp('prj_nama_text').setValue('');
                        Ext.getCmp('sit_kode_text').setValue('');
                        Ext.getCmp('sit_nama_text').setValue('');
                        Ext.getCmp('val_rate_text').setValue(0);
                        Ext.getCmp('poh-radio').setValue(1);
                    }
                }]

        });

        var paneljurnal = new Ext.form.FormPanel({
            renderTo: 'jurnal_panel',
            frame: true,
            labelAlign: 'top',
            style: 'margin:10 10 10 10',
            width: 800,
            items: [
                jurnal
            ],
            buttons: [{
                    text: 'Submit',
                    iconCls: 'icon-save',
                    handler: function(btn, ev)
                    {
                        if (jurnal.getCount() == 0)
                        {
                            return false;
                        }

                        Ext.MessageBox.confirm('Confirm', 'Are you sure want this action ?', function(btn) {

                            if (btn == 'yes')
                            {
                                if (rpc) {

                                    Ext.Ajax.request({
                                        url: '/finance/banktransaction/getrpcnumber',
                                        method: 'POST',
                                        success: function(result) {
                                            obj = Ext.util.JSON.decode(result.responseText);
                                            if (obj.success)
                                            {
                                                ref_number2 = obj.trano;
                                                rpcnumber = obj.trano;

                                                jurnal.getStore().each(function(store) {
                                                    store.data.ref_number2 = obj.trano;
                                                });

                                                jurnal.getJSONFromStore(callback);
                                            }
                                        },
                                        failure: function(action) {
                                            if (action.failureType == 'server') {
                                                obj = Ext.util.JSON.decode(action.response.responseText);
                                                Ext.Msg.alert('Error!', obj.errors.reason);
                                            } else {
                                                Ext.Msg.alert('Warning!', 'Server is unreachable : ' + action.response.responseText);
                                            }
                                        }

                                    });

                                } else {
                                    jurnal.getJSONFromStore(callback);
                                }
                                
                                function callback(jsonJurnal)
                                {
                                    var tgl = '';
                                    if (Ext.getCmp('tgl').getValue() != '')
                                        tgl = Ext.util.Format.date(Ext.getCmp('tgl').getValue(), 'Y-m-d');
                                    var params = {
                                        jsonJurnal: jsonJurnal,
                                        tgl: tgl
                                    };
                                    Ext.getBody().mask('Loading..','x-mask-loading',false);
                                    Ext.Ajax.request({
                                        url: '/finance/adjustingjournal/doinsertadjustingjournal',
                                        method: 'POST',
                                        params: params,
                                        success: function(result) {
                                            Ext.getBody().unmask();
                                            obj = Ext.util.JSON.decode(result.responseText);
                                            var rpctext = '';
                                            var rpctextprint = '';
                                            if (rpc) {
                                                rpctext = '<br>Your RPC number is <b><font color="#ff0000">' +
                                                        rpcnumber +
                                                        '</font></b>';
                                                rpctextprint = '<h3 style="padding: 10px;float = right;">RPC Number : <b>' + rpcnumber + '</b></h3>'
                                            }
                                            if (obj.success)
                                            {
                                                rpc = false;
                                                rpcnumber = 0;
                                                Ext.MessageBox.confirm(
                                                        'Success',
                                                        'Data has been saved' +
                                                        '<br><br>Your Transaction number is <b><font color="#ff0000">' +
                                                        obj.number +
                                                        '</font></b>' + rpctext +
                                                        '<br>Do You want to Print the Journal?',
                                                        function(btn) {
                                                            if (btn == 'yes')
                                                            {
                                                                jurnal.additionalHTML = '<h3 style="padding: 10px">Transaction Number : <b>' + obj.number + '</b></h3>' + rpctextprint;
                                                                jurnal.printJurnal();
                                                            }

                                                            myPanel = Ext.getCmp('abs-budget-panel');
                                                            myPanel.body.load({
                                                                url: '/finance/adjustingjournal/insertjournal',
                                                                scripts: true
                                                            });
                                                        }
                                                );



                                            } else
                                            {
                                                Ext.Msg.alert('Error', obj.msg);
                                            }
                                        },
                                        failure: function(action) {
                                            Ext.getBody().unmask();
                                            if (action.failureType == 'server') {
                                                obj = Ext.util.JSON.decode(action.response.responseText);
                                                Ext.Msg.alert('Error!', obj.errors.reason);
                                            } else {
                                                Ext.Msg.alert('Warning!', 'Server is unreachable : ' + action.response.responseText);
                                            }
                                        }

                                    });
                                }

                                



                            }

                        })

                    }
                }]

        });
    })

</script>

<div id="insert_adjustingjournal"></div>
<div id="jurnal_panel"></div>