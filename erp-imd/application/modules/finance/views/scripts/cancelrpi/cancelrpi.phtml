<script type="text/javascript">

    Ext.onReady(function() {

        Ext.QuickTips.init();
        function showrpilist()
        {
            var storerpilist = new Ext.data.Store({
                autoLoad: true,
                url: '/procurement/procurement/getrpilist',
                reader: new Ext.data.JsonReader({
                    root: 'data',
                    totalProperty: 'count',
                    fields: [{
                            name: 'trano', type: 'String'
                        }, {
                            name: 'tgl'
                        }, {
                            name: 'prj_kode', type: 'String'
                        }, {
                            name: 'prj_nama', type: 'String'
                        }, {
                            name: 'petugas', type: 'String'
                        }, {
                            name: 'sup_kode', type: 'String'
                        }, {
                            name: 'sup_nama', type: 'String'
                        }, {
                            name: 'val_kode'
                        }, {
                            name: 'total'
                        }]
                })

            })

            var gridrpilist = new Ext.grid.GridPanel({
                store: storerpilist,
                height: 370,
                columns: [{
                        header: 'RPI Number',
                        dataIndex: 'trano',
                        align: 'center',
                        sortable: true
                    }, {
                        header: 'Date',
                        dataIndex: 'tgl',
                        align: 'center',
                        sortable: true
                    }, {
                        header: 'Project Code',
                        dataIndex: 'prj_kode',
                        align: 'center',
                        sortable: true
                    }, {
                        header: 'Project Name',
                        dataIndex: 'prj_nama',
                        align: 'center',
                        sortable: true
                    }],
                bbar: new Ext.PagingToolbar({
                    id: 'paging',
                    pageSize: 100,
                    store: storerpilist,
                    displayInfo: true,
                    displayMsg: 'Displaying data {0} - {1} of {2}',
                    emptyMsg: "No data to display"
                }),
                tbar: [{
                        text: 'Search By',
                        xtype: 'label',
                        style: 'margin-left:5px'
                    }, '-', {
                        xtype: 'combo',
                        allowBlank: false,
                        store: new Ext.data.SimpleStore({
                            fields: ['nilai', 'name'],
                            data: [
                                [1, 'RPI Trano'],
                                [2, 'Date'],
                                [3, 'Project Code'],
                                [4, 'Project Name']
                            ]
                        }),
                        valueField: 'nilai',
                        displayField: 'name',
                        typeAhead: true,
                        forceSelection: true,
                        editable: false,
                        mode: 'local',
                        triggerAction: 'all',
                        selectOnFocus: true,
                        value: 1,
                        width: 120,
                        id: 'option'
                    }, '-', {
                        xtype: 'textfield',
                        id: 'search',
                        enableKeyEvents: true,
                        listeners: {
                            'keyup': function(txttext, event)
                            {
                                var txttext = txttext.getValue();
                                if (txttext != "" && txttext.toString().length >= 3)
                                {
                                    var option = Ext.getCmp('option').getValue();
                                    var search = Ext.getCmp('search').getValue();
                                    storerpilist.proxy.setUrl('/procurement/procurement/getrpilist/search/' + search + '/option/' + option);
                                    storerpilist.reload();
                                    gridrpilist.getView().refresh();
                                }
                            }
                        }
                    }],
                listeners: {
                    'rowdblclick': function(gridaktif, rowIndex, e)
                    {
                        isDbClick = true;
                        var rpi = gridaktif.getStore().getAt(rowIndex);
                        var rpitrano = rpi.get('trano');
                        Ext.Ajax.request({
                            url: '/default/home/cekpayment/type/RPI/trano/' + rpitrano,
                            method: 'POST',
                            success: function(resp) {
                                var returnData = Ext.util.JSON.decode(resp.responseText);
                                if (returnData.success)
                                {
                                    Ext.getCmp('rpi-number').setValue(rpitrano);
                                    windowrpilist.close();

                                }
                                else
                                {
                                    Ext.Msg.alert('Error', returnData.msg);
                                }
                            },
                            failure: function(action) {
                                if (action.failureType == 'server') {
                                    obj = Ext.util.JSON.decode(action.responseText);
                                    Ext.Msg.alert('Error!', obj.errors.reason);
                                } else {
                                    Ext.Msg.alert('Warning!', 'Server is unreachable : ' + action.responseText);
                                }
                            }
                        });
                    }
                }


            })

            var windowrpilist = new Ext.Window({
                title: 'RPI Final Approve list',
                width: 430,
                height: 400,
                layout: 'absolute',
                minHeight: 200,
                stateful: false,
                modal: true,
                resizable: false,
                closeAction: 'close',
                loadMask: true,
                items: [
                    gridrpilist
                ]

            })

            windowrpilist.show();
        }

        var uploadFile = new Ext.ux.uploadFile({
            renderTo: 'upload-file',
//        title: 'Upload Document for this Cancel RPI',
            width: 450,
            frame: true,
            style: 'margin-top:10px;margin-bottom:15px;',
        });
        var requestcancelrpi = new Ext.form.FormPanel({
            id: 'request-cancel-rpi',
            title: 'Form Request Cancel RPI',
//            renderTo: 'request_cancel_rpi',
            width: 500,
            frame: true,
            items: [uploadFile, {
                    xtype: 'textfield',
                    fieldLabel: 'User Request',
                    width: 150,
                    value: '<?= $this->user ?>',
                    readOnly: true,
                    id: 'user'
                }, {
                    xtype: 'trigger',
                    fieldLabel: 'RPI Number',
                    width: 150,
                    triggerClass: 'teropong',
                    allowBlank: false,
                    editable: false,
                    id: 'rpi-number',
                    msgTarget: 'side',
                    onTriggerClick: function()
                    {
                        showrpilist();
                    }
                }, {
                    xtype: 'textarea',
                    fieldLabel: 'Reason',
                    width: 150,
                    allowBlank: false,
                    id: 'cancel-reason',
                    msgTarget: 'side'
                }],
            buttons: [{
                    text: 'Submit',
                    handler: function(btn, ev)
                    {
                        if (!Ext.getCmp('request-cancel-rpi').getForm().isValid())
                        {
                            Ext.Msg.alert('Error', 'Please check your field');
                            return false;
                        }

                        var rpinumber = Ext.getCmp('rpi-number').getValue();
                        var reason = Ext.getCmp('cancel-reason').getValue();
                        Ext.MessageBox.confirm('Confirm', 'Are you sure want request to cancel RPI Number : ' + '<b><font color="#FF0000">' + rpinumber + '</font></b>' + ' ?', function(btn) {

                            if (btn == 'yes')
                            {
//                            
                                myPanel = Ext.getCmp('abs-budget-panel'); //Load the panel
                                myPanel.body.load({
                                    url: '/finance/cancelrpi/appcancelrpi', //the url
                                    scripts: true,
                                    params: {trano: rpinumber, reason: reason, file: uploadFile.getJSONFromStore()} //our params goes here
                                });
                            }

                        })

                    }
                }, {
                    text: 'Cancel',
                    handler: function(btn, ev)
                    {
                        panel = Ext.getCmp('abs-budget-panel');
                        panel.body.load({
                            url: '/finance/cancelrpi/cancelrpi',
                            scripts: true
                        });
                    }
                }]

        })
//        
        var windowForm = ({
            title: 'Request Payment for Invoice Transaction',
            id: 'abs-budget-panel',
//            layout: 'fit',
            bodyCfg: {cls: 'xpanel-body-table', style: {'overflow': 'auto'}},
            bodyStyle: 'padding:15px;',
            loadMask: true,
            minWidth: 500,
            minHeight: 200,
            items: [requestcancelrpi
            ]
        });


        viewPort = Ext.getCmp('viewport');

        centerRegionTab = viewPort.getComponent('content-panel');
        centerRegionTab.items.each(function(c) {
            centerRegionTab.remove(c);
        });
        centerRegionTab.add(windowForm);
        panelBaru = Ext.getCmp('abs-budget-panel');
        centerRegionTab.layout.setActiveItem('abs-budget-panel');
        myPanel = Ext.getCmp('abs-budget-panel');
        showSubmenu('abs-budget-panel');

    })

</script>
<div id="upload-file"></div>
<div id="request_cancel_rpi"></div>