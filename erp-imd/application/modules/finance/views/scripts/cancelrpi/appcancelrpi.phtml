<style>

    .files{
        margin-top: 10px;
        margin-bottom: 10px;
        border:solid 1px #DEDEDE;
        background:#E0ECEE;
        /*color:#222222;*/
        color: #C15119;
        padding:4px;
        text-align:left;
    }
    .last-reject{
        margin-top: 10px;
        margin-bottom: 10px;
        border:solid 1px #DEDEDE;
        background:#EFEFEF;
        /*color:#222222;*/
        color: #C15119;
        padding:4px;
        text-align:left;
    }
    .all-reject{
        margin-top: 10px;
        margin-bottom: 10px;
        border:solid 1px #DEDEDE;
        background:#F6CBCA;
        color:#222222;
        padding:4px;
        text-align:left;
    }
    .all-approve{
        margin-top: 10px;
        margin-bottom: 10px;
        border:solid 1px #DEDEDE;
        /*background:#CEE6C3;*/
        color:#222222;
        padding:4px;
        text-align:left;
        height: 200px;
        overflow: auto;
    }

    .body {
        /*width: 720px;*/
        overflow: auto;
    }
    .title {
        width: 100%;
        text-align: center;
        font-size: 18px;
        font-weight: bold;
        margin-bottom: 10px;
    }
    .etc {
        width: 100%;
        height: 50px;
    }
    .kanan-etc {
        float: right;
        width: 48%;
    }
    .kiri-etc {
        float: left;
        width: 48%;
    }
    .blok {
        font-size: 12px;
        font-weight: bold;
        margin-bottom: 5px;
    }
    .budgetTable {
        width: 100%;
        font-size: 12px;
        font-weight: normal;
    }

    #approval {
        width: 100%;
        font-size: 12px;
        font-weight: bold;
        margin-top: 10px;
    }

</style>

<style type="text/css">
    .x-grid3-td-name b {
        font-family:tahoma, verdana;
        display:block;
        color:#333;
    }
    .x-grid3-td-name b i {
        font-weight:normal;
        font-style: normal;
        color:#000;
    }
    .x-grid3-td-name .personicon {
        padding-left:20px;
        background:transparent url(/images/engineer-icon.png) no-repeat 0 2px;
    }
    .x-grid3-td-name .x-grid3-cell-inner {
        white-space:normal;
    }

    .x-grid3-row-body p {
        margin:5px 20px 10px 25px !important;
        color:#555;
    }

    .rolename {
        color:#333;
    }
</style>

<script type="text/javascript">

    function submitData(params, dataArray)
    {
        var addurl = '';

        if (params == "" || params == '')
            return false;
        if (dataArray != undefined)
            addurl = '/next/' + dataArray.data['next'] + '/uid_next/' + dataArray.data['uid_next'] + '/workflow_structure_id/' + dataArray.data['workflow_structure_id'] + '/workflow_id/' + dataArray.data['workflow_id'] + '/workflow_item_id/' + dataArray.data['workflow_item_id'];
        Ext.getBody().mask('Loading..','x-mask-loading',false);
        Ext.Ajax.request({
            url: '/finance/cancelrpi/dorequestcancelrpi' + addurl,
            method: 'POST',
            success: function(resp) {
                Ext.getBody().unmask();
                var returnData = Ext.util.JSON.decode(resp.responseText);
                if (returnData.success)
                {
                    if (returnData.user != undefined && returnData.number == undefined)
                    {
                        showNextPerson(returnData.user, params);
                        return false;
                    }
                    else
                    {
                        Ext.Msg.alert('Success', 'Cancel RPI has been saved and submitted to current Workflow!' + '<br><br>Your Cancel RPI number is <b><font color="#ff0000">' + returnData.number + '</font></b>');
                        myPanel = Ext.getCmp('abs-budget-panel');
                        myPanel.body.load({
                            url: '/finance/cancelrpi/cancelrpi',
                            scripts: true
                        });
                    }
                }
                else
                {
                    Ext.Msg.alert('Error', returnData.msg);
                }
            },
            failure: function(action) {
                Ext.getBody().unmask();
                if (action.failureType == 'server') {
                    obj = Ext.util.JSON.decode(action.response.responseText);
                    Ext.Msg.alert('Error!', obj.errors.reason);
                } else {
                    Ext.Msg.alert('Warning!', 'Server is unreachable : ' + action.response.responseText);
                }
            },
            params: params
        });

    }

    function submitData2(params, dataArray)
    {
        var addurl = '';

        if (params == "" || params == '')
            return false;
        if (dataArray != undefined)
            addurl = '/next/' + dataArray.data['next'] + '/uid_next/' + dataArray.data['uid_next'] + '/workflow_structure_id/' + dataArray.data['workflow_structure_id'] + '/workflow_id/' + dataArray.data['workflow_id'] + '/workflow_item_id/' + dataArray.data['workflow_item_id'];
        Ext.getBody().mask('Loading..','x-mask-loading',false);
        Ext.Ajax.request({
            url: '/finance/cancelrpi/doupdatecancelrpi' + addurl,
            method: 'POST',
            success: function(resp) {
                Ext.getBody().unmask();
                var returnData = Ext.util.JSON.decode(resp.responseText);
                if (returnData.success)
                {
                    if (returnData.user != undefined && returnData.number == undefined)
                    {
                        showNextPerson(returnData.user, params, true);
                        return false;
                    }
                    else
                    {
                        Ext.Msg.alert('Success', 'Cancel RPI has been saved and submitted to current Workflow!');
                        myPanel = Ext.getCmp('abs-budget-panel');
                        myPanel.body.load({
                            url: '/finance/cancelrpi/cancelrpi',
                            scripts: true
                        });
                    }
                }
                else
                {
                    Ext.Msg.alert('Error', returnData.msg);
                }
            },
            failure: function(action) {
                    Ext.getBody().unmask();
                if (action.failureType == 'server') {
                    obj = Ext.util.JSON.decode(action.response.responseText);
                    Ext.Msg.alert('Error!', obj.errors.reason);
                } else {
                    Ext.Msg.alert('Warning!', 'Server is unreachable : ' + action.response.responseText);
                }
            },
            params: params
        });
    }

    function showNextPerson(userArray, params, isEdit)
    {

        var addlist = Ext.data.Record.create([
            {name: 'id', type: 'string'},
            {name: 'workflow_id', type: 'string'},
            {name: 'workflow_item_id', type: 'string'},
            {name: 'workflow_item_name', type: 'string'},
            {name: 'workflow_structure_id', type: 'string'},
            {name: 'next', type: 'string'},
            {name: 'uid_next', type: 'string'},
            {name: 'name', type: 'string'},
            {name: 'role_name', type: 'string'},
            {name: 'prj_kode', type: 'string'}
        ]);

        var storeUser = new Ext.data.Store({
            reader: new Ext.data.JsonReader({fields: addlist})
        });

        Ext.each(userArray, function(t, index) {
            var d = new addlist({
                id: t.id,
                workflow_id: t.workflow_id,
                workflow_item_id: t.workflow_item_id,
                workflow_item_name: t.workflow_item_name,
                workflow_structure_id: t.workflow_structure_id,
                uid_next: t.uid_next,
                next: t.next,
                name: t.name,
                role_name: t.role_name,
                prj_kode: t.prj_kode
            });
            storeUser.add(d);
            d = undefined;
        });

        var userColumns = [
            new Ext.grid.RowNumberer(),
            {header: "Receiver", dataIndex: 'name', width: 220, renderer: function(v, p, r) {
                    return '<div class="personicon"><b>' + r.data.name + '</b>&nbsp;<span class="rolename">' + r.data.role_name + '<br>Transaction Type: ' + r.data.workflow_item_name + '<br>Project : ' + r.data.prj_kode + '</span></div>';
                }}
        ];

        var bForm = new Ext.Window({
            id: 'choose-next',
            layout: 'border',
            width: 300,
            height: 350,
            modal: true,
            resizable: false,
            title: 'Choose Document Receiver',
            style: 'margin-top: 10px',
            labelAlign: 'right',
            stateful: false,
            items: [
                new Ext.grid.GridPanel({
                    width: 288,
                    height: 330,
                    id: 'site-grids',
                    region: 'center',
                    loadMask: true,
                    columns: userColumns,
                    store: storeUser,
                    sm: new Ext.grid.RowSelectionModel({
                        singleSelect: true
                    }),
                    viewConfig: {
                        forceFit: true,
                        enableRowBody: true,
                        showPreview: true,
                        getRowClass: function(record, rowIndex, p, ds) {
                            return 'x-grid3-row-expanded';
//                                            return 'x-grid3-row-collapsed';
                        }
                    },
                    listeners: {
                        'rowdblclick': function(g, rowIndex, e) {
                            var record = g.getStore().getAt(rowIndex);
                            if (isEdit)
                                submitData2(params, record);
                            else
                                submitData(params, record);
                            bForm.close();
                        }
                    }
                })
            ],
            buttons: [
                {
                    text: 'OK',
                    id: 'ok-next',
                    iconCls: 'silk-upd',
                    handler: function(btn, ev) {
                        var row = Ext.getCmp('site-grids').getSelectionModel().getSelections();
                        var record = row[0];
                        if (isEdit)
                            submitData2(params, record);
                        else
                            submitData(params, record);
                        bForm.close();
                    }

                },
                {
                    text: 'Cancel',
                    id: 'cancel',
                    handler: function(btn, ev) {
                        bForm.close();
                    }

                }


            ]
        });
        bForm.show();
    }
    ;

<?php
if (!$this->preview && !$this->show) {
    if ($this->approve) {
        ?>

            var trano = '<?= $this->docsID ?>';
            var uid = '<?= $this->uid ?>';
            var user_id = '<?= $this->userID ?>';



        <?php if ($this->reject) { ?>

                var cancelButton = new Ext.Button({
                    text: 'Goto Edit Cancel RPI',
                    iconCls: 'icon-go',
                    scale: 'large',
                    handler: function() {
                        myPanel = Ext.getCmp('abs-budget-panel');
                        myPanel.body.load({
                            url: '/finance/cancelrpi/editcancelrpi',
                            scripts: true
                        });
                    },
                    renderTo: 'cancel-button'
                });

        <?php } else {
            ?>

                var questionButton = new Ext.Button({
                    text: 'Ask Question',
                    iconCls: 'icon-ask',
                    scale: 'large',
                    handler: function() {
                        askQuestion('<?php echo $this->trano; ?>');
                    },
                    renderTo: 'ask-button'
                });

                var okButton = new Ext.Button({
                    text: 'Approve',
                    iconCls: 'icon-add',
                    scale: 'large',
                    handler: function() {
                        this.disable();
                        Ext.MessageBox.show({
                            title: 'Comment',
                            msg: 'Please enter comment:',
                            width: 300,
                            buttons: Ext.MessageBox.OKCANCEL,
                            multiline: true,
                            fn: showResultText2
                        });

                        function showResultText2(btn, text) {
                            var comment = '';
                            if (btn == 'ok')
                            {
                                comment = text;
                            }
                            else if (btn == 'cancel')
                                return false;
                            params = {trans: trano, user: uid, comment: comment, user_id: user_id};
                            Ext.getBody().mask('Loading..','x-mask-loading',false);
                            Ext.Ajax.request({
                                url: '/admin/workflow/approve',
                                method: 'POST',
                                success: function(resp) {
                                    Ext.getBody().unmask();
                                    var returnData = Ext.util.JSON.decode(resp.responseText);
                                    if (returnData.success)
                                    {
                                        //					Ext.Msg.alert('Success', 'Document has been approved!');
                                        getDocs();
                                        myPanel = Ext.getCmp('abs-budget-panel');
                                        myPanel.body.load({
                                            url: '/default/home/showprocessdocument',
                                            scripts: true
                                        });
                                    }
                                    else
                                    {
                                        Ext.Msg.alert('Error', returnData.msg);
                                    }
                                },
                                failure: function(action) {
                                        Ext.getBody().unmask();
                                    if (action.failureType == 'server') {
                                        obj = Ext.util.JSON.decode(action.response.responseText);
                                        Ext.Msg.alert('Error!', obj.errors.reason);
                                    } else {
                                        Ext.Msg.alert('Warning!', 'Server is unreachable : ' + action.response.responseText);
                                    }
                                },
                                params: params
                            });
                        }
                    },
                    renderTo: 'ok-button'
                });
                //
                var cancelButton = new Ext.Button({
                    text: 'Reject',
                    iconCls: 'icon-cancel',
                    scale: 'large',
                    handler: function() {
                        Ext.MessageBox.show({
                            title: 'Comment',
                            msg: 'Please enter comment:',
                            width: 300,
                            buttons: Ext.MessageBox.OKCANCEL,
                            multiline: true,
                            fn: showResultText
                        });

                        function showResultText(btn, text) {
                            var comment = '';
                            if (btn == 'ok')
                            {
                                comment = text;
                            }
                            else if (btn == 'cancel')
                                return false;
                            params = {trans: trano, user: uid, comment: comment, user_id: user_id};
                            Ext.getBody().mask('Loading..','x-mask-loading',false);
                            Ext.Ajax.request({
                                url: '/admin/workflow/reject',
                                method: 'POST',
                                success: function(resp) {
                                    Ext.getBody().unmask();
                                    var returnData = Ext.util.JSON.decode(resp.responseText);
                                    if (returnData.success)
                                    {
                                        //    				Ext.Msg.alert('Success', 'Document has been rejected!');
                                        getDocs();
                                        myPanel = Ext.getCmp('abs-budget-panel');
                                        myPanel.body.load({
                                            url: '/default/home/showprocessdocument',
                                            scripts: true
                                        });
                                    }
                                    else
                                    {
                                        Ext.Msg.alert('Error', returnData.msg);
                                    }
                                },
                                failure: function(action) {
                                    Ext.getBody().unmask();
                                    if (action.failureType == 'server') {
                                        obj = Ext.util.JSON.decode(action.response.responseText);
                                        Ext.Msg.alert('Error!', obj.errors.reason);
                                    } else {
                                        Ext.Msg.alert('Warning!', 'Server is unreachable : ' + action.response.responseText);
                                    }
                                },
                                params: params
                            });
                        }
                        ;


                    },
                    renderTo: 'cancel-button'
                });
                //
                var backButton = new Ext.Button({
                    text: 'Cancel',
                    scale: 'large',
                    handler: function() {
                        myPanel = Ext.getCmp('abs-budget-panel');
                        myPanel.body.load({
                            url: '<?php echo $this->urlBack; ?>',
                            scripts: true
                        });
                    },
                    renderTo: 'back-button'
                });

            <?php
        }
    } elseif (!$this->approve) {
        ?>
            var json = '<?php echo $this->jsonrpidata; ?>';
            var reason = '<?php echo $this->reason; ?>';
            var document_valid = '<?php echo $this->document_valid; ?>';
            var jsonFile = '<?php echo $this->jsonFile; ?>';

            var okButton = new Ext.Button({
                text: 'Submit',
                iconCls: 'icon-save',
                scale: 'large',
                handler: function() {
                    this.disable();

        <?php
       
        if (!$this->edit) {
            ?>
                        edit : false;
                        params = {posts: json, reason: reason, document_valid: document_valid, file: jsonFile};
                        submitData(params);
        <?php } else { ?>
                        var trano_edit = '<?= $this->tranoEdit ?>';
                        edit : true;
                        params = {posts: json, reason: reason, file: jsonFile,trano_edit : trano_edit};
                        submitData2(params);

        <?php } ?>
                },
                renderTo: 'ok-button'
            });

            var cancelButton = new Ext.Button({
                text: 'Cancel',
                iconCls: 'icon-cancel',
                scale: 'large',
                handler: function() {
        <?php
        
        if (!$this->edit) {
            ?>
                        params = {posts: json};
                        myPanel = Ext.getCmp('abs-budget-panel'); //Load the panel
                        myPanel.body.load({
                            url: '/finance/cancelrpi/cancelrpi/returnback/true', //the url
                            scripts: true,
                            params: params //our params goes here
                        });
        <?php } else { ?>
                        params = {posts: json, trano: '<?= $this->etc[0]['trano'] ?>'};
                        myPanel = Ext.getCmp('abs-budget-panel'); //Load the panel
                        myPanel.body.load({
                            url: '/finance/cancelrpi/editcancelrpi', //the url
                            scripts: true,
                            params: params //our params goes here
                        })
        <?php } ?>;
                },
                renderTo: 'cancel-button'
            });
        <?php
    }
}

//if ($this->edit || $this->approve) {
//    $rev = " (Rev. " . $this->etc[0]['rev'] . ")";
//    $displayNum = '<div class="blok">PR Number : ' . $this->etc[0]['trano'] . ' ' . $rev . '</div>';
//}
?>

</script>


<link rel="stylesheet" type="text/css" href="/css/table.css"/>

<div class="body">

    <div class="title" style="margin-bottom:20px">REQUEST FOR CANCEL RPI</div>


    <div class="ketin">
        <fieldset>
            <p>
                Requester : <?= $this->requesterName ?><br>
                Reason : <?= $this->reason ?>
            </p>
        </fieldset>
    </div>
    <?php if ($this->file != '') { ?>
        <div class="files">
            <b>Attachment Files :</b><br />
            <ul>
                <?php foreach ($this->file as $key => $val) { ?>
                    <li>- <a href="#" onclick="location.href = '/default/file/download/path/files/filename/<?php echo $val['savename']; ?>';"><?php echo $val['filename']; ?></a></li>
                <?php } ?>
            </ul>
        </div>
    <?php } ?>

    <br />
    <div class="etc">
        <div class="kiri-etc">
            <div class="blok">RPI Number : <?= $this->rpidata[0]['trano'] ?></div>
            <div class="blok">Revision : <?= $this->rpidata[0]['revisi'] ?></div>
            <div class="blok">Project : <?= $this->rpidata[0]['prj_kode'] ?> / <?= $this->rpidata[0]['prj_nama'] ?></div>
            <div class="blok">Valuta : <?= $this->rpidata[0]['val_kode'] ?></div>

        </div>
        <div class="kanan-etc">
            <div class="blok">Input Date : <?= $this->rpidata[0]['tgl'] ?></div>
            <div class="blok">Supplier : <?= $this->rpidata[0]['sup_nama'] ?></div>
            <div class="blok">PIC Sourcing : <?= $this->rpidata[0]['petugas'] ?></div>
        </div>
    </div>
    <button onclick="popup('/procurement/procurement/apprpi/approve/1/trano_show/<?= $this->trano_preview ?>/show/true')">View Document</button>

    <table id="mytable" cellspacing="0" style="margin-top:10px;">
        <tr>
            <th scope="col" colspan="5"><center>Transaction</center></th>
        </tr>
        <tr>
            <th scope="row" class="spec" colspan="4">RPI Value</th><td align="right"><?= number_format($this->rpidata[0]['total'], 2) ?></td>
        </tr>

        <tr>
            <th scope="row" class="spec" colspan="4">VAT 10%</th><td align="right"><?= number_format($this->rpidata[0]['ppn'], 2) ?></td>
        </tr>

        <tr>
            <th scope="row" class="spec" colspan="4">Grand Total</th><td align="right"><?= number_format($this->rpidata[0]['gtotal'], 2) ?></td>
        </tr>

        <tr>
            <th scope="row" class="spec">Remark</th>
            <td colspan="4">
                <?php
                if ($this->rpidata[0]['ket'] == '')
                    echo "&nbsp;";
                else
                    echo $this->rpidata[0]['ket'];
                ?>
            </td>
        </tr>

    </table>

    <div class="ketin">
        <fieldset>
            <legend>Internal Notes</legend>
            <p>
                <?= $this->rpidata[0]['ketin'] ?>
            </p>
        </fieldset>
    </div>

    <br />
    <br />
    <h1><center>RPI PAYMENT REPORT</center></h1>
    <div class="container">

        <?php
        if ($this->rpipaydata != '') {
            ?>

            <table id="budgetTable2" class="budgetTable2">
                <thead>
                    <tr>
                        <th><center><b>No</b></center></th>
                <th><center><b>Payment Number</b></center></th>
                <th><center><b>RPI Number</b></center></th>
                <th><center><b>Payment Date</b></center></th>
                <th><center><b>Payment Type</b></center></th>
                <th><center><b>Payment Value</b></center></th>
                </tr>
                </thead>
                <tbody>
                    <?php
                    $num = 0;
                    foreach ($this->rpipaydata as $key => $val) {
                        ?>

                        <tr>
                            <td><?= $num + 1 ?></td>
                            <td><?= $val['trano'] ?></td>
                            <td><?= $val['doc_trano'] ?></td>
                            <td><?= date("d - M - Y", strtotime($val['tgl'])) ?></td>
                            <td><?= $val['pola_bayar'] ?></td>
                            <td align="right"><?= number_format($val['total_bayar'], 2) ?></td>
                        </tr>

                        <?php
                        $paytotal += $val['total_bayar'];
                        $num++;
                    }
                    ?>

                    <tr>
                        <td colspan="5" align="right">Payment RPI Total</td>
                        <td align="right"><?= number_format($paytotal, 2) ?></td>
                    </tr>

                </tbody>
            </table>
        <?php } else { ?>
            <h2 style="color:red;"><center>This RPI doesn't have any Payment RPI.</center></h2>
        <?php } ?>

    </div>
    <?php
    if ($this->rpipaydata != '') {
        ?>
        <script type="text/javascript">

            (function() {
                var mySt = new superTable("budgetTable2", {
                    cssSkin: "sSky",
                    fixedCols: 1,
                    headerRows: 1
                });
            })();

        </script>
    <?php } ?>


    <div class="all-approve">
        <b>Approval History</b>
        <ul>
            <?php
            foreach ($this->approval as $key => $val) {
                ?>
                <li><?php echo "<b>" . $val['approve'] . "</b> " . date('d-m-Y H:i:s', strtotime($val['date'])) . " : " . $val['displayname'] . " (" . $val['display_name'] . ")<br />Sign : " . $val['signature'] . "<br />Comment : " . $val['comment']; ?></li>
                <?php
            }
            ?>
        </ul>
    </div>

    <div style="margin-top:10px;">
        <div id="ask-button" style="margin-left:5px;float: right;"></div>
        <div id="ok-button" style="margin-left:5px;float: right;"></div>
        <div id="cancel-button" style="margin-left:5px;float: right;"></div>
        <div id="back-button" style="margin-left:5px;float: right;"></div>
    </div>
</div>